//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_b "encoding/binary";_bg "errors";_d "fmt";_bea "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/internal/bitwise";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ba "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_fc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_be "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fe "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_fac "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_cg "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_caa "golang.org/x/xerrors";_ca "image";_cc "io";_c "math";_fa "strings";_g "time";);func (_aege *TextRegion )initSymbols ()error {const _ggbba ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_aaad :=range _aege .Header .RTSegments {if _aaad ==nil {return _fac .Error (_ggbba ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _aaad .Type ==0{_geade ,_dfa :=_aaad .GetSegmentData ();if _dfa !=nil {return _fac .Wrap (_dfa ,_ggbba ,"");};_fgfgb ,_caccg :=_geade .(*SymbolDictionary );if !_caccg {return _fac .Error (_ggbba ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fgfgb ._adeb =_aege ._gdfd ;_dgdf ,_dfa :=_fgfgb .GetDictionary ();if _dfa !=nil {return _fac .Wrap (_dfa ,_ggbba ,"");};_aege .Symbols =append (_aege .Symbols ,_dgdf ...);};};_aege .NumberOfSymbols =uint32 (len (_aege .Symbols ));return nil ;};func (_geeg *Header )writeReferredToSegments (_aegaf _e .BinaryWriter )(_gdf int ,_dfef error ){const _afec ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_egdg uint16 ;_ceb uint32 ;);_gbae :=_geeg .referenceSize ();_ddag :=1;_cea :=make ([]byte ,_gbae );for _ ,_dafcd :=range _geeg .RTSNumbers {switch _gbae {case 4:_ceb =uint32 (_dafcd );_b .BigEndian .PutUint32 (_cea ,_ceb );_ddag ,_dfef =_aegaf .Write (_cea );
if _dfef !=nil {return 0,_fac .Wrap (_dfef ,_afec ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_egdg =uint16 (_dafcd );_b .BigEndian .PutUint16 (_cea ,_egdg );_ddag ,_dfef =_aegaf .Write (_cea );if _dfef !=nil {return 0,_fac .Wrap (_dfef ,_afec ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _dfef =_aegaf .WriteByte (byte (_dafcd ));_dfef !=nil {return 0,_fac .Wrap (_dfef ,_afec ,"\u0075\u0069\u006et\u0038");};};_gdf +=_ddag ;};return _gdf ,nil ;};func (_badc *TextRegion )readUseRefinement ()error {if !_badc .UseRefinement ||_badc .SbrTemplate !=0{return nil ;
};var (_fgeb byte ;_fdfa error ;);_badc .SbrATX =make ([]int8 ,2);_badc .SbrATY =make ([]int8 ,2);_fgeb ,_fdfa =_badc ._addad .ReadByte ();if _fdfa !=nil {return _fdfa ;};_badc .SbrATX [0]=int8 (_fgeb );_fgeb ,_fdfa =_badc ._addad .ReadByte ();if _fdfa !=nil {return _fdfa ;
};_badc .SbrATY [0]=int8 (_fgeb );_fgeb ,_fdfa =_badc ._addad .ReadByte ();if _fdfa !=nil {return _fdfa ;};_badc .SbrATX [1]=int8 (_fgeb );_fgeb ,_fdfa =_badc ._addad .ReadByte ();if _fdfa !=nil {return _fdfa ;};_badc .SbrATY [1]=int8 (_fgeb );return nil ;
};func (_dgb *GenericRegion )GetRegionInfo ()*RegionSegment {return _dgb .RegionSegment };func (_febcd *Header )readNumberOfReferredToSegments (_ebca _e .StreamReader )(uint64 ,error ){const _dbad ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_fgea ,_baec :=_ebca .ReadBits (3);if _baec !=nil {return 0,_fac .Wrap (_baec ,_dbad ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_fgea &=0xf;var _cbg []byte ;if _fgea <=4{_cbg =make ([]byte ,5);for _fecg :=0;_fecg <=4;_fecg ++{_aecc ,_dfedb :=_ebca .ReadBit ();
if _dfedb !=nil {return 0,_fac .Wrap (_dfedb ,_dbad ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbg [_fecg ]=byte (_aecc );};}else {_fgea ,_baec =_ebca .ReadBits (29);if _baec !=nil {return 0,_baec ;};_fgea &=_c .MaxInt32 ;
_bcc :=(_fgea +8)>>3;_bcc <<=3;_cbg =make ([]byte ,_bcc );var _dgfcc uint64 ;for _dgfcc =0;_dgfcc < _bcc ;_dgfcc ++{_bdgd ,_bbcf :=_ebca .ReadBit ();if _bbcf !=nil {return 0,_fac .Wrap (_bbcf ,_dbad ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_cbg [_dgfcc ]=byte (_bdgd );};};return _fgea ,nil ;};func (_cdcbd *SymbolDictionary )InitEncode (symbols *_ba .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _ddcd ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_cdcbd .SdATX =[]int8 {3,-3,2,-2};_cdcbd .SdATY =[]int8 {-1,-1,-2,-2};_cdcbd ._febf =symbols ;_cdcbd ._eebe =make ([]int ,len (symbolList ));copy (_cdcbd ._eebe ,symbolList );if len (_cdcbd ._eebe )!=_cdcbd ._febf .Size (){return _fac .Error (_ddcd ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_cdcbd .NumberOfNewSymbols =uint32 (symbols .Size ());_cdcbd .NumberOfExportedSymbols =uint32 (symbols .Size ());_cdcbd ._eded =symbolMap ;_cdcbd ._bgdc =unborderSymbols ;return nil ;};func (_cab *template1 )setIndex (_dae *_fc .DecoderStats ){_dae .SetIndex (0x080)};
func (_bfb *GenericRefinementRegion )parseHeader ()(_ecb error ){_bea .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_bee :=_g .Now ();defer func (){if _ecb ==nil {_bea .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_g .Since (_bee ).Nanoseconds ());
}else {_bea .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ecb );
};}();if _ecb =_bfb .RegionInfo .parseHeader ();_ecb !=nil {return _ecb ;};_ ,_ecb =_bfb ._gd .ReadBits (6);if _ecb !=nil {return _ecb ;};_bfb .IsTPGROn ,_ecb =_bfb ._gd .ReadBool ();if _ecb !=nil {return _ecb ;};var _bacd int ;_bacd ,_ecb =_bfb ._gd .ReadBit ();
if _ecb !=nil {return _ecb ;};_bfb .TemplateID =int8 (_bacd );switch _bfb .TemplateID {case 0:_bfb .Template =_bfb ._gb ;if _ecb =_bfb .readAtPixels ();_ecb !=nil {return ;};case 1:_bfb .Template =_bfb ._ge ;};return nil ;};func (_gee *GenericRefinementRegion )String ()string {_eadb :=&_fa .Builder {};
_eadb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_eadb .WriteString (_gee .RegionInfo .String ()+"\u000a");_eadb .WriteString (_d .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gee .IsTPGROn ));
_eadb .WriteString (_d .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_gee .TemplateID ));_eadb .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gee .GrAtX ));
_eadb .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gee .GrAtY ));_eadb .WriteString (_d .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_gee .ReferenceDX ));
_eadb .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_gee .ReferenceDY ));return _eadb .String ();};type EndOfStripe struct{_fd _e .StreamReader ;_ea int ;};type Type int ;
func (_ede *GenericRegion )decodeTemplate1 (_cda ,_dabb ,_acg int ,_gge ,_cbc int )(_eda error ){const _caad ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_fad ,_ded int ;_gadf ,_dbea int ;_bab byte ;_fae ,_dced int ;
);if _cda >=1{_bab ,_eda =_ede .Bitmap .GetByte (_cbc );if _eda !=nil {return _fac .Wrap (_eda ,_caad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gadf =int (_bab );};if _cda >=2{_bab ,_eda =_ede .Bitmap .GetByte (_cbc -_ede .Bitmap .RowStride );
if _eda !=nil {return _fac .Wrap (_eda ,_caad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dbea =int (_bab )<<5;};_fad =((_gadf >>1)&0x1f8)|((_dbea >>1)&0x1e00);for _acb :=0;_acb < _acg ;_acb =_fae {var (_agbc byte ;_egf int ;);_fae =_acb +8;if _aded :=_dabb -_acb ;
_aded > 8{_egf =8;}else {_egf =_aded ;};if _cda > 0{_gadf <<=8;if _fae < _dabb {_bab ,_eda =_ede .Bitmap .GetByte (_cbc +1);if _eda !=nil {return _fac .Wrap (_eda ,_caad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gadf |=int (_bab );};};if _cda > 1{_dbea <<=8;
if _fae < _dabb {_bab ,_eda =_ede .Bitmap .GetByte (_cbc -_ede .Bitmap .RowStride +1);if _eda !=nil {return _fac .Wrap (_eda ,_caad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dbea |=int (_bab )<<5;};};for _gbdc :=0;_gbdc < _egf ;_gbdc ++{if _ede ._fcb {_ded =_ede .overrideAtTemplate1 (_fad ,_acb +_gbdc ,_cda ,int (_agbc ),_gbdc );
_ede ._afd .SetIndex (int32 (_ded ));}else {_ede ._afd .SetIndex (int32 (_fad ));};_dced ,_eda =_ede ._gfcd .DecodeBit (_ede ._afd );if _eda !=nil {return _fac .Wrap (_eda ,_caad ,"");};_agbc |=byte (_dced )<<uint (7-_gbdc );_bfc :=uint (8-_gbdc );_fad =((_fad &0xefb)<<1)|_dced |((_gadf >>_bfc )&0x8)|((_dbea >>_bfc )&0x200);
};if _afdf :=_ede .Bitmap .SetByte (_gge ,_agbc );_afdf !=nil {return _fac .Wrap (_afdf ,_caad ,"");};_gge ++;_cbc ++;};return nil ;};func (_aaee *RegionSegment )readCombinationOperator ()error {_cgec ,_fdef :=_aaee ._fggb .ReadBits (3);if _fdef !=nil {return _fdef ;
};_aaee .CombinaionOperator =_ba .CombinationOperator (_cgec &0xF);return nil ;};func (_ecdf *TextRegion )readRegionFlags ()error {var (_fffba int ;_gdcf uint64 ;_cabc error ;);_fffba ,_cabc =_ecdf ._addad .ReadBit ();if _cabc !=nil {return _cabc ;};_ecdf .SbrTemplate =int8 (_fffba );
_gdcf ,_cabc =_ecdf ._addad .ReadBits (5);if _cabc !=nil {return _cabc ;};_ecdf .SbDsOffset =int8 (_gdcf );if _ecdf .SbDsOffset > 0x0f{_ecdf .SbDsOffset -=0x20;};_fffba ,_cabc =_ecdf ._addad .ReadBit ();if _cabc !=nil {return _cabc ;};_ecdf .DefaultPixel =int8 (_fffba );
_gdcf ,_cabc =_ecdf ._addad .ReadBits (2);if _cabc !=nil {return _cabc ;};_ecdf .CombinationOperator =_ba .CombinationOperator (int (_gdcf )&0x3);_fffba ,_cabc =_ecdf ._addad .ReadBit ();if _cabc !=nil {return _cabc ;};_ecdf .IsTransposed =int8 (_fffba );
_gdcf ,_cabc =_ecdf ._addad .ReadBits (2);if _cabc !=nil {return _cabc ;};_ecdf .ReferenceCorner =int16 (_gdcf )&0x3;_gdcf ,_cabc =_ecdf ._addad .ReadBits (2);if _cabc !=nil {return _cabc ;};_ecdf .LogSBStrips =int16 (_gdcf )&0x3;_ecdf .SbStrips =1<<uint (_ecdf .LogSBStrips );
_fffba ,_cabc =_ecdf ._addad .ReadBit ();if _cabc !=nil {return _cabc ;};if _fffba ==1{_ecdf .UseRefinement =true ;};_fffba ,_cabc =_ecdf ._addad .ReadBit ();if _cabc !=nil {return _cabc ;};if _fffba ==1{_ecdf .IsHuffmanEncoded =true ;};return nil ;};func (_gcbb *Header )pageSize ()uint {if _gcbb .PageAssociation <=255{return 1;
};return 4;};func (_caeed *HalftoneRegion )renderPattern (_ggab [][]int )(_adac error ){var _ebcg ,_gabf int ;for _gabb :=0;_gabb < int (_caeed .HGridHeight );_gabb ++{for _adfg :=0;_adfg < int (_caeed .HGridWidth );_adfg ++{_ebcg =_caeed .computeX (_gabb ,_adfg );
_gabf =_caeed .computeY (_gabb ,_adfg );_agg :=_caeed .Patterns [_ggab [_gabb ][_adfg ]];if _adac =_ba .Blit (_agg ,_caeed .HalftoneRegionBitmap ,_ebcg +int (_caeed .HGridX ),_gabf +int (_caeed .HGridY ),_caeed .CombinationOperator );_adac !=nil {return _adac ;
};};};return nil ;};type template0 struct{};func (_acdgc *SymbolDictionary )encodeSymbols (_gcfc _e .BinaryWriter )(_dbadd int ,_efg error ){const _agfg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_ecdd :=_fe .New ();_ecdd .Init ();
_dbgb ,_efg :=_acdgc ._febf .SelectByIndexes (_acdgc ._eebe );if _efg !=nil {return 0,_fac .Wrap (_efg ,_agfg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_ffff :=map[*_ba .Bitmap ]int {};for _ebf ,_bggg :=range _dbgb .Values {_ffff [_bggg ]=_ebf ;};_dbgb .SortByHeight ();
var _fgeab ,_abfd int ;_dbcb ,_efg :=_dbgb .GroupByHeight ();if _efg !=nil {return 0,_fac .Wrap (_efg ,_agfg ,"");};for _ ,_gfab :=range _dbcb .Values {_eadg :=_gfab .Values [0].Height ;_fgff :=_eadg -_fgeab ;if _efg =_ecdd .EncodeInteger (_fe .IADH ,_fgff );
_efg !=nil {return 0,_fac .Wrapf (_efg ,_agfg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fgff );};_fgeab =_eadg ;_cdfa ,_edaff :=_gfab .GroupByWidth ();if _edaff !=nil {return 0,_fac .Wrapf (_edaff ,_agfg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_eadg );
};var _faab int ;for _ ,_cbfd :=range _cdfa .Values {for _ ,_bebg :=range _cbfd .Values {_eege :=_bebg .Width ;_fada :=_eege -_faab ;if _edaff =_ecdd .EncodeInteger (_fe .IADW ,_fada );_edaff !=nil {return 0,_fac .Wrapf (_edaff ,_agfg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_fada );
};_faab +=_fada ;if _edaff =_ecdd .EncodeBitmap (_bebg ,false );_edaff !=nil {return 0,_fac .Wrapf (_edaff ,_agfg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_eadg ,_eege );};_dcgc :=_ffff [_bebg ];
_acdgc ._eded [_dcgc ]=_abfd ;_abfd ++;};};if _edaff =_ecdd .EncodeOOB (_fe .IADW );_edaff !=nil {return 0,_fac .Wrap (_edaff ,_agfg ,"\u0049\u0041\u0044\u0057");};};if _efg =_ecdd .EncodeInteger (_fe .IAEX ,0);_efg !=nil {return 0,_fac .Wrap (_efg ,_agfg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _efg =_ecdd .EncodeInteger (_fe .IAEX ,len (_acdgc ._eebe ));_efg !=nil {return 0,_fac .Wrap (_efg ,_agfg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_ecdd .Final ();_afeef ,_efg :=_ecdd .WriteTo (_gcfc );
if _efg !=nil {return 0,_fac .Wrap (_efg ,_agfg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_afeef ),nil ;};func (_cbfc *PageInformationSegment )Size ()int {return 19};type SegmentEncoder interface{Encode (_cfa _e .BinaryWriter )(_dafd int ,_eaee error );};func (_ceg *GenericRegion )computeSegmentDataStructure ()error {_ceg .DataOffset =_ceg ._cge .StreamPosition ();
_ceg .DataHeaderLength =_ceg .DataOffset -_ceg .DataHeaderOffset ;_ceg .DataLength =int64 (_ceg ._cge .Length ())-_ceg .DataHeaderLength ;return nil ;};func (_cedg *HalftoneRegion )GetRegionBitmap ()(*_ba .Bitmap ,error ){if _cedg .HalftoneRegionBitmap !=nil {return _cedg .HalftoneRegionBitmap ,nil ;
};var _fecf error ;_cedg .HalftoneRegionBitmap =_ba .New (int (_cedg .RegionSegment .BitmapWidth ),int (_cedg .RegionSegment .BitmapHeight ));if _cedg .Patterns ==nil ||len (_cedg .Patterns )==0{_cedg .Patterns ,_fecf =_cedg .GetPatterns ();if _fecf !=nil {return nil ,_fecf ;
};};if _cedg .HDefaultPixel ==1{_cedg .HalftoneRegionBitmap .SetDefaultPixel ();};_gcec :=_c .Ceil (_c .Log (float64 (len (_cedg .Patterns )))/_c .Log (2));_gaeb :=int (_gcec );var _ege [][]int ;_ege ,_fecf =_cedg .grayScaleDecoding (_gaeb );if _fecf !=nil {return nil ,_fecf ;
};if _fecf =_cedg .renderPattern (_ege );_fecf !=nil {return nil ,_fecf ;};return _cedg .HalftoneRegionBitmap ,nil ;};func (_cgbb *GenericRegion )Init (h *Header ,r _e .StreamReader )error {_cgbb .RegionSegment =NewRegionSegment (r );_cgbb ._cge =r ;return _cgbb .parseHeader ();
};func (_agdd *PageInformationSegment )Init (h *Header ,r _e .StreamReader )(_egff error ){_agdd ._acgg =r ;if _egff =_agdd .parseHeader ();_egff !=nil {return _fac .Wrap (_egff ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_agcb *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ba .Points ,symbols *_ba .Bitmaps ,classIDs *_ee .IntSlice ,boxes *_ba .Boxes ,width ,height ,symBits int ){_agcb .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_agcb ._ebbga =globalSymbolsMap ;_agcb ._ggeaa =localSymbolsMap ;_agcb ._ggfd =comps ;_agcb ._dcdg =inLL ;_agcb ._gead =symbols ;_agcb ._fadc =classIDs ;_agcb ._dbag =boxes ;_agcb ._ffae =symBits ;};type PageInformationSegment struct{_acgg _e .StreamReader ;
PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_cfg bool ;_bfbg _ba .CombinationOperator ;_cbgc bool ;DefaultPixelValue uint8 ;_dgdg bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_cac *Header )CleanSegmentData (){if _cac .SegmentData !=nil {_cac .SegmentData =nil ;
};};func (_cggg *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _cggg ._cfg };type template1 struct{};func (_fcbd *PatternDictionary )GetDictionary ()([]*_ba .Bitmap ,error ){if _fcbd .Patterns !=nil {return _fcbd .Patterns ,nil ;
};if !_fcbd .IsMMREncoded {_fcbd .setGbAtPixels ();};_dcfd :=NewGenericRegion (_fcbd ._efef );_dcfd .setParametersMMR (_fcbd .IsMMREncoded ,_fcbd .DataOffset ,_fcbd .DataLength ,uint32 (_fcbd .HdpHeight ),(_fcbd .GrayMax +1)*uint32 (_fcbd .HdpWidth ),_fcbd .HDTemplate ,false ,false ,_fcbd .GBAtX ,_fcbd .GBAtY );
_eccaf ,_acac :=_dcfd .GetRegionBitmap ();if _acac !=nil {return nil ,_acac ;};if _acac =_fcbd .extractPatterns (_eccaf );_acac !=nil {return nil ,_acac ;};return _fcbd .Patterns ,nil ;};func (_dba *GenericRegion )overrideAtTemplate0a (_aca ,_geeb ,_edb ,_cgbbf ,_ega ,_dgfc int )int {if _dba .GBAtOverride [0]{_aca &=0xFFEF;
if _dba .GBAtY [0]==0&&_dba .GBAtX [0]>=-int8 (_ega ){_aca |=(_cgbbf >>uint (int8 (_dgfc )-_dba .GBAtX [0]&0x1))<<4;}else {_aca |=int (_dba .getPixel (_geeb +int (_dba .GBAtX [0]),_edb +int (_dba .GBAtY [0])))<<4;};};if _dba .GBAtOverride [1]{_aca &=0xFBFF;
if _dba .GBAtY [1]==0&&_dba .GBAtX [1]>=-int8 (_ega ){_aca |=(_cgbbf >>uint (int8 (_dgfc )-_dba .GBAtX [1]&0x1))<<10;}else {_aca |=int (_dba .getPixel (_geeb +int (_dba .GBAtX [1]),_edb +int (_dba .GBAtY [1])))<<10;};};if _dba .GBAtOverride [2]{_aca &=0xF7FF;
if _dba .GBAtY [2]==0&&_dba .GBAtX [2]>=-int8 (_ega ){_aca |=(_cgbbf >>uint (int8 (_dgfc )-_dba .GBAtX [2]&0x1))<<11;}else {_aca |=int (_dba .getPixel (_geeb +int (_dba .GBAtX [2]),_edb +int (_dba .GBAtY [2])))<<11;};};if _dba .GBAtOverride [3]{_aca &=0x7FFF;
if _dba .GBAtY [3]==0&&_dba .GBAtX [3]>=-int8 (_ega ){_aca |=(_cgbbf >>uint (int8 (_dgfc )-_dba .GBAtX [3]&0x1))<<15;}else {_aca |=int (_dba .getPixel (_geeb +int (_dba .GBAtX [3]),_edb +int (_dba .GBAtY [3])))<<15;};};return _aca ;};func (_cadc *PageInformationSegment )Encode (w _e .BinaryWriter )(_aegf int ,_bdae error ){const _dfb ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_afga :=make ([]byte ,4);_b .BigEndian .PutUint32 (_afga ,uint32 (_cadc .PageBMWidth ));_aegf ,_bdae =w .Write (_afga );if _bdae !=nil {return _aegf ,_fac .Wrap (_bdae ,_dfb ,"\u0077\u0069\u0064t\u0068");};_b .BigEndian .PutUint32 (_afga ,uint32 (_cadc .PageBMHeight ));
var _gbbg int ;_gbbg ,_bdae =w .Write (_afga );if _bdae !=nil {return _gbbg +_aegf ,_fac .Wrap (_bdae ,_dfb ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_aegf +=_gbbg ;_b .BigEndian .PutUint32 (_afga ,uint32 (_cadc .ResolutionX ));_gbbg ,_bdae =w .Write (_afga );
if _bdae !=nil {return _gbbg +_aegf ,_fac .Wrap (_bdae ,_dfb ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_aegf +=_gbbg ;_b .BigEndian .PutUint32 (_afga ,uint32 (_cadc .ResolutionY ));if _gbbg ,_bdae =w .Write (_afga );_bdae !=nil {return _gbbg +_aegf ,_fac .Wrap (_bdae ,_dfb ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_aegf +=_gbbg ;if _bdae =_cadc .encodeFlags (w );_bdae !=nil {return _aegf ,_fac .Wrap (_bdae ,_dfb ,"");};_aegf ++;if _gbbg ,_bdae =_cadc .encodeStripingInformation (w );_bdae !=nil {return _aegf ,_fac .Wrap (_bdae ,_dfb ,"");};_aegf +=_gbbg ;return _aegf ,nil ;
};func (_acf *GenericRefinementRegion )setParameters (_cfd *_fc .DecoderStats ,_gbee *_fc .Decoder ,_agb int8 ,_gcf ,_abf uint32 ,_dab *_ba .Bitmap ,_gba ,_baefa int32 ,_gfe bool ,_agf []int8 ,_ggd []int8 ){_bea .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _cfd !=nil {_acf ._gdc =_cfd ;};if _gbee !=nil {_acf ._dc =_gbee ;};_acf .TemplateID =_agb ;_acf .RegionInfo .BitmapWidth =_gcf ;_acf .RegionInfo .BitmapHeight =_abf ;_acf .ReferenceBitmap =_dab ;_acf .ReferenceDX =_gba ;_acf .ReferenceDY =_baefa ;_acf .IsTPGROn =_gfe ;
_acf .GrAtX =_agf ;_acf .GrAtY =_ggd ;_acf .RegionBitmap =nil ;_bea .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_acf );
};func (_ebec *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _ebec .IsHuffmanEncoded {return _ebec .decodeHeightClassDeltaHeightWithHuffman ();};_cfge ,_abe :=_ebec ._bbce .DecodeInt (_ebec ._eeba );if _abe !=nil {return 0,_abe ;};
return int64 (_cfge ),nil ;};type TextRegion struct{_addad _e .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ba .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;
UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_cfgc int64 ;
SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ba .Bitmap ;Symbols []*_ba .Bitmap ;_ffdc *_fc .Decoder ;_ebbg *GenericRefinementRegion ;_dcbac *_fc .DecoderStats ;_badf *_fc .DecoderStats ;_dbgbc *_fc .DecoderStats ;_dfgf *_fc .DecoderStats ;_eaad *_fc .DecoderStats ;
_bbcc *_fc .DecoderStats ;_gadfb *_fc .DecoderStats ;_gdfd *_fc .DecoderStats ;_efefb *_fc .DecoderStats ;_ddcf *_fc .DecoderStats ;_ebfef *_fc .DecoderStats ;_babg int8 ;_gdgf *_be .FixedSizeTable ;Header *Header ;_aabd _be .Tabler ;_affea _be .Tabler ;
_gedf _be .Tabler ;_ceaff _be .Tabler ;_dbadda _be .Tabler ;_bfaf _be .Tabler ;_gdde _be .Tabler ;_bbdg _be .Tabler ;_ebbga ,_ggeaa map[int ]int ;_ggfd []int ;_dcdg *_ba .Points ;_gead *_ba .Bitmaps ;_fadc *_ee .IntSlice ;_bedc ,_ffae int ;_dbag *_ba .Boxes ;
};func (_dbca *TableSegment )HtHigh ()int32 {return _dbca ._ccdde };type PatternDictionary struct{_efef _e .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;
HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ba .Bitmap ;GrayMax uint32 ;};func (_daaf *PageInformationSegment )CombinationOperator ()_ba .CombinationOperator {return _daaf ._bfbg ;};var _ templater =&template0 {};func (_dbc *Header )readHeaderLength (_eadde _e .StreamReader ,_ecaa int64 ){_dbc .HeaderLength =_eadde .StreamPosition ()-_ecaa ;
};func (_dccfe *Header )readSegmentDataLength (_adcge _e .StreamReader )(_dbaa error ){_dccfe .SegmentDataLength ,_dbaa =_adcge .ReadBits (32);if _dbaa !=nil {return _dbaa ;};_dccfe .SegmentDataLength &=_c .MaxInt32 ;if _dccfe .SegmentDataLength > _adcge .Length (){_dccfe .SegmentDataLength =_adcge .Length ();
};return nil ;};func (_ecf *GenericRefinementRegion )getPixel (_de *_ba .Bitmap ,_cdd ,_dgd int )int {if _cdd < 0||_cdd >=_de .Width {return 0;};if _dgd < 0||_dgd >=_de .Height {return 0;};if _de .GetPixel (_cdd ,_dgd ){return 1;};return 0;};func (_fdb *GenericRegion )writeGBAtPixels (_fgfdg _e .BinaryWriter )(_acfc int ,_bdg error ){const _cgbbb ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _fdb .UseMMR {return 0,nil ;};_cfb :=1;if _fdb .GBTemplate ==0{_cfb =4;}else if _fdb .UseExtTemplates {_cfb =12;};if len (_fdb .GBAtX )!=_cfb {return 0,_fac .Errorf (_cgbbb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_fdb .GBAtY )!=_cfb {return 0,_fac .Errorf (_cgbbb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _gbaf :=0;_gbaf < _cfb ;_gbaf ++{if _bdg =_fgfdg .WriteByte (byte (_fdb .GBAtX [_gbaf ]));_bdg !=nil {return _acfc ,_fac .Wrap (_bdg ,_cgbbb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_acfc ++;if _bdg =_fgfdg .WriteByte (byte (_fdb .GBAtY [_gbaf ]));
_bdg !=nil {return _acfc ,_fac .Wrap (_bdg ,_cgbbb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_acfc ++;};return _acfc ,nil ;};func (_afcb *PatternDictionary )parseHeader ()error {_bea .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_bea .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_gaad :=_afcb ._efef .ReadBits (5);if _gaad !=nil {return _gaad ;};if _gaad =_afcb .readTemplate ();_gaad !=nil {return _gaad ;};if _gaad =_afcb .readIsMMREncoded ();_gaad !=nil {return _gaad ;};if _gaad =_afcb .readPatternWidthAndHeight ();_gaad !=nil {return _gaad ;
};if _gaad =_afcb .readGrayMax ();_gaad !=nil {return _gaad ;};if _gaad =_afcb .computeSegmentDataStructure ();_gaad !=nil {return _gaad ;};return _afcb .checkInput ();};func (_ccdd *GenericRegion )Encode (w _e .BinaryWriter )(_dcfg int ,_dca error ){const _bfeg ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _ccdd .Bitmap ==nil {return 0,_fac .Error (_bfeg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_afad ,_dca :=_ccdd .RegionSegment .Encode (w );if _dca !=nil {return 0,_fac .Wrap (_dca ,_bfeg ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_dcfg +=_afad ;if _dca =w .SkipBits (4);_dca !=nil {return _dcfg ,_fac .Wrap (_dca ,_bfeg ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _geec int ;if _ccdd .IsTPGDon {_geec =1;};if _dca =w .WriteBit (_geec );
_dca !=nil {return _dcfg ,_fac .Wrap (_dca ,_bfeg ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_geec =0;if _dca =w .WriteBit (int (_ccdd .GBTemplate >>1)&0x01);_dca !=nil {return _dcfg ,_fac .Wrap (_dca ,_bfeg ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _dca =w .WriteBit (int (_ccdd .GBTemplate )&0x01);_dca !=nil {return _dcfg ,_fac .Wrap (_dca ,_bfeg ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _ccdd .UseMMR {_geec =1;};if _dca =w .WriteBit (_geec );
_dca !=nil {return _dcfg ,_fac .Wrap (_dca ,_bfeg ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dcfg ++;if _afad ,_dca =_ccdd .writeGBAtPixels (w );_dca !=nil {return _dcfg ,_fac .Wrap (_dca ,_bfeg ,"");};_dcfg +=_afad ;_cede :=_fe .New ();
if _dca =_cede .EncodeBitmap (_ccdd .Bitmap ,_ccdd .IsTPGDon );_dca !=nil {return _dcfg ,_fac .Wrap (_dca ,_bfeg ,"");};_cede .Final ();var _fcd int64 ;if _fcd ,_dca =_cede .WriteTo (w );_dca !=nil {return _dcfg ,_fac .Wrap (_dca ,_bfeg ,"");};_dcfg +=int (_fcd );
return _dcfg ,nil ;};func (_babd *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_beaa ,_agcg :=_babd ._acgg .ReadBit ();if _agcg !=nil {return _agcg ;};if _beaa ==1{_babd ._cfg =true ;};return nil ;};func (_bdee *Header )writeReferredToCount (_fdee _e .BinaryWriter )(_gdgc int ,_eegb error ){const _afb ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_bdee .RTSNumbers =make ([]int ,len (_bdee .RTSegments ));for _facd ,_dfcce :=range _bdee .RTSegments {_bdee .RTSNumbers [_facd ]=int (_dfcce .SegmentNumber );};if len (_bdee .RTSNumbers )<=4{var _fddb byte ;if len (_bdee .RetainBits )>=1{_fddb =_bdee .RetainBits [0];
};_fddb |=byte (len (_bdee .RTSNumbers ))<<5;if _eegb =_fdee .WriteByte (_fddb );_eegb !=nil {return 0,_fac .Wrap (_eegb ,_afb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_ggca :=uint32 (len (_bdee .RTSNumbers ));
_eccf :=make ([]byte ,4+_ee .Ceil (len (_bdee .RTSNumbers )+1,8));_ggca |=0x7<<29;_b .BigEndian .PutUint32 (_eccf ,_ggca );copy (_eccf [1:],_bdee .RetainBits );_gdgc ,_eegb =_fdee .Write (_eccf );if _eegb !=nil {return 0,_fac .Wrap (_eegb ,_afb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _gdgc ,nil ;};func (_cdaga *SymbolDictionary )encodeATFlags (_bacc _e .BinaryWriter )(_facf int ,_fbac error ){const _abb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _cdaga .IsHuffmanEncoded ||_cdaga .SdTemplate !=0{return 0,nil ;
};_fdcd :=4;if _cdaga .SdTemplate !=0{_fdcd =1;};for _bgdg :=0;_bgdg < _fdcd ;_bgdg ++{if _fbac =_bacc .WriteByte (byte (_cdaga .SdATX [_bgdg ]));_fbac !=nil {return _facf ,_fac .Wrapf (_fbac ,_abb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bgdg );
};_facf ++;if _fbac =_bacc .WriteByte (byte (_cdaga .SdATY [_bgdg ]));_fbac !=nil {return _facf ,_fac .Wrapf (_fbac ,_abb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bgdg );};_facf ++;};return _facf ,nil ;};func (_geeab *SymbolDictionary )readRefinementAtPixels (_aedb int )error {_geeab .SdrATX =make ([]int8 ,_aedb );
_geeab .SdrATY =make ([]int8 ,_aedb );var (_fbcb byte ;_fafg error ;);for _adebb :=0;_adebb < _aedb ;_adebb ++{_fbcb ,_fafg =_geeab ._eced .ReadByte ();if _fafg !=nil {return _fafg ;};_geeab .SdrATX [_adebb ]=int8 (_fbcb );_fbcb ,_fafg =_geeab ._eced .ReadByte ();
if _fafg !=nil {return _fafg ;};_geeab .SdrATY [_adebb ]=int8 (_fbcb );};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_agba *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _agba ._eddf ==nil {var (_dbdf int ;
_fccg error ;);if _agba .SdHuffDecodeHeightSelection ==3{_dbdf ++;};if _agba .SdHuffDecodeWidthSelection ==3{_dbdf ++;};_agba ._eddf ,_fccg =_agba .getUserTable (_dbdf );if _fccg !=nil {return 0,_fccg ;};};return _agba ._eddf .Decode (_agba ._eced );};
func (_ccggg *TableSegment )parseHeader ()error {var (_gdfb int ;_dfgb uint64 ;_eace error ;);_gdfb ,_eace =_ccggg ._cead .ReadBit ();if _eace !=nil {return _eace ;};if _gdfb ==1{return _d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gdfb );
};if _dfgb ,_eace =_ccggg ._cead .ReadBits (3);_eace !=nil {return _eace ;};_ccggg ._edbebc =(int32 (_dfgb )+1)&0xf;if _dfgb ,_eace =_ccggg ._cead .ReadBits (3);_eace !=nil {return _eace ;};_ccggg ._dfgg =(int32 (_dfgb )+1)&0xf;if _dfgb ,_eace =_ccggg ._cead .ReadBits (32);
_eace !=nil {return _eace ;};_ccggg ._efcb =int32 (_dfgb &_c .MaxInt32 );if _dfgb ,_eace =_ccggg ._cead .ReadBits (32);_eace !=nil {return _eace ;};_ccggg ._ccdde =int32 (_dfgb &_c .MaxInt32 );return nil ;};func (_agdb *PatternDictionary )readGrayMax ()error {_adaf ,_ebga :=_agdb ._efef .ReadBits (32);
if _ebga !=nil {return _ebga ;};_agdb .GrayMax =uint32 (_adaf &_c .MaxUint32 );return nil ;};func (_a *EndOfStripe )parseHeader (_ae *Header ,_fec _e .StreamReader )error {_gf ,_eb :=_a ._fd .ReadBits (32);if _eb !=nil {return _eb ;};_a ._ea =int (_gf &_c .MaxInt32 );
return nil ;};func (_dgfccb *PatternDictionary )readIsMMREncoded ()error {_cddf ,_bdc :=_dgfccb ._efef .ReadBit ();if _bdc !=nil {return _bdc ;};if _cddf !=0{_dgfccb .IsMMREncoded =true ;};return nil ;};func (_aggb *TextRegion )decodeDfs ()(int64 ,error ){if _aggb .IsHuffmanEncoded {if _aggb .SbHuffFS ==3{if _aggb ._aabd ==nil {var _dffc error ;
_aggb ._aabd ,_dffc =_aggb .getUserTable (0);if _dffc !=nil {return 0,_dffc ;};};return _aggb ._aabd .Decode (_aggb ._addad );};_gecfc ,_aage :=_be .GetStandardTable (6+int (_aggb .SbHuffFS ));if _aage !=nil {return 0,_aage ;};return _gecfc .Decode (_aggb ._addad );
};_ggeb ,_ccef :=_aggb ._ffdc .DecodeInt (_aggb ._badf );if _ccef !=nil {return 0,_ccef ;};return int64 (_ggeb ),nil ;};var _ SegmentEncoder =&RegionSegment {};func (_ffdbg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _efce ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _ffdbg .SbHuffRSize ==0{_eff ,_ecde :=_be .GetStandardTable (1);if _ecde !=nil {return 0,_fac .Wrap (_ecde ,_efce ,"");};return _eff .Decode (_ffdbg ._addad );};if _ffdbg ._bbdg ==nil {var (_gabbc int ;_bdfdg error ;);if _ffdbg .SbHuffFS ==3{_gabbc ++;
};if _ffdbg .SbHuffDS ==3{_gabbc ++;};if _ffdbg .SbHuffDT ==3{_gabbc ++;};if _ffdbg .SbHuffRDWidth ==3{_gabbc ++;};if _ffdbg .SbHuffRDHeight ==3{_gabbc ++;};if _ffdbg .SbHuffRDX ==3{_gabbc ++;};if _ffdbg .SbHuffRDY ==3{_gabbc ++;};_ffdbg ._bbdg ,_bdfdg =_ffdbg .getUserTable (_gabbc );
if _bdfdg !=nil {return 0,_fac .Wrap (_bdfdg ,_efce ,"");};};_bebfc ,_gafd :=_ffdbg ._bbdg .Decode (_ffdbg ._addad );if _gafd !=nil {return 0,_fac .Wrap (_gafd ,_efce ,"");};return _bebfc ,nil ;};func (_aega *Header )parse (_caab Documenter ,_dgeb _e .StreamReader ,_dccc int64 ,_ccbe OrganizationType )(_afdb error ){const _fcg ="\u0070\u0061\u0072s\u0065";
_bea .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _afdb !=nil {_bea .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_afdb );
}else {_bea .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_afdb =_dgeb .Seek (_dccc ,_cc .SeekStart );
if _afdb !=nil {return _fac .Wrap (_afdb ,_fcg ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _afdb =_aega .readSegmentNumber (_dgeb );_afdb !=nil {return _fac .Wrap (_afdb ,_fcg ,"");};if _afdb =_aega .readHeaderFlags ();_afdb !=nil {return _fac .Wrap (_afdb ,_fcg ,"");
};var _abdc uint64 ;_abdc ,_afdb =_aega .readNumberOfReferredToSegments (_dgeb );if _afdb !=nil {return _fac .Wrap (_afdb ,_fcg ,"");};_aega .RTSNumbers ,_afdb =_aega .readReferredToSegmentNumbers (_dgeb ,int (_abdc ));if _afdb !=nil {return _fac .Wrap (_afdb ,_fcg ,"");
};_afdb =_aega .readSegmentPageAssociation (_caab ,_dgeb ,_abdc ,_aega .RTSNumbers ...);if _afdb !=nil {return _fac .Wrap (_afdb ,_fcg ,"");};if _aega .Type !=TEndOfFile {if _afdb =_aega .readSegmentDataLength (_dgeb );_afdb !=nil {return _fac .Wrap (_afdb ,_fcg ,"");
};};_aega .readDataStartOffset (_dgeb ,_ccbe );_aega .readHeaderLength (_dgeb ,_dccc );_bea .Log .Trace ("\u0025\u0073",_aega );return nil ;};func (_dgc *Header )subInputReader ()(_e .StreamReader ,error ){return _e .NewSubstreamReader (_dgc .Reader ,_dgc .SegmentDataStartOffset ,_dgc .SegmentDataLength );
};func (_bfdb *PageInformationSegment )parseHeader ()(_gacf error ){_bea .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _bcdf ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _gacf !=nil {_bcdf +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_gacf .Error ();}else {_bcdf +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_bea .Log .Trace (_bcdf );}();if _gacf =_bfdb .readWidthAndHeight ();
_gacf !=nil {return _gacf ;};if _gacf =_bfdb .readResolution ();_gacf !=nil {return _gacf ;};_ ,_gacf =_bfdb ._acgg .ReadBit ();if _gacf !=nil {return _gacf ;};if _gacf =_bfdb .readCombinationOperatorOverrideAllowed ();_gacf !=nil {return _gacf ;};if _gacf =_bfdb .readRequiresAuxiliaryBuffer ();
_gacf !=nil {return _gacf ;};if _gacf =_bfdb .readCombinationOperator ();_gacf !=nil {return _gacf ;};if _gacf =_bfdb .readDefaultPixelValue ();_gacf !=nil {return _gacf ;};if _gacf =_bfdb .readContainsRefinement ();_gacf !=nil {return _gacf ;};if _gacf =_bfdb .readIsLossless ();
_gacf !=nil {return _gacf ;};if _gacf =_bfdb .readIsStriped ();_gacf !=nil {return _gacf ;};if _gacf =_bfdb .readMaxStripeSize ();_gacf !=nil {return _gacf ;};if _gacf =_bfdb .checkInput ();_gacf !=nil {return _gacf ;};_bea .Log .Trace ("\u0025\u0073",_bfdb );
return nil ;};func (_gfd *GenericRegion )setParameters (_dcabg bool ,_dda ,_bgaa int64 ,_bbef ,_aadc uint32 ){_gfd .IsMMREncoded =_dcabg ;_gfd .DataOffset =_dda ;_gfd .DataLength =_bgaa ;_gfd .RegionSegment .BitmapHeight =_bbef ;_gfd .RegionSegment .BitmapWidth =_aadc ;
_gfd ._cdg =nil ;_gfd .Bitmap =nil ;};func (_abbe *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _abbe .SdHuffDecodeHeightSelection {case 0:_cdcbc ,_eefc :=_be .GetStandardTable (4);if _eefc !=nil {return 0,_eefc ;};
return _cdcbc .Decode (_abbe ._eced );case 1:_feba ,_ebea :=_be .GetStandardTable (5);if _ebea !=nil {return 0,_ebea ;};return _feba .Decode (_abbe ._eced );case 3:if _abbe ._fade ==nil {_ggba ,_bdbff :=_be .GetStandardTable (0);if _bdbff !=nil {return 0,_bdbff ;
};_abbe ._fade =_ggba ;};return _abbe ._fade .Decode (_abbe ._eced );};return 0,nil ;};func (_cdf *GenericRefinementRegion )overrideAtTemplate0 (_cbd ,_egd ,_gag ,_dccf ,_eed int )int {if _cdf ._dg [0]{_cbd &=0xfff7;if _cdf .GrAtY [0]==0&&int (_cdf .GrAtX [0])>=-_eed {_cbd |=(_dccf >>uint (7-(_eed +int (_cdf .GrAtX [0])))&0x1)<<3;
}else {_cbd |=_cdf .getPixel (_cdf .RegionBitmap ,_egd +int (_cdf .GrAtX [0]),_gag +int (_cdf .GrAtY [0]))<<3;};};if _cdf ._dg [1]{_cbd &=0xefff;if _cdf .GrAtY [1]==0&&int (_cdf .GrAtX [1])>=-_eed {_cbd |=(_dccf >>uint (7-(_eed +int (_cdf .GrAtX [1])))&0x1)<<12;
}else {_cbd |=_cdf .getPixel (_cdf .ReferenceBitmap ,_egd +int (_cdf .GrAtX [1]),_gag +int (_cdf .GrAtY [1]));};};return _cbd ;};func NewGenericRegion (r _e .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cge :r };
};func (_aecb *Header )String ()string {_gefe :=&_fa .Builder {};_gefe .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_gefe .WriteString (_d .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_aecb .SegmentNumber ));
_gefe .WriteString (_d .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_aecb .Type ));_gefe .WriteString (_d .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_aecb .RetainFlag ));
_gefe .WriteString (_d .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_aecb .PageAssociation ));_gefe .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_aecb .PageAssociationFieldSize ));
_gefe .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_gdec :=range _aecb .RTSNumbers {_gefe .WriteString (_d .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_gdec ));};_gefe .WriteString (_d .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_aecb .HeaderLength ));
_gefe .WriteString (_d .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_aecb .SegmentDataLength ));_gefe .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_aecb .SegmentDataStartOffset ));
return _gefe .String ();};func (_baa *GenericRegion )decodeTemplate0a (_eaga ,_gda ,_daa int ,_daab ,_fbd int )(_bed error ){const _bfeb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_adb ,_dafcc int ;_afg ,_acdc int ;
_ggc byte ;_gga int ;);if _eaga >=1{_ggc ,_bed =_baa .Bitmap .GetByte (_fbd );if _bed !=nil {return _fac .Wrap (_bed ,_bfeb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_afg =int (_ggc );};if _eaga >=2{_ggc ,_bed =_baa .Bitmap .GetByte (_fbd -_baa .Bitmap .RowStride );
if _bed !=nil {return _fac .Wrap (_bed ,_bfeb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_acdc =int (_ggc )<<6;};_adb =(_afg &0xf0)|(_acdc &0x3800);for _fcfc :=0;_fcfc < _daa ;_fcfc =_gga {var (_cfc byte ;_dbd int ;);_gga =_fcfc +8;if _ggaa :=_gda -_fcfc ;
_ggaa > 8{_dbd =8;}else {_dbd =_ggaa ;};if _eaga > 0{_afg <<=8;if _gga < _gda {_ggc ,_bed =_baa .Bitmap .GetByte (_fbd +1);if _bed !=nil {return _fac .Wrap (_bed ,_bfeb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_afg |=int (_ggc );};};if _eaga > 1{_ffg :=_fbd -_baa .Bitmap .RowStride +1;
_acdc <<=8;if _gga < _gda {_ggc ,_bed =_baa .Bitmap .GetByte (_ffg );if _bed !=nil {return _fac .Wrap (_bed ,_bfeb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_acdc |=int (_ggc )<<6;}else {_acdc |=0;};};for _feb :=0;_feb < _dbd ;_feb ++{_ffbe :=uint (7-_feb );
if _baa ._fcb {_dafcc =_baa .overrideAtTemplate0a (_adb ,_fcfc +_feb ,_eaga ,int (_cfc ),_feb ,int (_ffbe ));_baa ._afd .SetIndex (int32 (_dafcc ));}else {_baa ._afd .SetIndex (int32 (_adb ));};var _ebce int ;_ebce ,_bed =_baa ._gfcd .DecodeBit (_baa ._afd );
if _bed !=nil {return _fac .Wrap (_bed ,_bfeb ,"");};_cfc |=byte (_ebce )<<_ffbe ;_adb =((_adb &0x7bf7)<<1)|_ebce |((_afg >>_ffbe )&0x10)|((_acdc >>_ffbe )&0x800);};if _bcee :=_baa .Bitmap .SetByte (_daab ,_cfc );_bcee !=nil {return _fac .Wrap (_bcee ,_bfeb ,"");
};_daab ++;_fbd ++;};return nil ;};func (_edgd *Header )writeFlags (_gefc _e .BinaryWriter )(_gdcef error ){const _gcea ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_cdfc :=byte (_edgd .Type );if _gdcef =_gefc .WriteByte (_cdfc );
_gdcef !=nil {return _fac .Wrap (_gdcef ,_gcea ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_edgd .RetainFlag &&!_edgd .PageAssociationFieldSize {return nil ;
};if _gdcef =_gefc .SkipBits (-8);_gdcef !=nil {return _fac .Wrap (_gdcef ,_gcea ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _aegc int ;
if _edgd .RetainFlag {_aegc =1;};if _gdcef =_gefc .WriteBit (_aegc );_gdcef !=nil {return _fac .Wrap (_gdcef ,_gcea ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_aegc =0;if _edgd .PageAssociationFieldSize {_aegc =1;
};if _gdcef =_gefc .WriteBit (_aegc );_gdcef !=nil {return _fac .Wrap (_gdcef ,_gcea ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_gefc .FinishByte ();return nil ;};func (_bfad *TextRegion )decodeStripT ()(_cbae int64 ,_gbea error ){if _bfad .IsHuffmanEncoded {if _bfad .SbHuffDT ==3{if _bfad ._gedf ==nil {var _bdcc int ;
if _bfad .SbHuffFS ==3{_bdcc ++;};if _bfad .SbHuffDS ==3{_bdcc ++;};_bfad ._gedf ,_gbea =_bfad .getUserTable (_bdcc );if _gbea !=nil {return 0,_gbea ;};};_cbae ,_gbea =_bfad ._gedf .Decode (_bfad ._addad );if _gbea !=nil {return 0,_gbea ;};}else {var _eafg _be .Tabler ;
_eafg ,_gbea =_be .GetStandardTable (11+int (_bfad .SbHuffDT ));if _gbea !=nil {return 0,_gbea ;};_cbae ,_gbea =_eafg .Decode (_bfad ._addad );if _gbea !=nil {return 0,_gbea ;};};}else {var _eagc int32 ;_eagc ,_gbea =_bfad ._ffdc .DecodeInt (_bfad ._dcbac );
if _gbea !=nil {return 0,_gbea ;};_cbae =int64 (_eagc );};_cbae *=int64 (-_bfad .SbStrips );return _cbae ,nil ;};func (_aadb *PatternDictionary )setGbAtPixels (){if _aadb .HDTemplate ==0{_aadb .GBAtX =make ([]int8 ,4);_aadb .GBAtY =make ([]int8 ,4);_aadb .GBAtX [0]=-int8 (_aadb .HdpWidth );
_aadb .GBAtY [0]=0;_aadb .GBAtX [1]=-3;_aadb .GBAtY [1]=-1;_aadb .GBAtX [2]=2;_aadb .GBAtY [2]=-2;_aadb .GBAtX [3]=-2;_aadb .GBAtY [3]=-2;}else {_aadb .GBAtX =[]int8 {-int8 (_aadb .HdpWidth )};_aadb .GBAtY =[]int8 {0};};};func (_dcdc *TextRegion )encodeSymbols (_gcdb _e .BinaryWriter )(_afbf int ,_fagb error ){const _cegf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_gbec :=make ([]byte ,4);_b .BigEndian .PutUint32 (_gbec ,_dcdc .NumberOfSymbols );if _afbf ,_fagb =_gcdb .Write (_gbec );_fagb !=nil {return _afbf ,_fac .Wrap (_fagb ,_cegf ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_ebecf ,_fagb :=_ba .NewClassedPoints (_dcdc ._dcdg ,_dcdc ._ggfd );if _fagb !=nil {return 0,_fac .Wrap (_fagb ,_cegf ,"");};var _cfdab ,_affa int ;_efaa :=_fe .New ();_efaa .Init ();if _fagb =_efaa .EncodeInteger (_fe .IADT ,0);_fagb !=nil {return _afbf ,_fac .Wrap (_fagb ,_cegf ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_cegfc ,_fagb :=_ebecf .GroupByY ();if _fagb !=nil {return 0,_fac .Wrap (_fagb ,_cegf ,"");};for _ ,_cfde :=range _cegfc {_bdeec :=int (_cfde .YAtIndex (0));_addc :=_bdeec -_cfdab ;if _fagb =_efaa .EncodeInteger (_fe .IADT ,_addc );_fagb !=nil {return _afbf ,_fac .Wrap (_fagb ,_cegf ,"");
};var _adfc int ;for _ffe ,_gggd :=range _cfde .IntSlice {switch _ffe {case 0:_cbdc :=int (_cfde .XAtIndex (_ffe ))-_affa ;if _fagb =_efaa .EncodeInteger (_fe .IAFS ,_cbdc );_fagb !=nil {return _afbf ,_fac .Wrap (_fagb ,_cegf ,"");};_affa +=_cbdc ;_adfc =_affa ;
default:_cdff :=int (_cfde .XAtIndex (_ffe ))-_adfc ;if _fagb =_efaa .EncodeInteger (_fe .IADS ,_cdff );_fagb !=nil {return _afbf ,_fac .Wrap (_fagb ,_cegf ,"");};_adfc +=_cdff ;};_bega ,_abbeg :=_dcdc ._fadc .Get (_gggd );if _abbeg !=nil {return _afbf ,_fac .Wrap (_abbeg ,_cegf ,"");
};_deae ,_afea :=_dcdc ._ebbga [_bega ];if !_afea {_deae ,_afea =_dcdc ._ggeaa [_bega ];if !_afea {return _afbf ,_fac .Errorf (_cegf ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_bega );
};};if _abbeg =_efaa .EncodeIAID (_dcdc ._ffae ,_deae );_abbeg !=nil {return _afbf ,_fac .Wrap (_abbeg ,_cegf ,"");};};if _fagb =_efaa .EncodeOOB (_fe .IADS );_fagb !=nil {return _afbf ,_fac .Wrap (_fagb ,_cegf ,"");};};_efaa .Final ();_dadc ,_fagb :=_efaa .WriteTo (_gcdb );
if _fagb !=nil {return _afbf ,_fac .Wrap (_fagb ,_cegf ,"");};_afbf +=int (_dadc );return _afbf ,nil ;};func (_deeg *PageInformationSegment )readDefaultPixelValue ()error {_baff ,_dga :=_deeg ._acgg .ReadBit ();if _dga !=nil {return _dga ;};_deeg .DefaultPixelValue =uint8 (_baff &0xf);
return nil ;};type Regioner interface{GetRegionBitmap ()(*_ba .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_bge *GenericRegion )setParametersWithAt (_dbac bool ,_ebb byte ,_cdb ,_bba bool ,_aaa ,_bgb []int8 ,_gce ,_efa uint32 ,_bca *_fc .DecoderStats ,_ddfg *_fc .Decoder ){_bge .IsMMREncoded =_dbac ;
_bge .GBTemplate =_ebb ;_bge .IsTPGDon =_cdb ;_bge .GBAtX =_aaa ;_bge .GBAtY =_bgb ;_bge .RegionSegment .BitmapHeight =_efa ;_bge .RegionSegment .BitmapWidth =_gce ;_bge ._cdg =nil ;_bge .Bitmap =nil ;if _bca !=nil {_bge ._afd =_bca ;};if _ddfg !=nil {_bge ._gfcd =_ddfg ;
};_bea .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bge );};func (_gcd *PageInformationSegment )readCombinationOperator ()error {_faeb ,_aga :=_gcd ._acgg .ReadBits (2);
if _aga !=nil {return _aga ;};_gcd ._bfbg =_ba .CombinationOperator (int (_faeb ));return nil ;};func (_bdag *TextRegion )Init (header *Header ,r _e .StreamReader )error {_bdag .Header =header ;_bdag ._addad =r ;_bdag .RegionInfo =NewRegionSegment (_bdag ._addad );
return _bdag .parseHeader ();};func (_bfec *RegionSegment )Encode (w _e .BinaryWriter )(_ecbb int ,_ebcbf error ){const _gecc ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_ecfg :=make ([]byte ,4);_b .BigEndian .PutUint32 (_ecfg ,_bfec .BitmapWidth );
_ecbb ,_ebcbf =w .Write (_ecfg );if _ebcbf !=nil {return 0,_fac .Wrap (_ebcbf ,_gecc ,"\u0057\u0069\u0064t\u0068");};_b .BigEndian .PutUint32 (_ecfg ,_bfec .BitmapHeight );var _aada int ;_aada ,_ebcbf =w .Write (_ecfg );if _ebcbf !=nil {return 0,_fac .Wrap (_ebcbf ,_gecc ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_ecbb +=_aada ;_b .BigEndian .PutUint32 (_ecfg ,_bfec .XLocation );_aada ,_ebcbf =w .Write (_ecfg );if _ebcbf !=nil {return 0,_fac .Wrap (_ebcbf ,_gecc ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ecbb +=_aada ;_b .BigEndian .PutUint32 (_ecfg ,_bfec .YLocation );
_aada ,_ebcbf =w .Write (_ecfg );if _ebcbf !=nil {return 0,_fac .Wrap (_ebcbf ,_gecc ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ecbb +=_aada ;if _ebcbf =w .WriteByte (byte (_bfec .CombinaionOperator )&0x07);_ebcbf !=nil {return 0,_fac .Wrap (_ebcbf ,_gecc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_ecbb ++;return _ecbb ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ba .Bitmap ,error );};func (_daad *Header )Encode (w _e .BinaryWriter )(_dagec int ,_edffb error ){const _bada ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _ddge _e .BinaryWriter ;_bea .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _edffb !=nil {_bea .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_edffb );
}else {_bea .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_daad );_bea .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _daad .SegmentData !=nil {_bfd ,_cgdd :=_daad .SegmentData .(SegmentEncoder );if !_cgdd {return 0,_fac .Errorf (_bada ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_daad .SegmentData );
};_ddge =_e .BufferedMSB ();_dagec ,_edffb =_bfd .Encode (_ddge );if _edffb !=nil {return 0,_fac .Wrap (_edffb ,_bada ,"");};_daad .SegmentDataLength =uint64 (_dagec );};if _daad .pageSize ()==4{_daad .PageAssociationFieldSize =true ;};var _ggb int ;_ggb ,_edffb =_daad .writeSegmentNumber (w );
if _edffb !=nil {return 0,_fac .Wrap (_edffb ,_bada ,"");};_dagec +=_ggb ;if _edffb =_daad .writeFlags (w );_edffb !=nil {return _dagec ,_fac .Wrap (_edffb ,_bada ,"");};_dagec ++;_ggb ,_edffb =_daad .writeReferredToCount (w );if _edffb !=nil {return 0,_fac .Wrap (_edffb ,_bada ,"");
};_dagec +=_ggb ;_ggb ,_edffb =_daad .writeReferredToSegments (w );if _edffb !=nil {return 0,_fac .Wrap (_edffb ,_bada ,"");};_dagec +=_ggb ;_ggb ,_edffb =_daad .writeSegmentPageAssociation (w );if _edffb !=nil {return 0,_fac .Wrap (_edffb ,_bada ,"");
};_dagec +=_ggb ;_ggb ,_edffb =_daad .writeSegmentDataLength (w );if _edffb !=nil {return 0,_fac .Wrap (_edffb ,_bada ,"");};_dagec +=_ggb ;_daad .HeaderLength =int64 (_dagec )-int64 (_daad .SegmentDataLength );if _ddge !=nil {if _ ,_edffb =w .Write (_ddge .Data ());
_edffb !=nil {return _dagec ,_fac .Wrap (_edffb ,_bada ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _dagec ,nil ;};func (_aeef *GenericRegion )overrideAtTemplate1 (_bbb ,_deda ,_fead ,_ecg ,_dfec int )int {_bbb &=0x1FF7;
if _aeef .GBAtY [0]==0&&_aeef .GBAtX [0]>=-int8 (_dfec ){_bbb |=(_ecg >>uint (7-(int8 (_dfec )+_aeef .GBAtX [0]))&0x1)<<3;}else {_bbb |=int (_aeef .getPixel (_deda +int (_aeef .GBAtX [0]),_fead +int (_aeef .GBAtY [0])))<<3;};return _bbb ;};func (_bbcb Type )String ()string {switch _bbcb {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_aggg *SymbolDictionary )encodeFlags (_bebf _e .BinaryWriter )(_cacg int ,_edcg error ){const _addg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _edcg =_bebf .SkipBits (3);_edcg !=nil {return 0,_fac .Wrap (_edcg ,_addg ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _gcad int ;if _aggg .SdrTemplate > 0{_gcad =1;};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_gcad =0;if _aggg .SdTemplate > 1{_gcad =1;};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gcad =0;if _aggg .SdTemplate ==1||_aggg .SdTemplate ==3{_gcad =1;
};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gcad =0;if _aggg ._baae {_gcad =1;};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_gcad =0;if _aggg ._eage {_gcad =1;};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_gcad =0;if _aggg .SdHuffAggInstanceSelection {_gcad =1;
};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_gcad =int (_aggg .SdHuffBMSizeSelection );if _edcg =_bebf .WriteBit (_gcad );
_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_gcad =0;if _aggg .SdHuffDecodeWidthSelection > 1{_gcad =1;};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_gcad =0;switch _aggg .SdHuffDecodeWidthSelection {case 1,3:_gcad =1;};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gcad =0;if _aggg .SdHuffDecodeHeightSelection > 1{_gcad =1;
};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gcad =0;switch _aggg .SdHuffDecodeHeightSelection {case 1,3:_gcad =1;};if _edcg =_bebf .WriteBit (_gcad );
_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gcad =0;if _aggg .UseRefinementAggregation {_gcad =1;};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_gcad =0;if _aggg .IsHuffmanEncoded {_gcad =1;};if _edcg =_bebf .WriteBit (_gcad );_edcg !=nil {return _cacg ,_fac .Wrap (_edcg ,_addg ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_febg *TextRegion )readHuffmanFlags ()error {var (_bbdd int ;
_gggag uint64 ;_acaf error ;);_ ,_acaf =_febg ._addad .ReadBit ();if _acaf !=nil {return _acaf ;};_bbdd ,_acaf =_febg ._addad .ReadBit ();if _acaf !=nil {return _acaf ;};_febg .SbHuffRSize =int8 (_bbdd );_gggag ,_acaf =_febg ._addad .ReadBits (2);if _acaf !=nil {return _acaf ;
};_febg .SbHuffRDY =int8 (_gggag )&0xf;_gggag ,_acaf =_febg ._addad .ReadBits (2);if _acaf !=nil {return _acaf ;};_febg .SbHuffRDX =int8 (_gggag )&0xf;_gggag ,_acaf =_febg ._addad .ReadBits (2);if _acaf !=nil {return _acaf ;};_febg .SbHuffRDHeight =int8 (_gggag )&0xf;
_gggag ,_acaf =_febg ._addad .ReadBits (2);if _acaf !=nil {return _acaf ;};_febg .SbHuffRDWidth =int8 (_gggag )&0xf;_gggag ,_acaf =_febg ._addad .ReadBits (2);if _acaf !=nil {return _acaf ;};_febg .SbHuffDT =int8 (_gggag )&0xf;_gggag ,_acaf =_febg ._addad .ReadBits (2);
if _acaf !=nil {return _acaf ;};_febg .SbHuffDS =int8 (_gggag )&0xf;_gggag ,_acaf =_febg ._addad .ReadBits (2);if _acaf !=nil {return _acaf ;};_febg .SbHuffFS =int8 (_gggag )&0xf;return nil ;};func (_gfef *SymbolDictionary )readNumberOfNewSymbols ()error {_bfag ,_efea :=_gfef ._eced .ReadBits (32);
if _efea !=nil {return _efea ;};_gfef .NumberOfNewSymbols =uint32 (_bfag &_c .MaxUint32 );return nil ;};func (_faa *template1 )form (_fab ,_ecba ,_ace ,_aabg ,_cfdg int16 )int16 {return ((_fab &0x02)<<8)|(_ecba <<6)|((_ace &0x03)<<4)|(_aabg <<1)|_cfdg ;
};type HalftoneRegion struct{_gdcd _e .StreamReader ;_aba *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ba .CombinationOperator ;HSkipEnabled bool ;
HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ba .Bitmap ;Patterns []*_ba .Bitmap ;};func (_fdcf *SymbolDictionary )decodeNewSymbols (_badaca ,_bdea uint32 ,_ceaf *_ba .Bitmap ,_edcb ,_baee int32 )error {if _fdcf ._fdff ==nil {_fdcf ._fdff =_eeag (_fdcf ._eced ,nil );
if _fdcf ._bbce ==nil {var _adad error ;_fdcf ._bbce ,_adad =_fc .New (_fdcf ._eced );if _adad !=nil {return _adad ;};};if _fdcf ._fbcd ==nil {_fdcf ._fbcd =_fc .NewStats (65536,1);};};_fdcf ._fdff .setParameters (_fdcf ._fbcd ,_fdcf ._bbce ,_fdcf .SdrTemplate ,_badaca ,_bdea ,_ceaf ,_edcb ,_baee ,false ,_fdcf .SdrATX ,_fdcf .SdrATY );
return _fdcf .addSymbol (_fdcf ._fdff );};func (_bae *GenericRefinementRegion )Init (header *Header ,r _e .StreamReader )error {_bae ._feg =header ;_bae ._gd =r ;_bae .RegionInfo =NewRegionSegment (r );return _bae .parseHeader ();};func (_gbce *PatternDictionary )Init (h *Header ,r _e .StreamReader )error {_gbce ._efef =r ;
return _gbce .parseHeader ();};func (_efeff *TextRegion )symbolIDCodeLengths ()error {var (_dfee []*_be .Code ;_bgdf uint64 ;_ffec _be .Tabler ;_aeeg error ;);for _cdeb :=0;_cdeb < 35;_cdeb ++{_bgdf ,_aeeg =_efeff ._addad .ReadBits (4);if _aeeg !=nil {return _aeeg ;
};_dgg :=int (_bgdf &0xf);if _dgg > 0{_dfee =append (_dfee ,_be .NewCode (int32 (_dgg ),0,int32 (_cdeb ),false ));};};_ffec ,_aeeg =_be .NewFixedSizeTable (_dfee );if _aeeg !=nil {return _aeeg ;};var (_aeaa int64 ;_eebd uint32 ;_gcfd []*_be .Code ;_dadg int64 ;
);for _eebd < _efeff .NumberOfSymbols {_dadg ,_aeeg =_ffec .Decode (_efeff ._addad );if _aeeg !=nil {return _aeeg ;};if _dadg < 32{if _dadg > 0{_gcfd =append (_gcfd ,_be .NewCode (int32 (_dadg ),0,int32 (_eebd ),false ));};_aeaa =_dadg ;_eebd ++;}else {var _gbgb ,_bacg int64 ;
switch _dadg {case 32:_bgdf ,_aeeg =_efeff ._addad .ReadBits (2);if _aeeg !=nil {return _aeeg ;};_gbgb =3+int64 (_bgdf );if _eebd > 0{_bacg =_aeaa ;};case 33:_bgdf ,_aeeg =_efeff ._addad .ReadBits (3);if _aeeg !=nil {return _aeeg ;};_gbgb =3+int64 (_bgdf );
case 34:_bgdf ,_aeeg =_efeff ._addad .ReadBits (7);if _aeeg !=nil {return _aeeg ;};_gbgb =11+int64 (_bgdf );};for _afbag :=0;_afbag < int (_gbgb );_afbag ++{if _bacg > 0{_gcfd =append (_gcfd ,_be .NewCode (int32 (_bacg ),0,int32 (_eebd ),false ));};_eebd ++;
};};};_efeff ._addad .Align ();_efeff ._gdgf ,_aeeg =_be .NewFixedSizeTable (_gcfd );return _aeeg ;};func (_bgee *SymbolDictionary )setRefinementAtPixels ()error {if !_bgee .UseRefinementAggregation ||_bgee .SdrTemplate !=0{return nil ;};if _bbca :=_bgee .readRefinementAtPixels (2);
_bbca !=nil {return _bbca ;};return nil ;};func (_gdac *PatternDictionary )readTemplate ()error {_ffaf ,_fgef :=_gdac ._efef .ReadBits (2);if _fgef !=nil {return _fgef ;};_gdac .HDTemplate =byte (_ffaf );return nil ;};func (_gfa *HalftoneRegion )shiftAndFill (_bdfd int )int {_bdfd >>=8;
if _bdfd < 0{_cbe :=int (_c .Log (float64 (_acbf (_bdfd )))/_c .Log (2));_bdaf :=31-_cbe ;for _adab :=1;_adab < _bdaf ;_adab ++{_bdfd |=1<<uint (31-_adab );};};return _bdfd ;};func _acbf (_cef int )int {if _cef ==0{return 0;};_cef |=_cef >>1;_cef |=_cef >>2;
_cef |=_cef >>4;_cef |=_cef >>8;_cef |=_cef >>16;return (_cef +1)>>1;};func (_fgfb *TextRegion )blit (_afdd *_ba .Bitmap ,_cbcb int64 )error {if _fgfb .IsTransposed ==0&&(_fgfb .ReferenceCorner ==2||_fgfb .ReferenceCorner ==3){_fgfb ._cfgc +=int64 (_afdd .Width -1);
}else if _fgfb .IsTransposed ==1&&(_fgfb .ReferenceCorner ==0||_fgfb .ReferenceCorner ==2){_fgfb ._cfgc +=int64 (_afdd .Height -1);};_gfg :=_fgfb ._cfgc ;if _fgfb .IsTransposed ==1{_gfg ,_cbcb =_cbcb ,_gfg ;};switch _fgfb .ReferenceCorner {case 0:_cbcb -=int64 (_afdd .Height -1);
case 2:_cbcb -=int64 (_afdd .Height -1);_gfg -=int64 (_afdd .Width -1);case 3:_gfg -=int64 (_afdd .Width -1);};_ecedd :=_ba .Blit (_afdd ,_fgfb .RegionBitmap ,int (_gfg ),int (_cbcb ),_fgfb .CombinationOperator );if _ecedd !=nil {return _ecedd ;};if _fgfb .IsTransposed ==0&&(_fgfb .ReferenceCorner ==0||_fgfb .ReferenceCorner ==1){_fgfb ._cfgc +=int64 (_afdd .Width -1);
};if _fgfb .IsTransposed ==1&&(_fgfb .ReferenceCorner ==1||_fgfb .ReferenceCorner ==3){_fgfb ._cfgc +=int64 (_afdd .Height -1);};return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;
TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;
TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;
);func (_dec *GenericRegion )copyLineAbove (_fgf int )error {_gffe :=_fgf *_dec .Bitmap .RowStride ;_fafdc :=_gffe -_dec .Bitmap .RowStride ;for _bad :=0;_bad < _dec .Bitmap .RowStride ;_bad ++{_cdc ,_cgc :=_dec .Bitmap .GetByte (_fafdc );if _cgc !=nil {return _cgc ;
};_fafdc ++;if _cgc =_dec .Bitmap .SetByte (_gffe ,_cdc );_cgc !=nil {return _cgc ;};_gffe ++;};return nil ;};type Segmenter interface{Init (_dcg *Header ,_ecdg _e .StreamReader )error ;};func (_fcf *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _fcf .RegionInfo };
func (_ddgf *SymbolDictionary )getSbSymCodeLen ()int8 {_gdeb :=int8 (_c .Ceil (_c .Log (float64 (_ddgf ._cgeg +_ddgf .NumberOfNewSymbols ))/_c .Log (2)));if _ddgf .IsHuffmanEncoded &&_gdeb < 1{return 1;};return _gdeb ;};func (_edbc *TableSegment )StreamReader ()_e .StreamReader {return _edbc ._cead };
func (_gcdg *SymbolDictionary )getUserTable (_bagg int )(_be .Tabler ,error ){var _fbdg int ;for _ ,_fggc :=range _gcdg .Header .RTSegments {if _fggc .Type ==53{if _fbdg ==_bagg {_fcdb ,_gadcf :=_fggc .GetSegmentData ();if _gadcf !=nil {return nil ,_gadcf ;
};_cbed :=_fcdb .(_be .BasicTabler );return _be .NewEncodedTable (_cbed );};_fbdg ++;};};return nil ,nil ;};func (_gfcb *HalftoneRegion )grayScaleDecoding (_dfg int )([][]int ,error ){var (_afc []int8 ;_fdaf []int8 ;);if !_gfcb .IsMMREncoded {_afc =make ([]int8 ,4);
_fdaf =make ([]int8 ,4);if _gfcb .HTemplate <=1{_afc [0]=3;}else if _gfcb .HTemplate >=2{_afc [0]=2;};_fdaf [0]=-1;_afc [1]=-3;_fdaf [1]=-1;_afc [2]=2;_fdaf [2]=-2;_afc [3]=-2;_fdaf [3]=-2;};_cdag :=make ([]*_ba .Bitmap ,_dfg );_acab :=NewGenericRegion (_gfcb ._gdcd );
_acab .setParametersMMR (_gfcb .IsMMREncoded ,_gfcb .DataOffset ,_gfcb .DataLength ,_gfcb .HGridHeight ,_gfcb .HGridWidth ,_gfcb .HTemplate ,false ,_gfcb .HSkipEnabled ,_afc ,_fdaf );_fbc :=_dfg -1;var _dfdf error ;_cdag [_fbc ],_dfdf =_acab .GetRegionBitmap ();
if _dfdf !=nil {return nil ,_dfdf ;};for _fbc > 0{_fbc --;_acab .Bitmap =nil ;_cdag [_fbc ],_dfdf =_acab .GetRegionBitmap ();if _dfdf !=nil {return nil ,_dfdf ;};if _dfdf =_gfcb .combineGrayscalePlanes (_cdag ,_fbc );_dfdf !=nil {return nil ,_dfdf ;};};
return _gfcb .computeGrayScalePlanes (_cdag ,_dfg );};func (_bbee *PageInformationSegment )readWidthAndHeight ()error {_gagde ,_dfbg :=_bbee ._acgg .ReadBits (32);if _dfbg !=nil {return _dfbg ;};_bbee .PageBMWidth =int (_gagde &_c .MaxInt32 );_gagde ,_dfbg =_bbee ._acgg .ReadBits (32);
if _dfbg !=nil {return _dfbg ;};_bbee .PageBMHeight =int (_gagde &_c .MaxInt32 );return nil ;};func (_bedbf *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _bedbf .IsHuffmanEncoded {switch _bedbf .SdHuffDecodeWidthSelection {case 0:_bcbf ,_cdga :=_be .GetStandardTable (2);
if _cdga !=nil {return 0,_cdga ;};return _bcbf .Decode (_bedbf ._eced );case 1:_gaf ,_fefbb :=_be .GetStandardTable (3);if _fefbb !=nil {return 0,_fefbb ;};return _gaf .Decode (_bedbf ._eced );case 3:if _bedbf ._eabf ==nil {var _ddcg int ;if _bedbf .SdHuffDecodeHeightSelection ==3{_ddcg ++;
};_aeca ,_fdade :=_bedbf .getUserTable (_ddcg );if _fdade !=nil {return 0,_fdade ;};_bedbf ._eabf =_aeca ;};return _bedbf ._eabf .Decode (_bedbf ._eced );};}else {_gfaf ,_ddece :=_bedbf ._bbce .DecodeInt (_bedbf ._gcde );if _ddece !=nil {return 0,_ddece ;
};return int64 (_gfaf ),nil ;};return 0,nil ;};func (_beaf *GenericRegion )decodeTemplate3 (_bedb ,_dfcc ,_cdad int ,_fdc ,_fdca int )(_acc error ){const _ccec ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_efc ,_ffd int ;
_acfg int ;_fbec byte ;_fdcab ,_bcfe int ;);if _bedb >=1{_fbec ,_acc =_beaf .Bitmap .GetByte (_fdca );if _acc !=nil {return _fac .Wrap (_acc ,_ccec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_acfg =int (_fbec );};_efc =(_acfg >>1)&0x70;for _afab :=0;
_afab < _cdad ;_afab =_fdcab {var (_aead byte ;_ccc int ;);_fdcab =_afab +8;if _ffdd :=_dfcc -_afab ;_ffdd > 8{_ccc =8;}else {_ccc =_ffdd ;};if _bedb >=1{_acfg <<=8;if _fdcab < _dfcc {_fbec ,_acc =_beaf .Bitmap .GetByte (_fdca +1);if _acc !=nil {return _fac .Wrap (_acc ,_ccec ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_acfg |=int (_fbec );};};for _eac :=0;_eac < _ccc ;_eac ++{if _beaf ._fcb {_ffd =_beaf .overrideAtTemplate3 (_efc ,_afab +_eac ,_bedb ,int (_aead ),_eac );_beaf ._afd .SetIndex (int32 (_ffd ));}else {_beaf ._afd .SetIndex (int32 (_efc ));};_bcfe ,_acc =_beaf ._gfcd .DecodeBit (_beaf ._afd );
if _acc !=nil {return _fac .Wrap (_acc ,_ccec ,"");};_aead |=byte (_bcfe )<<byte (7-_eac );_efc =((_efc &0x1f7)<<1)|_bcfe |((_acfg >>uint (8-_eac ))&0x010);};if _fged :=_beaf .Bitmap .SetByte (_fdc ,_aead );_fged !=nil {return _fac .Wrap (_fged ,_ccec ,"");
};_fdc ++;_fdca ++;};return nil ;};func (_deb *GenericRegion )GetRegionBitmap ()(_cde *_ba .Bitmap ,_gef error ){if _deb .Bitmap !=nil {return _deb .Bitmap ,nil ;};if _deb .IsMMREncoded {if _deb ._cdg ==nil {_deb ._cdg ,_gef =_bc .New (_deb ._cge ,int (_deb .RegionSegment .BitmapWidth ),int (_deb .RegionSegment .BitmapHeight ),_deb .DataOffset ,_deb .DataLength );
if _gef !=nil {return nil ,_gef ;};};_deb .Bitmap ,_gef =_deb ._cdg .UncompressMMR ();return _deb .Bitmap ,_gef ;};if _gef =_deb .updateOverrideFlags ();_gef !=nil {return nil ,_gef ;};var _efd int ;if _deb ._gfcd ==nil {_deb ._gfcd ,_gef =_fc .New (_deb ._cge );
if _gef !=nil {return nil ,_gef ;};};if _deb ._afd ==nil {_deb ._afd =_fc .NewStats (65536,1);};_deb .Bitmap =_ba .New (int (_deb .RegionSegment .BitmapWidth ),int (_deb .RegionSegment .BitmapHeight ));_gcc :=int (uint32 (_deb .Bitmap .Width +7)&(^uint32 (7)));
for _cga :=0;_cga < _deb .Bitmap .Height ;_cga ++{if _deb .IsTPGDon {var _dcab int ;_dcab ,_gef =_deb .decodeSLTP ();if _gef !=nil {return nil ,_gef ;};_efd ^=_dcab ;};if _efd ==1{if _cga > 0{if _gef =_deb .copyLineAbove (_cga );_gef !=nil {return nil ,_gef ;
};};}else {if _gef =_deb .decodeLine (_cga ,_deb .Bitmap .Width ,_gcc );_gef !=nil {return nil ,_gef ;};};};return _deb .Bitmap ,nil ;};func (_cege *HalftoneRegion )checkInput ()error {if _cege .IsMMREncoded {if _cege .HTemplate !=0{_bea .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_cege .HTemplate );
};if _cege .HSkipEnabled {_bea .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_cege .HSkipEnabled );
};};return nil ;};func (_ged *PatternDictionary )checkInput ()error {if _ged .HdpHeight < 1||_ged .HdpWidth < 1{return _bg .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _ged .IsMMREncoded {if _ged .HDTemplate !=0{_bea .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_fafd *GenericRegion )parseHeader ()(_cfdb error ){_bea .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _cfdb !=nil {_bea .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_cfdb );
}else {_bea .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_bbd int ;_geea uint64 ;);if _cfdb =_fafd .RegionSegment .parseHeader ();_cfdb !=nil {return _cfdb ;};if _ ,_cfdb =_fafd ._cge .ReadBits (3);_cfdb !=nil {return _cfdb ;};_bbd ,_cfdb =_fafd ._cge .ReadBit ();if _cfdb !=nil {return _cfdb ;};if _bbd ==1{_fafd .UseExtTemplates =true ;
};_bbd ,_cfdb =_fafd ._cge .ReadBit ();if _cfdb !=nil {return _cfdb ;};if _bbd ==1{_fafd .IsTPGDon =true ;};_geea ,_cfdb =_fafd ._cge .ReadBits (2);if _cfdb !=nil {return _cfdb ;};_fafd .GBTemplate =byte (_geea &0xf);_bbd ,_cfdb =_fafd ._cge .ReadBit ();
if _cfdb !=nil {return _cfdb ;};if _bbd ==1{_fafd .IsMMREncoded =true ;};if !_fafd .IsMMREncoded {_eafb :=1;if _fafd .GBTemplate ==0{_eafb =4;if _fafd .UseExtTemplates {_eafb =12;};};if _cfdb =_fafd .readGBAtPixels (_eafb );_cfdb !=nil {return _cfdb ;};
};if _cfdb =_fafd .computeSegmentDataStructure ();_cfdb !=nil {return _cfdb ;};_bea .Log .Trace ("\u0025\u0073",_fafd );return nil ;};func (_dbg *GenericRegion )getPixel (_bgf ,_fce int )int8 {if _bgf < 0||_bgf >=_dbg .Bitmap .Width {return 0;};if _fce < 0||_fce >=_dbg .Bitmap .Height {return 0;
};if _dbg .Bitmap .GetPixel (_bgf ,_fce ){return 1;};return 0;};func (_dgbd *SymbolDictionary )decodeRefinedSymbol (_aace ,_ceabd uint32 )error {var (_daff int ;_ggef ,_bbad int32 ;);if _dgbd .IsHuffmanEncoded {_geg ,_eebgd :=_dgbd ._eced .ReadBits (byte (_dgbd ._fabg ));
if _eebgd !=nil {return _eebgd ;};_daff =int (_geg );_bffce ,_eebgd :=_be .GetStandardTable (15);if _eebgd !=nil {return _eebgd ;};_badac ,_eebgd :=_bffce .Decode (_dgbd ._eced );if _eebgd !=nil {return _eebgd ;};_ggef =int32 (_badac );_badac ,_eebgd =_bffce .Decode (_dgbd ._eced );
if _eebgd !=nil {return _eebgd ;};_bbad =int32 (_badac );_bffce ,_eebgd =_be .GetStandardTable (1);if _eebgd !=nil {return _eebgd ;};if _ ,_eebgd =_bffce .Decode (_dgbd ._eced );_eebgd !=nil {return _eebgd ;};_dgbd ._eced .Align ();}else {_bcge ,_geff :=_dgbd ._bbce .DecodeIAID (uint64 (_dgbd ._fabg ),_dgbd ._adeb );
if _geff !=nil {return _geff ;};_daff =int (_bcge );_ggef ,_geff =_dgbd ._bbce .DecodeInt (_dgbd ._gea );if _geff !=nil {return _geff ;};_bbad ,_geff =_dgbd ._bbce .DecodeInt (_dgbd ._ggbg );if _geff !=nil {return _geff ;};};if _bbdf :=_dgbd .setSymbolsArray ();
_bbdf !=nil {return _bbdf ;};_dbdc :=_dgbd ._ggae [_daff ];if _cgbe :=_dgbd .decodeNewSymbols (_aace ,_ceabd ,_dbdc ,_ggef ,_bbad );_cgbe !=nil {return _cgbe ;};if _dgbd .IsHuffmanEncoded {_dgbd ._eced .Align ();};return nil ;};func (_eaa *template0 )form (_fge ,_bffe ,_dbb ,_dee ,_cgb int16 )int16 {return (_fge <<10)|(_bffe <<7)|(_dbb <<4)|(_dee <<1)|_cgb ;
};func _fbfe (_fgba _e .StreamReader ,_fdg *Header )*TextRegion {_ffad :=&TextRegion {_addad :_fgba ,Header :_fdg ,RegionInfo :NewRegionSegment (_fgba )};return _ffad ;};func (_ddbd *PageInformationSegment )readResolution ()error {_bcef ,_dcce :=_ddbd ._acgg .ReadBits (32);
if _dcce !=nil {return _dcce ;};_ddbd .ResolutionX =int (_bcef &_c .MaxInt32 );_bcef ,_dcce =_ddbd ._acgg .ReadBits (32);if _dcce !=nil {return _dcce ;};_ddbd .ResolutionY =int (_bcef &_c .MaxInt32 );return nil ;};func (_bffd *SymbolDictionary )checkInput ()error {if _bffd .SdHuffDecodeHeightSelection ==2{_bea .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_bffd .SdHuffDecodeHeightSelection );
};if _bffd .SdHuffDecodeWidthSelection ==2{_bea .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_bffd .SdHuffDecodeWidthSelection );
};if _bffd .IsHuffmanEncoded {if _bffd .SdTemplate !=0{_bea .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_bffd .SdTemplate );
};if !_bffd .UseRefinementAggregation {if !_bffd .UseRefinementAggregation {if _bffd ._baae {_bea .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_bffd ._baae =false ;};if _bffd ._eage {_bea .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_bffd ._eage =false ;};};};}else {if _bffd .SdHuffBMSizeSelection !=0{_bea .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bffd .SdHuffBMSizeSelection =0;};if _bffd .SdHuffDecodeWidthSelection !=0{_bea .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_bffd .SdHuffDecodeWidthSelection =0;};if _bffd .SdHuffDecodeHeightSelection !=0{_bea .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bffd .SdHuffDecodeHeightSelection =0;};};if !_bffd .UseRefinementAggregation {if _bffd .SdrTemplate !=0{_bea .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bffd .SdrTemplate );
_bffd .SdrTemplate =0;};};if !_bffd .IsHuffmanEncoded ||!_bffd .UseRefinementAggregation {if _bffd .SdHuffAggInstanceSelection {_bea .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bffd .SdHuffAggInstanceSelection );
};};return nil ;};func (_eggfc *TextRegion )readAmountOfSymbolInstances ()error {_gfcfg ,_bbbf :=_eggfc ._addad .ReadBits (32);if _bbbf !=nil {return _bbbf ;};_eggfc .NumberOfSymbolInstances =uint32 (_gfcfg &_c .MaxUint32 );_cgbbg :=_eggfc .RegionInfo .BitmapWidth *_eggfc .RegionInfo .BitmapHeight ;
if _cgbbg < _eggfc .NumberOfSymbolInstances {_bea .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_cgbbg ,_eggfc .NumberOfSymbolInstances );
_eggfc .NumberOfSymbolInstances =_cgbbg ;};return nil ;};func (_eaac *PatternDictionary )extractPatterns (_egeg *_ba .Bitmap )error {var _ccba int ;_bbfb :=make ([]*_ba .Bitmap ,_eaac .GrayMax +1);for _ccba <=int (_eaac .GrayMax ){_bdba :=int (_eaac .HdpWidth )*_ccba ;
_ffge :=_ca .Rect (_bdba ,0,_bdba +int (_eaac .HdpWidth ),int (_eaac .HdpHeight ));_fbfg ,_gbg :=_ba .Extract (_ffge ,_egeg );if _gbg !=nil {return _gbg ;};_bbfb [_ccba ]=_fbfg ;_ccba ++;};_eaac .Patterns =_bbfb ;return nil ;};func (_gggad *SymbolDictionary )setAtPixels ()error {if _gggad .IsHuffmanEncoded {return nil ;
};_acgf :=1;if _gggad .SdTemplate ==0{_acgf =4;};if _fdfc :=_gggad .readAtPixels (_acgf );_fdfc !=nil {return _fdfc ;};return nil ;};func (_egfb *TableSegment )HtLow ()int32 {return _egfb ._efcb };type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;
PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _e .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_bcgc *Header )readReferredToSegmentNumbers (_ggbb _e .StreamReader ,_ccgd int )([]int ,error ){const _ecfe ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_eebg :=make ([]int ,_ccgd );if _ccgd > 0{_bcgc .RTSegments =make ([]*Header ,_ccgd );var (_dagb uint64 ;_cgg error ;);for _gbbc :=0;_gbbc < _ccgd ;_gbbc ++{_dagb ,_cgg =_ggbb .ReadBits (byte (_bcgc .referenceSize ())<<3);if _cgg !=nil {return nil ,_fac .Wrapf (_cgg ,_ecfe ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_gbbc );
};_eebg [_gbbc ]=int (_dagb &_c .MaxInt32 );};};return _eebg ,nil ;};func (_fecc *PageInformationSegment )readIsStriped ()error {_bdda ,_efee :=_fecc ._acgg .ReadBit ();if _efee !=nil {return _efee ;};if _bdda ==1{_fecc .IsStripe =true ;};return nil ;};
func (_dbgc *PatternDictionary )readPatternWidthAndHeight ()error {_adede ,_gefa :=_dbgc ._efef .ReadByte ();if _gefa !=nil {return _gefa ;};_dbgc .HdpWidth =_adede ;_adede ,_gefa =_dbgc ._efef .ReadByte ();if _gefa !=nil {return _gefa ;};_dbgc .HdpHeight =_adede ;
return nil ;};func (_dcaa *TextRegion )setContexts (_bbceg *_fc .DecoderStats ,_gcgf *_fc .DecoderStats ,_eedc *_fc .DecoderStats ,_dbee *_fc .DecoderStats ,_eabd *_fc .DecoderStats ,_ebgef *_fc .DecoderStats ,_gbcd *_fc .DecoderStats ,_faee *_fc .DecoderStats ,_gadg *_fc .DecoderStats ,_cfgce *_fc .DecoderStats ){_dcaa ._dcbac =_gcgf ;
_dcaa ._badf =_eedc ;_dcaa ._dbgbc =_dbee ;_dcaa ._dfgf =_eabd ;_dcaa ._bbcc =_gbcd ;_dcaa ._gadfb =_faee ;_dcaa ._gdfd =_ebgef ;_dcaa ._efefb =_gadg ;_dcaa ._ddcf =_cfgce ;_dcaa ._ebfef =_bbceg ;};func NewRegionSegment (r _e .StreamReader )*RegionSegment {return &RegionSegment {_fggb :r }};
type GenericRefinementRegion struct{_gb templater ;_ge templater ;_gd _e .StreamReader ;_feg *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ba .Bitmap ;ReferenceBitmap *_ba .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_dc *_fc .Decoder ;_gdc *_fc .DecoderStats ;_gde bool ;_dg []bool ;};func (_ebag *TextRegion )decodeRdy ()(int64 ,error ){const _daed ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _ebag .IsHuffmanEncoded {if _ebag .SbHuffRDY ==3{if _ebag ._gdde ==nil {var (_fabf int ;
_gaaac error ;);if _ebag .SbHuffFS ==3{_fabf ++;};if _ebag .SbHuffDS ==3{_fabf ++;};if _ebag .SbHuffDT ==3{_fabf ++;};if _ebag .SbHuffRDWidth ==3{_fabf ++;};if _ebag .SbHuffRDHeight ==3{_fabf ++;};if _ebag .SbHuffRDX ==3{_fabf ++;};_ebag ._gdde ,_gaaac =_ebag .getUserTable (_fabf );
if _gaaac !=nil {return 0,_fac .Wrap (_gaaac ,_daed ,"");};};return _ebag ._gdde .Decode (_ebag ._addad );};_cddaa ,_gffa :=_be .GetStandardTable (14+int (_ebag .SbHuffRDY ));if _gffa !=nil {return 0,_gffa ;};return _cddaa .Decode (_ebag ._addad );};_agdbc ,_caae :=_ebag ._ffdc .DecodeInt (_ebag ._ddcf );
if _caae !=nil {return 0,_fac .Wrap (_caae ,_daed ,"");};return int64 (_agdbc ),nil ;};func (_ggea *HalftoneRegion )Init (hd *Header ,r _e .StreamReader )error {_ggea ._gdcd =r ;_ggea ._aba =hd ;_ggea .RegionSegment =NewRegionSegment (r );return _ggea .parseHeader ();
};func (_dcea *SymbolDictionary )decodeAggregate (_adcd ,_gbdg uint32 )error {var (_bdeef int64 ;_cadb error ;);if _dcea .IsHuffmanEncoded {_bdeef ,_cadb =_dcea .huffDecodeRefAggNInst ();if _cadb !=nil {return _cadb ;};}else {_gbbgg ,_bbde :=_dcea ._bbce .DecodeInt (_dcea ._ebdc );
if _bbde !=nil {return _bbde ;};_bdeef =int64 (_gbbgg );};if _bdeef > 1{return _dcea .decodeThroughTextRegion (_adcd ,_gbdg ,uint32 (_bdeef ));}else if _bdeef ==1{return _dcea .decodeRefinedSymbol (_adcd ,_gbdg );};return nil ;};func (_gbb *GenericRefinementRegion )readAtPixels ()error {_gbb .GrAtX =make ([]int8 ,2);
_gbb .GrAtY =make ([]int8 ,2);_fegg ,_adf :=_gbb ._gd .ReadByte ();if _adf !=nil {return _adf ;};_gbb .GrAtX [0]=int8 (_fegg );_fegg ,_adf =_gbb ._gd .ReadByte ();if _adf !=nil {return _adf ;};_gbb .GrAtY [0]=int8 (_fegg );_fegg ,_adf =_gbb ._gd .ReadByte ();
if _adf !=nil {return _adf ;};_gbb .GrAtX [1]=int8 (_fegg );_fegg ,_adf =_gbb ._gd .ReadByte ();if _adf !=nil {return _adf ;};_gbb .GrAtY [1]=int8 (_fegg );return nil ;};func (_dfbf *RegionSegment )parseHeader ()error {const _defe ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_bea .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_bea .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_cbfg ,_cbcf :=_dfbf ._fggb .ReadBits (32);if _cbcf !=nil {return _fac .Wrap (_cbcf ,_defe ,"\u0077\u0069\u0064t\u0068");};_dfbf .BitmapWidth =uint32 (_cbfg &_c .MaxUint32 );_cbfg ,_cbcf =_dfbf ._fggb .ReadBits (32);if _cbcf !=nil {return _fac .Wrap (_cbcf ,_defe ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_dfbf .BitmapHeight =uint32 (_cbfg &_c .MaxUint32 );_cbfg ,_cbcf =_dfbf ._fggb .ReadBits (32);if _cbcf !=nil {return _fac .Wrap (_cbcf ,_defe ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dfbf .XLocation =uint32 (_cbfg &_c .MaxUint32 );
_cbfg ,_cbcf =_dfbf ._fggb .ReadBits (32);if _cbcf !=nil {return _fac .Wrap (_cbcf ,_defe ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dfbf .YLocation =uint32 (_cbfg &_c .MaxUint32 );if _ ,_cbcf =_dfbf ._fggb .ReadBits (5);_cbcf !=nil {return _fac .Wrap (_cbcf ,_defe ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _cbcf =_dfbf .readCombinationOperator ();_cbcf !=nil {return _fac .Wrap (_cbcf ,_defe ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_bffc *HalftoneRegion )parseHeader ()error {if _afee :=_bffc .RegionSegment .parseHeader ();
_afee !=nil {return _afee ;};_aeac ,_cffe :=_bffc ._gdcd .ReadBit ();if _cffe !=nil {return _cffe ;};_bffc .HDefaultPixel =int8 (_aeac );_edbe ,_cffe :=_bffc ._gdcd .ReadBits (3);if _cffe !=nil {return _cffe ;};_bffc .CombinationOperator =_ba .CombinationOperator (_edbe &0xf);
_aeac ,_cffe =_bffc ._gdcd .ReadBit ();if _cffe !=nil {return _cffe ;};if _aeac ==1{_bffc .HSkipEnabled =true ;};_edbe ,_cffe =_bffc ._gdcd .ReadBits (2);if _cffe !=nil {return _cffe ;};_bffc .HTemplate =byte (_edbe &0xf);_aeac ,_cffe =_bffc ._gdcd .ReadBit ();
if _cffe !=nil {return _cffe ;};if _aeac ==1{_bffc .IsMMREncoded =true ;};_edbe ,_cffe =_bffc ._gdcd .ReadBits (32);if _cffe !=nil {return _cffe ;};_bffc .HGridWidth =uint32 (_edbe &_c .MaxUint32 );_edbe ,_cffe =_bffc ._gdcd .ReadBits (32);if _cffe !=nil {return _cffe ;
};_bffc .HGridHeight =uint32 (_edbe &_c .MaxUint32 );_edbe ,_cffe =_bffc ._gdcd .ReadBits (32);if _cffe !=nil {return _cffe ;};_bffc .HGridX =int32 (_edbe &_c .MaxInt32 );_edbe ,_cffe =_bffc ._gdcd .ReadBits (32);if _cffe !=nil {return _cffe ;};_bffc .HGridY =int32 (_edbe &_c .MaxInt32 );
_edbe ,_cffe =_bffc ._gdcd .ReadBits (16);if _cffe !=nil {return _cffe ;};_bffc .HRegionX =uint16 (_edbe &_c .MaxUint16 );_edbe ,_cffe =_bffc ._gdcd .ReadBits (16);if _cffe !=nil {return _cffe ;};_bffc .HRegionY =uint16 (_edbe &_c .MaxUint16 );if _cffe =_bffc .computeSegmentDataStructure ();
_cffe !=nil {return _cffe ;};return _bffc .checkInput ();};func (_eee *GenericRefinementRegion )decodeTemplate (_fbg ,_ccae ,_baef ,_dafc ,_dfe ,_fee ,_gbf ,_gbc ,_abd ,_cbf int ,_eag templater )(_caf error ){var (_bcd ,_aag ,_adgd ,_ccac ,_fgd int16 ;
_aee ,_gca ,_cf ,_bbe int ;_ebc byte ;);if _abd >=1&&(_abd -1)< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf -_dafc );if _caf !=nil {return ;};_aee =int (_ebc );};if _abd >=0&&(_abd )< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf );
if _caf !=nil {return ;};_gca =int (_ebc );};if _abd >=-1&&(_abd +1)< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf +_dafc );if _caf !=nil {return ;};_cf =int (_ebc );};_cbf ++;if _fbg >=1{_ebc ,_caf =_eee .RegionBitmap .GetByte (_gbc -_baef );
if _caf !=nil {return ;};_bbe =int (_ebc );};_gbc ++;_bgcd :=_eee .ReferenceDX %8;_ebd :=6+_bgcd ;_ffa :=_cbf %_dafc ;if _ebd >=0{if _ebd < 8{_bcd =int16 (_aee >>uint (_ebd ))&0x07;};if _ebd < 8{_aag =int16 (_gca >>uint (_ebd ))&0x07;};if _ebd < 8{_adgd =int16 (_cf >>uint (_ebd ))&0x07;
};if _ebd ==6&&_ffa > 1{if _abd >=1&&(_abd -1)< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf -_dafc -2);if _caf !=nil {return _caf ;};_bcd |=int16 (_ebc <<2)&0x04;};if _abd >=0&&_abd < _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf -2);
if _caf !=nil {return _caf ;};_aag |=int16 (_ebc <<2)&0x04;};if _abd >=-1&&_abd +1< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf +_dafc -2);if _caf !=nil {return _caf ;};_adgd |=int16 (_ebc <<2)&0x04;};};if _ebd ==0{_aee =0;
_gca =0;_cf =0;if _ffa < _dafc -1{if _abd >=1&&_abd -1< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf -_dafc );if _caf !=nil {return _caf ;};_aee =int (_ebc );};if _abd >=0&&_abd < _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf );
if _caf !=nil {return _caf ;};_gca =int (_ebc );};if _abd >=-1&&_abd +1< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf +_dafc );if _caf !=nil {return _caf ;};_cf =int (_ebc );};};_cbf ++;};}else {_bcd =int16 (_aee <<1)&0x07;
_aag =int16 (_gca <<1)&0x07;_adgd =int16 (_cf <<1)&0x07;_aee =0;_gca =0;_cf =0;if _ffa < _dafc -1{if _abd >=1&&_abd -1< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf -_dafc );if _caf !=nil {return _caf ;};_aee =int (_ebc );
};if _abd >=0&&_abd < _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf );if _caf !=nil {return _caf ;};_gca =int (_ebc );};if _abd >=-1&&_abd +1< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf +_dafc );
if _caf !=nil {return _caf ;};_cf =int (_ebc );};_cbf ++;};_bcd |=int16 ((_aee >>7)&0x07);_aag |=int16 ((_gca >>7)&0x07);_adgd |=int16 ((_cf >>7)&0x07);};_ccac =int16 (_bbe >>6);_fgd =0;_bde :=(2-_bgcd )%8;_aee <<=uint (_bde );_gca <<=uint (_bde );_cf <<=uint (_bde );
_bbe <<=2;var _fbe int ;for _beb :=0;_beb < _ccae ;_beb ++{_edg :=_beb &0x07;_fegc :=_eag .form (_bcd ,_aag ,_adgd ,_ccac ,_fgd );if _eee ._gde {_ebc ,_caf =_eee .RegionBitmap .GetByte (_eee .RegionBitmap .GetByteIndex (_beb ,_fbg ));if _caf !=nil {return _caf ;
};_eee ._gdc .SetIndex (int32 (_eee .overrideAtTemplate0 (int (_fegc ),_beb ,_fbg ,int (_ebc ),_edg )));}else {_eee ._gdc .SetIndex (int32 (_fegc ));};_fbe ,_caf =_eee ._dc .DecodeBit (_eee ._gdc );if _caf !=nil {return _caf ;};if _caf =_eee .RegionBitmap .SetPixel (_beb ,_fbg ,byte (_fbe ));
_caf !=nil {return _caf ;};_bcd =((_bcd <<1)|0x01&int16 (_aee >>7))&0x07;_aag =((_aag <<1)|0x01&int16 (_gca >>7))&0x07;_adgd =((_adgd <<1)|0x01&int16 (_cf >>7))&0x07;_ccac =((_ccac <<1)|0x01&int16 (_bbe >>7))&0x07;_fgd =int16 (_fbe );if (_beb -int (_eee .ReferenceDX ))%8==5{_aee =0;
_gca =0;_cf =0;if ((_beb -int (_eee .ReferenceDX ))/8)+1< _eee .ReferenceBitmap .RowStride {if _abd >=1&&(_abd -1)< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf -_dafc );if _caf !=nil {return _caf ;};_aee =int (_ebc );
};if _abd >=0&&_abd < _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf );if _caf !=nil {return _caf ;};_gca =int (_ebc );};if _abd >=-1&&(_abd +1)< _eee .ReferenceBitmap .Height {_ebc ,_caf =_eee .ReferenceBitmap .GetByte (_cbf +_dafc );
if _caf !=nil {return _caf ;};_cf =int (_ebc );};};_cbf ++;}else {_aee <<=1;_gca <<=1;_cf <<=1;};if _edg ==5&&_fbg >=1{if ((_beb >>3)+1)>=_eee .RegionBitmap .RowStride {_bbe =0;}else {_ebc ,_caf =_eee .RegionBitmap .GetByte (_gbc -_baef );if _caf !=nil {return _caf ;
};_bbe =int (_ebc );};_gbc ++;}else {_bbe <<=1;};};return nil ;};func (_fccae *SymbolDictionary )encodeNumSyms (_ccea _e .BinaryWriter )(_efdb int ,_aacf error ){const _bdfa ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_cggc :=make ([]byte ,4);_b .BigEndian .PutUint32 (_cggc ,_fccae .NumberOfExportedSymbols );if _efdb ,_aacf =_ccea .Write (_cggc );_aacf !=nil {return _efdb ,_fac .Wrap (_aacf ,_bdfa ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_b .BigEndian .PutUint32 (_cggc ,_fccae .NumberOfNewSymbols );_fcef ,_aacf :=_ccea .Write (_cggc );if _aacf !=nil {return _efdb ,_fac .Wrap (_aacf ,_bdfa ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _efdb +_fcef ,nil ;};
func (_gegf *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_gegf .SdHuffAggInstanceSelection {_edafg ,_bdbbd :=_be .GetStandardTable (1);if _bdbbd !=nil {return 0,_bdbbd ;};return _edafg .Decode (_gegf ._eced );};if _gegf ._cdcb ==nil {var (_fedc int ;
_gded error ;);if _gegf .SdHuffDecodeHeightSelection ==3{_fedc ++;};if _gegf .SdHuffDecodeWidthSelection ==3{_fedc ++;};if _gegf .SdHuffBMSizeSelection ==3{_fedc ++;};_gegf ._cdcb ,_gded =_gegf .getUserTable (_fedc );if _gded !=nil {return 0,_gded ;};};
return _gegf ._cdcb .Decode (_gegf ._eced );};func (_gdab *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bagb int64 ,_bafb ,_dgbeg uint32 )(*_ba .Bitmap ,error ){if _bagb ==0{_cdda :=_ba .New (int (_dgbeg ),int (_bafb ));var (_agad byte ;_cdbg error ;
);for _gcba :=0;_gcba < len (_cdda .Data );_gcba ++{_agad ,_cdbg =_gdab ._eced .ReadByte ();if _cdbg !=nil {return nil ,_cdbg ;};if _cdbg =_cdda .SetByte (_gcba ,_agad );_cdbg !=nil {return nil ,_cdbg ;};};return _cdda ,nil ;};if _gdab ._bbbd ==nil {_gdab ._bbbd =NewGenericRegion (_gdab ._eced );
};_gdab ._bbbd .setParameters (true ,_gdab ._eced .StreamPosition (),_bagb ,_bafb ,_dgbeg );_ffc ,_ggcb :=_gdab ._bbbd .GetRegionBitmap ();if _ggcb !=nil {return nil ,_ggcb ;};return _ffc ,nil ;};func (_dfd *GenericRegion )InitEncode (bm *_ba .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _gbcc ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _fac .Error (_gbcc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fac .Error (_gbcc ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_dfd .Bitmap =bm ;_dfd .GBTemplate =byte (template );switch _dfd .GBTemplate {case 0:_dfd .GBAtX =[]int8 {3,-3,2,-2};_dfd .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_dfd .GBAtX =[]int8 {3};_dfd .GBAtY =[]int8 {-1};case 2,3:_dfd .GBAtX =[]int8 {2};_dfd .GBAtY =[]int8 {-1};
default:return _fac .Errorf (_gbcc ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_dfd .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_dfd .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_aecaa *TextRegion )parseHeader ()error {var _gdabe error ;
_bea .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _gdabe !=nil {_bea .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_gdabe );
}else {_bea .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _gdabe =_aecaa .RegionInfo .parseHeader ();
_gdabe !=nil {return _gdabe ;};if _gdabe =_aecaa .readRegionFlags ();_gdabe !=nil {return _gdabe ;};if _aecaa .IsHuffmanEncoded {if _gdabe =_aecaa .readHuffmanFlags ();_gdabe !=nil {return _gdabe ;};};if _gdabe =_aecaa .readUseRefinement ();_gdabe !=nil {return _gdabe ;
};if _gdabe =_aecaa .readAmountOfSymbolInstances ();_gdabe !=nil {return _gdabe ;};if _gdabe =_aecaa .getSymbols ();_gdabe !=nil {return _gdabe ;};if _gdabe =_aecaa .computeSymbolCodeLength ();_gdabe !=nil {return _gdabe ;};if _gdabe =_aecaa .checkInput ();
_gdabe !=nil {return _gdabe ;};_bea .Log .Trace ("\u0025\u0073",_aecaa .String ());return nil ;};func (_ccgc *GenericRefinementRegion )updateOverride ()error {if _ccgc .GrAtX ==nil ||_ccgc .GrAtY ==nil {return _bg .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_ccgc .GrAtX )!=len (_ccgc .GrAtY ){return _bg .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_ccgc ._dg =make ([]bool ,len (_ccgc .GrAtX ));switch _ccgc .TemplateID {case 0:if _ccgc .GrAtX [0]!=-1&&_ccgc .GrAtY [0]!=-1{_ccgc ._dg [0]=true ;
_ccgc ._gde =true ;};if _ccgc .GrAtX [1]!=-1&&_ccgc .GrAtY [1]!=-1{_ccgc ._dg [1]=true ;_ccgc ._gde =true ;};case 1:_ccgc ._gde =false ;};return nil ;};func (_dccd *TextRegion )String ()string {_eedf :=&_fa .Builder {};_eedf .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_eedf .WriteString (_dccd .RegionInfo .String ()+"\u000a");_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_dccd .SbrTemplate ));_eedf .WriteString (_d .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_dccd .SbDsOffset ));
_eedf .WriteString (_d .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_dccd .DefaultPixel ));_eedf .WriteString (_d .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_dccd .CombinationOperator ));
_eedf .WriteString (_d .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_dccd .IsTransposed ));_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_dccd .ReferenceCorner ));
_eedf .WriteString (_d .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_dccd .UseRefinement ));_eedf .WriteString (_d .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_dccd .IsHuffmanEncoded ));
if _dccd .IsHuffmanEncoded {_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dccd .SbHuffRSize ));_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_dccd .SbHuffRDY ));
_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_dccd .SbHuffRDX ));_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_dccd .SbHuffRDHeight ));
_eedf .WriteString (_d .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_dccd .SbHuffRDWidth ));_eedf .WriteString (_d .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_dccd .SbHuffDT ));
_eedf .WriteString (_d .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_dccd .SbHuffDS ));_eedf .WriteString (_d .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_dccd .SbHuffFS ));
};_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dccd .SbrATX ));_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_dccd .SbrATY ));
_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dccd .NumberOfSymbolInstances ));_eedf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dccd .SbrATX ));
return _eedf .String ();};var (_dad Segmenter ;_gdga =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _dad },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _dad },TProfiles :func ()Segmenter {return _dad },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _dad },TBitmap :func ()Segmenter {return _dad }};
);func (_cad *HalftoneRegion )computeX (_cgbbd ,_cfe int )int {return _cad .shiftAndFill (int (_cad .HGridX )+_cgbbd *int (_cad .HRegionY )+_cfe *int (_cad .HRegionX ));};func (_face *SymbolDictionary )readAtPixels (_aagg int )error {_face .SdATX =make ([]int8 ,_aagg );
_face .SdATY =make ([]int8 ,_aagg );var (_cbea byte ;_bfde error ;);for _cecd :=0;_cecd < _aagg ;_cecd ++{_cbea ,_bfde =_face ._eced .ReadByte ();if _bfde !=nil {return _bfde ;};_face .SdATX [_cecd ]=int8 (_cbea );_cbea ,_bfde =_face ._eced .ReadByte ();
if _bfde !=nil {return _bfde ;};_face .SdATY [_cecd ]=int8 (_cbea );};return nil ;};func (_dfed *GenericRegion )decodeLine (_bcbe ,_eada ,_ffb int )error {const _fcbf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_cceee :=_dfed .Bitmap .GetByteIndex (0,_bcbe );
_ebdb :=_cceee -_dfed .Bitmap .RowStride ;switch _dfed .GBTemplate {case 0:if !_dfed .UseExtTemplates {return _dfed .decodeTemplate0a (_bcbe ,_eada ,_ffb ,_cceee ,_ebdb );};return _dfed .decodeTemplate0b (_bcbe ,_eada ,_ffb ,_cceee ,_ebdb );case 1:return _dfed .decodeTemplate1 (_bcbe ,_eada ,_ffb ,_cceee ,_ebdb );
case 2:return _dfed .decodeTemplate2 (_bcbe ,_eada ,_ffb ,_cceee ,_ebdb );case 3:return _dfed .decodeTemplate3 (_bcbe ,_eada ,_ffb ,_cceee ,_ebdb );};return _fac .Errorf (_fcbf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_dfed .GBTemplate );
};func (_fefb *SymbolDictionary )GetDictionary ()([]*_ba .Bitmap ,error ){_bea .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_bea .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_bea .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_fefb ._gbbf ,_fefb ._edgdd );
}();if _fefb ._gbbf ==nil {var _dgbc error ;if _fefb .UseRefinementAggregation {_fefb ._fabg =_fefb .getSbSymCodeLen ();};if !_fefb .IsHuffmanEncoded {if _dgbc =_fefb .setCodingStatistics ();_dgbc !=nil {return nil ,_dgbc ;};};_fefb ._edgdd =make ([]*_ba .Bitmap ,_fefb .NumberOfNewSymbols );
var _aagf []int ;if _fefb .IsHuffmanEncoded &&!_fefb .UseRefinementAggregation {_aagf =make ([]int ,_fefb .NumberOfNewSymbols );};if _dgbc =_fefb .setSymbolsArray ();_dgbc !=nil {return nil ,_dgbc ;};var _gaaf ,_dea int64 ;_fefb ._ceab =0;for _fefb ._ceab < _fefb .NumberOfNewSymbols {_dea ,_dgbc =_fefb .decodeHeightClassDeltaHeight ();
if _dgbc !=nil {return nil ,_dgbc ;};_gaaf +=_dea ;var _fcbfe ,_eabae uint32 ;_baba :=int64 (_fefb ._ceab );for {var _abgg int64 ;_abgg ,_dgbc =_fefb .decodeDifferenceWidth ();if _caa .Is (_dgbc ,_cg .ErrOOB ){break ;};if _dgbc !=nil {return nil ,_dgbc ;
};if _fefb ._ceab >=_fefb .NumberOfNewSymbols {break ;};_fcbfe +=uint32 (_abgg );_eabae +=_fcbfe ;if !_fefb .IsHuffmanEncoded ||_fefb .UseRefinementAggregation {if !_fefb .UseRefinementAggregation {_dgbc =_fefb .decodeDirectlyThroughGenericRegion (_fcbfe ,uint32 (_gaaf ));
if _dgbc !=nil {return nil ,_dgbc ;};}else {_dgbc =_fefb .decodeAggregate (_fcbfe ,uint32 (_gaaf ));if _dgbc !=nil {return nil ,_dgbc ;};};}else if _fefb .IsHuffmanEncoded &&!_fefb .UseRefinementAggregation {_aagf [_fefb ._ceab ]=int (_fcbfe );};_fefb ._ceab ++;
};if _fefb .IsHuffmanEncoded &&!_fefb .UseRefinementAggregation {var _aecbf int64 ;if _fefb .SdHuffBMSizeSelection ==0{var _dccfed _be .Tabler ;_dccfed ,_dgbc =_be .GetStandardTable (1);if _dgbc !=nil {return nil ,_dgbc ;};_aecbf ,_dgbc =_dccfed .Decode (_fefb ._eced );
if _dgbc !=nil {return nil ,_dgbc ;};}else {_aecbf ,_dgbc =_fefb .huffDecodeBmSize ();if _dgbc !=nil {return nil ,_dgbc ;};};_fefb ._eced .Align ();var _cbdb *_ba .Bitmap ;_cbdb ,_dgbc =_fefb .decodeHeightClassCollectiveBitmap (_aecbf ,uint32 (_gaaf ),_eabae );
if _dgbc !=nil {return nil ,_dgbc ;};_dgbc =_fefb .decodeHeightClassBitmap (_cbdb ,_baba ,int (_gaaf ),_aagf );if _dgbc !=nil {return nil ,_dgbc ;};};};_cfbfb ,_dgbc :=_fefb .getToExportFlags ();if _dgbc !=nil {return nil ,_dgbc ;};_fefb .setExportedSymbols (_cfbfb );
};return _fefb ._gbbf ,nil ;};func (_dcfda *SymbolDictionary )setRetainedCodingContexts (_dfge *SymbolDictionary ){_dcfda ._bbce =_dfge ._bbce ;_dcfda .IsHuffmanEncoded =_dfge .IsHuffmanEncoded ;_dcfda .UseRefinementAggregation =_dfge .UseRefinementAggregation ;
_dcfda .SdTemplate =_dfge .SdTemplate ;_dcfda .SdrTemplate =_dfge .SdrTemplate ;_dcfda .SdATX =_dfge .SdATX ;_dcfda .SdATY =_dfge .SdATY ;_dcfda .SdrATX =_dfge .SdrATX ;_dcfda .SdrATY =_dfge .SdrATY ;_dcfda ._fbcd =_dfge ._fbcd ;};const (ORandom OrganizationType =iota ;
OSequential ;);func (_cffaf *Header )writeSegmentDataLength (_gdee _e .BinaryWriter )(_gdagb int ,_cdadb error ){_ffbg :=make ([]byte ,4);_b .BigEndian .PutUint32 (_ffbg ,uint32 (_cffaf .SegmentDataLength ));if _gdagb ,_cdadb =_gdee .Write (_ffbg );_cdadb !=nil {return 0,_fac .Wrap (_cdadb ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _gdagb ,nil ;};func (_ebe *PageInformationSegment )readContainsRefinement ()error {_bcgf ,_egbg :=_ebe ._acgg .ReadBit ();if _egbg !=nil {return _egbg ;};if _bcgf ==1{_ebe ._dgdg =true ;};return nil ;};func (_cd *GenericRefinementRegion )getGrReference ()(*_ba .Bitmap ,error ){segments :=_cd ._feg .RTSegments ;
if len (segments )==0{return nil ,_bg .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_ce ,_ac :=segments [0].GetSegmentData ();if _ac !=nil {return nil ,_ac ;
};_gg ,_bdb :=_ce .(Regioner );if !_bdb {return nil ,_d .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ce );
};return _gg .GetRegionBitmap ();};func (_bbc *GenericRegion )decodeSLTP ()(int ,error ){switch _bbc .GBTemplate {case 0:_bbc ._afd .SetIndex (0x9B25);case 1:_bbc ._afd .SetIndex (0x795);case 2:_bbc ._afd .SetIndex (0xE5);case 3:_bbc ._afd .SetIndex (0x195);
};return _bbc ._gfcd .DecodeBit (_bbc ._afd );};func (_fbgf *Header )readSegmentNumber (_dace _e .StreamReader )error {const _bffa ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_fabc :=make ([]byte ,4);
_ ,_ebge :=_dace .Read (_fabc );if _ebge !=nil {return _fac .Wrap (_ebge ,_bffa ,"");};_fbgf .SegmentNumber =_b .BigEndian .Uint32 (_fabc );return nil ;};func (_bac *EndOfStripe )Init (h *Header ,r _e .StreamReader )error {_bac ._fd =r ;return _bac .parseHeader (h ,r );
};func (_fgeg *TableSegment )HtRS ()int32 {return _fgeg ._edbebc };func (_fbecb *TableSegment )HtOOB ()int32 {return _fbecb ._gbbgc };func (_bdfb *TextRegion )decodeSymbolInstances ()error {_aafg ,_gabde :=_bdfb .decodeStripT ();if _gabde !=nil {return _gabde ;
};var (_abbg int64 ;_cbbf uint32 ;);for _cbbf < _bdfb .NumberOfSymbolInstances {_eabff ,_afge :=_bdfb .decodeDT ();if _afge !=nil {return _afge ;};_aafg +=_eabff ;var _bbea int64 ;_feadf :=true ;_bdfb ._cfgc =0;for {if _feadf {_bbea ,_afge =_bdfb .decodeDfs ();
if _afge !=nil {return _afge ;};_abbg +=_bbea ;_bdfb ._cfgc =_abbg ;_feadf =false ;}else {_gedg ,_eece :=_bdfb .decodeIds ();if _caa .Is (_eece ,_cg .ErrOOB ){break ;};if _eece !=nil {return _eece ;};if _cbbf >=_bdfb .NumberOfSymbolInstances {break ;};
_bdfb ._cfgc +=_gedg +int64 (_bdfb .SbDsOffset );};_fcec ,_afba :=_bdfb .decodeCurrentT ();if _afba !=nil {return _afba ;};_dece :=_aafg +_fcec ;_deee ,_afba :=_bdfb .decodeID ();if _afba !=nil {return _afba ;};_gbfd ,_afba :=_bdfb .decodeRI ();if _afba !=nil {return _afba ;
};_edgbd ,_afba :=_bdfb .decodeIb (_gbfd ,_deee );if _afba !=nil {return _afba ;};if _afba =_bdfb .blit (_edgbd ,_dece );_afba !=nil {return _afba ;};_cbbf ++;};};return nil ;};func (_fcbfc *Header )readSegmentPageAssociation (_gbad Documenter ,_edd _e .StreamReader ,_feda uint64 ,_eadd ...int )(_bgec error ){const _bdbfd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_fcbfc .PageAssociationFieldSize {_ddad ,_fdad :=_edd .ReadBits (8);if _fdad !=nil {return _fac .Wrap (_fdad ,_bdbfd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fcbfc .PageAssociation =int (_ddad &0xFF);}else {_ccgcc ,_cffc :=_edd .ReadBits (32);
if _cffc !=nil {return _fac .Wrap (_cffc ,_bdbfd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fcbfc .PageAssociation =int (_ccgcc &_c .MaxInt32 );};if _feda ==0{return nil ;};if _fcbfc .PageAssociation !=0{_debb ,_bcgd :=_gbad .GetPage (_fcbfc .PageAssociation );
if _bcgd !=nil {return _fac .Wrap (_bcgd ,_bdbfd ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _fcbe int ;for _gagd :=uint64 (0);_gagd < _feda ;_gagd ++{_fcbe =_eadd [_gagd ];
_fcbfc .RTSegments [_gagd ],_bcgd =_debb .GetSegment (_fcbe );if _bcgd !=nil {var _defb error ;_fcbfc .RTSegments [_gagd ],_defb =_gbad .GetGlobalSegment (_fcbe );if _defb !=nil {return _fac .Wrapf (_bcgd ,_bdbfd ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_fcbfc .PageAssociation );
};};};return nil ;};for _ddfd :=uint64 (0);_ddfd < _feda ;_ddfd ++{_fcbfc .RTSegments [_ddfd ],_bgec =_gbad .GetGlobalSegment (_eadd [_ddfd ]);if _bgec !=nil {return _fac .Wrapf (_bgec ,_bdbfd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_eadd [_ddfd ]);
};};return nil ;};func (_cacc *Header )referenceSize ()uint {switch {case _cacc .SegmentNumber <=255:return 1;case _cacc .SegmentNumber <=65535:return 2;default:return 4;};};func (_cee *GenericRegion )overrideAtTemplate0b (_dage ,_cgag ,_agfb ,_ffbec ,_def ,_feaa int )int {if _cee .GBAtOverride [0]{_dage &=0xFFFD;
if _cee .GBAtY [0]==0&&_cee .GBAtX [0]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [0]&0x1))<<1;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [0]),_agfb +int (_cee .GBAtY [0])))<<1;};};if _cee .GBAtOverride [1]{_dage &=0xDFFF;
if _cee .GBAtY [1]==0&&_cee .GBAtX [1]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [1]&0x1))<<13;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [1]),_agfb +int (_cee .GBAtY [1])))<<13;};};if _cee .GBAtOverride [2]{_dage &=0xFDFF;
if _cee .GBAtY [2]==0&&_cee .GBAtX [2]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [2]&0x1))<<9;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [2]),_agfb +int (_cee .GBAtY [2])))<<9;};};if _cee .GBAtOverride [3]{_dage &=0xBFFF;
if _cee .GBAtY [3]==0&&_cee .GBAtX [3]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [3]&0x1))<<14;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [3]),_agfb +int (_cee .GBAtY [3])))<<14;};};if _cee .GBAtOverride [4]{_dage &=0xEFFF;
if _cee .GBAtY [4]==0&&_cee .GBAtX [4]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [4]&0x1))<<12;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [4]),_agfb +int (_cee .GBAtY [4])))<<12;};};if _cee .GBAtOverride [5]{_dage &=0xFFDF;
if _cee .GBAtY [5]==0&&_cee .GBAtX [5]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [5]&0x1))<<5;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [5]),_agfb +int (_cee .GBAtY [5])))<<5;};};if _cee .GBAtOverride [6]{_dage &=0xFFFB;
if _cee .GBAtY [6]==0&&_cee .GBAtX [6]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [6]&0x1))<<2;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [6]),_agfb +int (_cee .GBAtY [6])))<<2;};};if _cee .GBAtOverride [7]{_dage &=0xFFF7;
if _cee .GBAtY [7]==0&&_cee .GBAtX [7]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [7]&0x1))<<3;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [7]),_agfb +int (_cee .GBAtY [7])))<<3;};};if _cee .GBAtOverride [8]{_dage &=0xF7FF;
if _cee .GBAtY [8]==0&&_cee .GBAtX [8]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [8]&0x1))<<11;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [8]),_agfb +int (_cee .GBAtY [8])))<<11;};};if _cee .GBAtOverride [9]{_dage &=0xFFEF;
if _cee .GBAtY [9]==0&&_cee .GBAtX [9]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [9]&0x1))<<4;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [9]),_agfb +int (_cee .GBAtY [9])))<<4;};};if _cee .GBAtOverride [10]{_dage &=0x7FFF;
if _cee .GBAtY [10]==0&&_cee .GBAtX [10]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [10]&0x1))<<15;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [10]),_agfb +int (_cee .GBAtY [10])))<<15;};};if _cee .GBAtOverride [11]{_dage &=0xFDFF;
if _cee .GBAtY [11]==0&&_cee .GBAtX [11]>=-int8 (_def ){_dage |=(_ffbec >>uint (int8 (_feaa )-_cee .GBAtX [11]&0x1))<<10;}else {_dage |=int (_cee .getPixel (_cgag +int (_cee .GBAtX [11]),_agfb +int (_cee .GBAtY [11])))<<10;};};return _dage ;};func (_abgf *SymbolDictionary )setExportedSymbols (_efb []int ){for _fbge :=uint32 (0);
_fbge < _abgf ._cgeg +_abgf .NumberOfNewSymbols ;_fbge ++{if _efb [_fbge ]==1{var _gbfb *_ba .Bitmap ;if _fbge < _abgf ._cgeg {_gbfb =_abgf ._fdec [_fbge ];}else {_gbfb =_abgf ._edgdd [_fbge -_abgf ._cgeg ];};_bea .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_gbfb );
_abgf ._gbbf =append (_abgf ._gbbf ,_gbfb );};};};func (_dafg *GenericRegion )decodeTemplate2 (_aff ,_fcab ,_fbb int ,_bda ,_bec int )(_gcae error ){const _agda ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_dccg ,_gab int ;
_ddf ,_fga int ;_baca byte ;_cgf ,_dcb int ;);if _aff >=1{_baca ,_gcae =_dafg .Bitmap .GetByte (_bec );if _gcae !=nil {return _fac .Wrap (_gcae ,_agda ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_ddf =int (_baca );
};if _aff >=2{_baca ,_gcae =_dafg .Bitmap .GetByte (_bec -_dafg .Bitmap .RowStride );if _gcae !=nil {return _fac .Wrap (_gcae ,_agda ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_fga =int (_baca )<<4;};_dccg =(_ddf >>3&0x7c)|(_fga >>3&0x380);
for _egc :=0;_egc < _fbb ;_egc =_cgf {var (_bag byte ;_gabd int ;);_cgf =_egc +8;if _fgfd :=_fcab -_egc ;_fgfd > 8{_gabd =8;}else {_gabd =_fgfd ;};if _aff > 0{_ddf <<=8;if _cgf < _fcab {_baca ,_gcae =_dafg .Bitmap .GetByte (_bec +1);if _gcae !=nil {return _fac .Wrap (_gcae ,_agda ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_ddf |=int (_baca );};};if _aff > 1{_fga <<=8;if _cgf < _fcab {_baca ,_gcae =_dafg .Bitmap .GetByte (_bec -_dafg .Bitmap .RowStride +1);if _gcae !=nil {return _fac .Wrap (_gcae ,_agda ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_fga |=int (_baca )<<4;};};for _cbff :=0;_cbff < _gabd ;_cbff ++{_agdad :=uint (10-_cbff );if _dafg ._fcb {_gab =_dafg .overrideAtTemplate2 (_dccg ,_egc +_cbff ,_aff ,int (_bag ),_cbff );_dafg ._afd .SetIndex (int32 (_gab ));}else {_dafg ._afd .SetIndex (int32 (_dccg ));
};_dcb ,_gcae =_dafg ._gfcd .DecodeBit (_dafg ._afd );if _gcae !=nil {return _fac .Wrap (_gcae ,_agda ,"");};_bag |=byte (_dcb <<uint (7-_cbff ));_dccg =((_dccg &0x1bd)<<1)|_dcb |((_ddf >>_agdad )&0x4)|((_fga >>_agdad )&0x80);};if _cgd :=_dafg .Bitmap .SetByte (_bda ,_bag );
_cgd !=nil {return _fac .Wrap (_cgd ,_agda ,"");};_bda ++;_bec ++;};return nil ;};func (_fegf *GenericRefinementRegion )decodeSLTP ()(int ,error ){_fegf .Template .setIndex (_fegf ._gdc );return _fegf ._dc .DecodeBit (_fegf ._gdc );};func (_adcdg *TextRegion )decodeCurrentT ()(int64 ,error ){if _adcdg .SbStrips !=1{if _adcdg .IsHuffmanEncoded {_egbc ,_fgfg :=_adcdg ._addad .ReadBits (byte (_adcdg .LogSBStrips ));
return int64 (_egbc ),_fgfg ;};_gcg ,_bgbd :=_adcdg ._ffdc .DecodeInt (_adcdg ._dfgf );if _bgbd !=nil {return 0,_bgbd ;};return int64 (_gcg ),nil ;};return 0,nil ;};func (_agfbe *TextRegion )decodeRdh ()(int64 ,error ){const _egefe ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _agfbe .IsHuffmanEncoded {if _agfbe .SbHuffRDHeight ==3{if _agfbe ._dbadda ==nil {var (_acbea int ;_bffca error ;);if _agfbe .SbHuffFS ==3{_acbea ++;};if _agfbe .SbHuffDS ==3{_acbea ++;};if _agfbe .SbHuffDT ==3{_acbea ++;};if _agfbe .SbHuffRDWidth ==3{_acbea ++;
};_agfbe ._dbadda ,_bffca =_agfbe .getUserTable (_acbea );if _bffca !=nil {return 0,_fac .Wrap (_bffca ,_egefe ,"");};};return _agfbe ._dbadda .Decode (_agfbe ._addad );};_dfff ,_cdcbf :=_be .GetStandardTable (14+int (_agfbe .SbHuffRDHeight ));if _cdcbf !=nil {return 0,_fac .Wrap (_cdcbf ,_egefe ,"");
};return _dfff .Decode (_agfbe ._addad );};_gffec ,_adef :=_agfbe ._ffdc .DecodeInt (_agfbe ._gadfb );if _adef !=nil {return 0,_fac .Wrap (_adef ,_egefe ,"");};return int64 (_gffec ),nil ;};func (_bgda *SymbolDictionary )decodeThroughTextRegion (_aabe ,_eade ,_bafd uint32 )error {if _bgda ._cfbf ==nil {_bgda ._cfbf =_fbfe (_bgda ._eced ,nil );
_bgda ._cfbf .setContexts (_bgda ._fbcd ,_fc .NewStats (512,1),_fc .NewStats (512,1),_fc .NewStats (512,1),_fc .NewStats (512,1),_bgda ._adeb ,_fc .NewStats (512,1),_fc .NewStats (512,1),_fc .NewStats (512,1),_fc .NewStats (512,1));};if _cfbb :=_bgda .setSymbolsArray ();
_cfbb !=nil {return _cfbb ;};_bgda ._cfbf .setParameters (_bgda ._bbce ,_bgda .IsHuffmanEncoded ,true ,_aabe ,_eade ,_bafd ,1,_bgda ._cgeg +_bgda ._ceab ,0,0,0,1,0,0,0,0,0,0,0,0,0,_bgda .SdrTemplate ,_bgda .SdrATX ,_bgda .SdrATY ,_bgda ._ggae ,_bgda ._fabg );
return _bgda .addSymbol (_bgda ._cfbf );};func (_beg *SymbolDictionary )String ()string {_bgcbd :=&_fa .Builder {};_bgcbd .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_bgcbd .WriteString (_d .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_beg .SdrTemplate ));
_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_beg .SdTemplate ));_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_beg ._baae ));
_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_beg ._eage ));_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_beg .SdHuffAggInstanceSelection ));
_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_beg .SdHuffBMSizeSelection ));_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_beg .SdHuffDecodeWidthSelection ));
_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_beg .SdHuffDecodeHeightSelection ));_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_beg .UseRefinementAggregation ));
_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_beg .IsHuffmanEncoded ));_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_beg .SdATX ));
_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_beg .SdATY ));_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_beg .SdrATX ));_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_beg .SdrATY ));
_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_beg .NumberOfExportedSymbols ));_bgcbd .WriteString (_d .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_beg .NumberOfNewSymbols ));
_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_beg ._cgeg ));_bgcbd .WriteString (_d .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_beg ._ceab ));
return _bgcbd .String ();};func (_eca *GenericRegion )updateOverrideFlags ()error {const _eefbf ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _eca .GBAtX ==nil ||_eca .GBAtY ==nil {return nil ;
};if len (_eca .GBAtX )!=len (_eca .GBAtY ){return _fac .Errorf (_eefbf ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_eca .GBAtX ),len (_eca .GBAtY ));
};_eca .GBAtOverride =make ([]bool ,len (_eca .GBAtX ));switch _eca .GBTemplate {case 0:if !_eca .UseExtTemplates {if _eca .GBAtX [0]!=3||_eca .GBAtY [0]!=-1{_eca .setOverrideFlag (0);};if _eca .GBAtX [1]!=-3||_eca .GBAtY [1]!=-1{_eca .setOverrideFlag (1);
};if _eca .GBAtX [2]!=2||_eca .GBAtY [2]!=-2{_eca .setOverrideFlag (2);};if _eca .GBAtX [3]!=-2||_eca .GBAtY [3]!=-2{_eca .setOverrideFlag (3);};}else {if _eca .GBAtX [0]!=-2||_eca .GBAtY [0]!=0{_eca .setOverrideFlag (0);};if _eca .GBAtX [1]!=0||_eca .GBAtY [1]!=-2{_eca .setOverrideFlag (1);
};if _eca .GBAtX [2]!=-2||_eca .GBAtY [2]!=-1{_eca .setOverrideFlag (2);};if _eca .GBAtX [3]!=-1||_eca .GBAtY [3]!=-2{_eca .setOverrideFlag (3);};if _eca .GBAtX [4]!=1||_eca .GBAtY [4]!=-2{_eca .setOverrideFlag (4);};if _eca .GBAtX [5]!=2||_eca .GBAtY [5]!=-1{_eca .setOverrideFlag (5);
};if _eca .GBAtX [6]!=-3||_eca .GBAtY [6]!=0{_eca .setOverrideFlag (6);};if _eca .GBAtX [7]!=-4||_eca .GBAtY [7]!=0{_eca .setOverrideFlag (7);};if _eca .GBAtX [8]!=2||_eca .GBAtY [8]!=-2{_eca .setOverrideFlag (8);};if _eca .GBAtX [9]!=3||_eca .GBAtY [9]!=-1{_eca .setOverrideFlag (9);
};if _eca .GBAtX [10]!=-2||_eca .GBAtY [10]!=-2{_eca .setOverrideFlag (10);};if _eca .GBAtX [11]!=-3||_eca .GBAtY [11]!=-1{_eca .setOverrideFlag (11);};};case 1:if _eca .GBAtX [0]!=3||_eca .GBAtY [0]!=-1{_eca .setOverrideFlag (0);};case 2:if _eca .GBAtX [0]!=2||_eca .GBAtY [0]!=-1{_eca .setOverrideFlag (0);
};case 3:if _eca .GBAtX [0]!=2||_eca .GBAtY [0]!=-1{_eca .setOverrideFlag (0);};};return nil ;};func (_ggaf *SymbolDictionary )decodeHeightClassBitmap (_fcgc *_ba .Bitmap ,_aaf int64 ,_geaf int ,_bccg []int )error {for _ggag :=_aaf ;_ggag < int64 (_ggaf ._ceab );
_ggag ++{var _bbfbe int ;for _gecf :=_aaf ;_gecf <=_ggag -1;_gecf ++{_bbfbe +=_bccg [_gecf ];};_gfb :=_ca .Rect (_bbfbe ,0,_bbfbe +_bccg [_ggag ],_geaf );_ebaa ,_egbe :=_ba .Extract (_gfb ,_fcgc );if _egbe !=nil {return _egbe ;};_ggaf ._edgdd [_ggag ]=_ebaa ;
_ggaf ._ggae =append (_ggaf ._ggae ,_ebaa );};return nil ;};func (_bef *GenericRefinementRegion )decodeTypicalPredictedLine (_efe ,_ag ,_ed ,_gff ,_af ,_agc int )error {_ccd :=_efe -int (_bef .ReferenceDY );_ga :=_bef .ReferenceBitmap .GetByteIndex (0,_ccd );
_gffd :=_bef .RegionBitmap .GetByteIndex (0,_efe );var _dd error ;switch _bef .TemplateID {case 0:_dd =_bef .decodeTypicalPredictedLineTemplate0 (_efe ,_ag ,_ed ,_gff ,_af ,_agc ,_gffd ,_ccd ,_ga );case 1:_dd =_bef .decodeTypicalPredictedLineTemplate1 (_efe ,_ag ,_ed ,_gff ,_af ,_agc ,_gffd ,_ccd ,_ga );
};return _dd ;};func (_aebf *TextRegion )GetRegionInfo ()*RegionSegment {return _aebf .RegionInfo };func (_efec *SymbolDictionary )decodeDirectlyThroughGenericRegion (_bgcca ,_ebfe uint32 )error {if _efec ._bbbd ==nil {_efec ._bbbd =NewGenericRegion (_efec ._eced );
};_efec ._bbbd .setParametersWithAt (false ,byte (_efec .SdTemplate ),false ,false ,_efec .SdATX ,_efec .SdATY ,_bgcca ,_ebfe ,_efec ._fbcd ,_efec ._bbce );return _efec .addSymbol (_efec ._bbbd );};type OrganizationType uint8 ;func (_gbda *TextRegion )checkInput ()error {const _ceag ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_gbda .UseRefinement {if _gbda .SbrTemplate !=0{_bea .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gbda .SbrTemplate =0;};};if _gbda .SbHuffFS ==2||_gbda .SbHuffRDWidth ==2||_gbda .SbHuffRDHeight ==2||_gbda .SbHuffRDX ==2||_gbda .SbHuffRDY ==2{return _fac .Error (_ceag ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_gbda .UseRefinement {if _gbda .SbHuffRSize !=0{_bea .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gbda .SbHuffRSize =0;};if _gbda .SbHuffRDY !=0{_bea .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_gbda .SbHuffRDY =0;};if _gbda .SbHuffRDX !=0{_bea .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_gbda .SbHuffRDX =0;};if _gbda .SbHuffRDWidth !=0{_bea .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_gbda .SbHuffRDWidth =0;};if _gbda .SbHuffRDHeight !=0{_bea .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_gbda .SbHuffRDHeight =0;};};
return nil ;};func (_fcga *SymbolDictionary )readNumberOfExportedSymbols ()error {_ceef ,_aefb :=_fcga ._eced .ReadBits (32);if _aefb !=nil {return _aefb ;};_fcga .NumberOfExportedSymbols =uint32 (_ceef &_c .MaxUint32 );return nil ;};func (_fcgf *PageInformationSegment )checkInput ()error {if _fcgf .PageBMHeight ==_c .MaxInt32 {if !_fcgf .IsStripe {_bea .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_geb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_eab ,_dde ,_gc ,_ff ,_bgcb ,_ggg ,_dge ,_aa ,_fca int )error {var (_fb ,_aec ,_adg ,_aab ,_aed ,_ece int ;_gec byte ;_ead error ;);if _eab > 0{_gec ,_ead =_geb .RegionBitmap .GetByte (_dge -_gc );
if _ead !=nil {return _ead ;};_adg =int (_gec );};if _aa > 0&&_aa <=_geb .ReferenceBitmap .Height {_gec ,_ead =_geb .ReferenceBitmap .GetByte (_fca -_ff +_ggg );if _ead !=nil {return _ead ;};_aab =int (_gec )<<4;};if _aa >=0&&_aa < _geb .ReferenceBitmap .Height {_gec ,_ead =_geb .ReferenceBitmap .GetByte (_fca +_ggg );
if _ead !=nil {return _ead ;};_aed =int (_gec )<<1;};if _aa > -2&&_aa < _geb .ReferenceBitmap .Height -1{_gec ,_ead =_geb .ReferenceBitmap .GetByte (_fca +_ff +_ggg );if _ead !=nil {return _ead ;};_ece =int (_gec );};_fb =((_adg >>5)&0x6)|((_ece >>2)&0x30)|(_aed &0x180)|(_aab &0xc00);
var _bga int ;for _da :=0;_da < _bgcb ;_da =_bga {var _cbb int ;_bga =_da +8;var _afe int ;if _afe =_dde -_da ;_afe > 8{_afe =8;};_ccda :=_bga < _dde ;_db :=_bga < _geb .ReferenceBitmap .Width ;_gbe :=_ggg +1;if _eab > 0{_gec =0;if _ccda {_gec ,_ead =_geb .RegionBitmap .GetByte (_dge -_gc +1);
if _ead !=nil {return _ead ;};};_adg =(_adg <<8)|int (_gec );};if _aa > 0&&_aa <=_geb .ReferenceBitmap .Height {var _cca int ;if _db {_gec ,_ead =_geb .ReferenceBitmap .GetByte (_fca -_ff +_gbe );if _ead !=nil {return _ead ;};_cca =int (_gec )<<4;};_aab =(_aab <<8)|_cca ;
};if _aa >=0&&_aa < _geb .ReferenceBitmap .Height {var _fega int ;if _db {_gec ,_ead =_geb .ReferenceBitmap .GetByte (_fca +_gbe );if _ead !=nil {return _ead ;};_fega =int (_gec )<<1;};_aed =(_aed <<8)|_fega ;};if _aa > -2&&_aa < (_geb .ReferenceBitmap .Height -1){_gec =0;
if _db {_gec ,_ead =_geb .ReferenceBitmap .GetByte (_fca +_ff +_gbe );if _ead !=nil {return _ead ;};};_ece =(_ece <<8)|int (_gec );};for _edc :=0;_edc < _afe ;_edc ++{var _bdd int ;_bf :=false ;_aad :=(_fb >>4)&0x1ff;if _aad ==0x1ff{_bf =true ;_bdd =1;
}else if _aad ==0x00{_bf =true ;};if !_bf {if _geb ._gde {_aec =_geb .overrideAtTemplate0 (_fb ,_da +_edc ,_eab ,_cbb ,_edc );_geb ._gdc .SetIndex (int32 (_aec ));}else {_geb ._gdc .SetIndex (int32 (_fb ));};_bdd ,_ead =_geb ._dc .DecodeBit (_geb ._gdc );
if _ead !=nil {return _ead ;};};_bff :=uint (7-_edc );_cbb |=_bdd <<_bff ;_fb =((_fb &0xdb6)<<1)|_bdd |(_adg >>_bff +5)&0x002|((_ece >>_bff +2)&0x010)|((_aed >>_bff )&0x080)|((_aab >>_bff )&0x400);};_ead =_geb .RegionBitmap .SetByte (_dge ,byte (_cbb ));
if _ead !=nil {return _ead ;};_dge ++;_fca ++;};return nil ;};type SymbolDictionary struct{_eced _e .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_baae bool ;_eage bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;
SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_cgeg uint32 ;_fdec []*_ba .Bitmap ;
_ceab uint32 ;_edgdd []*_ba .Bitmap ;_fade _be .Tabler ;_eabf _be .Tabler ;_eddf _be .Tabler ;_cdcb _be .Tabler ;_gbbf []*_ba .Bitmap ;_ggae []*_ba .Bitmap ;_bbce *_fc .Decoder ;_cfbf *TextRegion ;_bbbd *GenericRegion ;_fdff *GenericRefinementRegion ;_fbcd *_fc .DecoderStats ;
_eeba *_fc .DecoderStats ;_gcde *_fc .DecoderStats ;_ebdc *_fc .DecoderStats ;_eeca *_fc .DecoderStats ;_gea *_fc .DecoderStats ;_ggbg *_fc .DecoderStats ;_bged *_fc .DecoderStats ;_adeb *_fc .DecoderStats ;_fabg int8 ;_febf *_ba .Bitmaps ;_eebe []int ;
_eded map[int ]int ;_bgdc bool ;};func (_ebg *GenericRegion )String ()string {_acd :=&_fa .Builder {};_acd .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_acd .WriteString (_ebg .RegionSegment .String ()+"\u000a");
_acd .WriteString (_d .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ebg .UseExtTemplates ));_acd .WriteString (_d .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ebg .IsTPGDon ));
_acd .WriteString (_d .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ebg .GBTemplate ));_acd .WriteString (_d .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ebg .IsMMREncoded ));
_acd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ebg .GBAtX ));_acd .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ebg .GBAtY ));
_acd .WriteString (_d .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ebg .GBAtOverride ));return _acd .String ();};func (_adabd *TextRegion )decodeRdw ()(int64 ,error ){const _bbdfd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _adabd .IsHuffmanEncoded {if _adabd .SbHuffRDWidth ==3{if _adabd ._ceaff ==nil {var (_bfbb int ;_cbbe error ;);if _adabd .SbHuffFS ==3{_bfbb ++;};if _adabd .SbHuffDS ==3{_bfbb ++;};if _adabd .SbHuffDT ==3{_bfbb ++;};_adabd ._ceaff ,_cbbe =_adabd .getUserTable (_bfbb );
if _cbbe !=nil {return 0,_fac .Wrap (_cbbe ,_bbdfd ,"");};};return _adabd ._ceaff .Decode (_adabd ._addad );};_cfgea ,_ebbf :=_be .GetStandardTable (14+int (_adabd .SbHuffRDWidth ));if _ebbf !=nil {return 0,_fac .Wrap (_ebbf ,_bbdfd ,"");};return _cfgea .Decode (_adabd ._addad );
};_abffe ,_aaea :=_adabd ._ffdc .DecodeInt (_adabd ._bbcc );if _aaea !=nil {return 0,_fac .Wrap (_aaea ,_bbdfd ,"");};return int64 (_abffe ),nil ;};func (_aageb *TextRegion )getUserTable (_abgc int )(_be .Tabler ,error ){const _dgdee ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _febd int ;for _ ,_agfa :=range _aageb .Header .RTSegments {if _agfa .Type ==53{if _febd ==_abgc {_bgedf ,_dcfdc :=_agfa .GetSegmentData ();if _dcfdc !=nil {return nil ,_dcfdc ;};_aegfd ,_ffee :=_bgedf .(*TableSegment );if !_ffee {_bea .Log .Debug (_d .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_agfa .SegmentNumber ));
return nil ,_fac .Error (_dgdee ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _be .NewEncodedTable (_aegfd );};_febd ++;};};return nil ,nil ;};func (_egae *PageInformationSegment )encodeStripingInformation (_dcae _e .BinaryWriter )(_ddff int ,_bfg error ){const _bfgd ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_egae .IsStripe {if _ddff ,_bfg =_dcae .Write ([]byte {0x00,0x00});_bfg !=nil {return 0,_fac .Wrap (_bfg ,_bfgd ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _ddff ,nil ;};_eaccf :=make ([]byte ,2);_b .BigEndian .PutUint16 (_eaccf ,_egae .MaxStripeSize |1<<15);
if _ddff ,_bfg =_dcae .Write (_eaccf );_bfg !=nil {return 0,_fac .Wrapf (_bfg ,_bfgd ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_egae .MaxStripeSize );};return _ddff ,nil ;};func (_edf *GenericRegion )decodeTemplate0b (_ecc ,_ddg ,_acda int ,_daeb ,_ggfe int )(_dbbe error ){const _ggad ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_eefd ,_gcfg int ;_abg ,_cdde int ;_eefb byte ;_bfbf int ;);if _ecc >=1{_eefb ,_dbbe =_edf .Bitmap .GetByte (_ggfe );if _dbbe !=nil {return _fac .Wrap (_dbbe ,_ggad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_abg =int (_eefb );};if _ecc >=2{_eefb ,_dbbe =_edf .Bitmap .GetByte (_ggfe -_edf .Bitmap .RowStride );
if _dbbe !=nil {return _fac .Wrap (_dbbe ,_ggad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cdde =int (_eefb )<<6;};_eefd =(_abg &0xf0)|(_cdde &0x3800);for _cgbf :=0;_cgbf < _acda ;_cgbf =_bfbf {var (_bgg byte ;_fed int ;);_bfbf =_cgbf +8;if _gbdf :=_ddg -_cgbf ;
_gbdf > 8{_fed =8;}else {_fed =_gbdf ;};if _ecc > 0{_abg <<=8;if _bfbf < _ddg {_eefb ,_dbbe =_edf .Bitmap .GetByte (_ggfe +1);if _dbbe !=nil {return _fac .Wrap (_dbbe ,_ggad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_abg |=int (_eefb );};};
if _ecc > 1{_cdde <<=8;if _bfbf < _ddg {_eefb ,_dbbe =_edf .Bitmap .GetByte (_ggfe -_edf .Bitmap .RowStride +1);if _dbbe !=nil {return _fac .Wrap (_dbbe ,_ggad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cdde |=int (_eefb )<<6;};};for _fef :=0;
_fef < _fed ;_fef ++{_gade :=uint (7-_fef );if _edf ._fcb {_gcfg =_edf .overrideAtTemplate0b (_eefd ,_cgbf +_fef ,_ecc ,int (_bgg ),_fef ,int (_gade ));_edf ._afd .SetIndex (int32 (_gcfg ));}else {_edf ._afd .SetIndex (int32 (_eefd ));};var _gccd int ;
_gccd ,_dbbe =_edf ._gfcd .DecodeBit (_edf ._afd );if _dbbe !=nil {return _fac .Wrap (_dbbe ,_ggad ,"");};_bgg |=byte (_gccd <<_gade );_eefd =((_eefd &0x7bf7)<<1)|_gccd |((_abg >>_gade )&0x10)|((_cdde >>_gade )&0x800);};if _bcfa :=_edf .Bitmap .SetByte (_daeb ,_bgg );
_bcfa !=nil {return _fac .Wrap (_bcfa ,_ggad ,"");};_daeb ++;_ggfe ++;};return nil ;};func (_ebed *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_caed :=range _ebed .Header .RTSegments {if _caed .Type ==0{_cdcg ,_fgfc :=_caed .GetSegmentData ();
if _fgfc !=nil {return _fgfc ;};_abff ,_cgdf :=_cdcg .(*SymbolDictionary );if !_cgdf {return _d .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cdcg );
};_egdf ,_fgfc :=_abff .GetDictionary ();if _fgfc !=nil {return _d .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_caed .SegmentNumber ,_fgfc .Error ());
};_ebed ._fdec =append (_ebed ._fdec ,_egdf ...);_ebed ._cgeg +=_abff .NumberOfExportedSymbols ;};};return nil ;};func (_dac *Header )GetSegmentData ()(Segmenter ,error ){var _fcc Segmenter ;if _dac .SegmentData !=nil {_fcc =_dac .SegmentData ;};if _fcc ==nil {_dgfa ,_egb :=_gdga [_dac .Type ];
if !_egb {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_dac .Type ,_dac .Type );};_fcc =_dgfa ();
_bea .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_dac .SegmentNumber ,_dac .SegmentDataStartOffset );
_gadc ,_acdg :=_dac .subInputReader ();if _acdg !=nil {return nil ,_acdg ;};if _gaa :=_fcc .Init (_dac ,_gadc );_gaa !=nil {_bea .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_gaa ,_fcc );
return nil ,_gaa ;};_dac .SegmentData =_fcc ;};return _fcc ,nil ;};func (_eeeb *GenericRegion )overrideAtTemplate3 (_cec ,_fgg ,_aecg ,_ada ,_afadg int )int {_cec &=0x3EF;if _eeeb .GBAtY [0]==0&&_eeeb .GBAtX [0]>=-int8 (_afadg ){_cec |=(_ada >>uint (7-(int8 (_afadg )+_eeeb .GBAtX [0]))&0x1)<<4;
}else {_cec |=int (_eeeb .getPixel (_fgg +int (_eeeb .GBAtX [0]),_aecg +int (_eeeb .GBAtY [0])))<<4;};return _cec ;};func (_afdfc *TextRegion )setCodingStatistics ()error {if _afdfc ._dcbac ==nil {_afdfc ._dcbac =_fc .NewStats (512,1);};if _afdfc ._badf ==nil {_afdfc ._badf =_fc .NewStats (512,1);
};if _afdfc ._dbgbc ==nil {_afdfc ._dbgbc =_fc .NewStats (512,1);};if _afdfc ._dfgf ==nil {_afdfc ._dfgf =_fc .NewStats (512,1);};if _afdfc ._eaad ==nil {_afdfc ._eaad =_fc .NewStats (512,1);};if _afdfc ._bbcc ==nil {_afdfc ._bbcc =_fc .NewStats (512,1);
};if _afdfc ._gadfb ==nil {_afdfc ._gadfb =_fc .NewStats (512,1);};if _afdfc ._gdfd ==nil {_afdfc ._gdfd =_fc .NewStats (1<<uint (_afdfc ._babg ),1);};if _afdfc ._efefb ==nil {_afdfc ._efefb =_fc .NewStats (512,1);};if _afdfc ._ddcf ==nil {_afdfc ._ddcf =_fc .NewStats (512,1);
};if _afdfc ._ffdc ==nil {var _adfce error ;_afdfc ._ffdc ,_adfce =_fc .New (_afdfc ._addad );if _adfce !=nil {return _adfce ;};};return nil ;};func (_ddcfg *TextRegion )decodeID ()(int64 ,error ){if _ddcfg .IsHuffmanEncoded {if _ddcfg ._gdgf ==nil {_eagea ,_eegfd :=_ddcfg ._addad .ReadBits (byte (_ddcfg ._babg ));
return int64 (_eagea ),_eegfd ;};return _ddcfg ._gdgf .Decode (_ddcfg ._addad );};return _ddcfg ._ffdc .DecodeIAID (uint64 (_ddcfg ._babg ),_ddcfg ._gdfd );};func (_cdfd *SymbolDictionary )setSymbolsArray ()error {if _cdfd ._fdec ==nil {if _edac :=_cdfd .retrieveImportSymbols ();
_edac !=nil {return _edac ;};};if _cdfd ._ggae ==nil {_cdfd ._ggae =append (_cdfd ._ggae ,_cdfd ._fdec ...);};return nil ;};func (_aafc *SymbolDictionary )parseHeader ()(_acdag error ){_bea .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _acdag !=nil {_bea .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_acdag );
}else {_bea .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _acdag =_aafc .readRegionFlags ();_acdag !=nil {return _acdag ;};if _acdag =_aafc .setAtPixels ();_acdag !=nil {return _acdag ;};if _acdag =_aafc .setRefinementAtPixels ();_acdag !=nil {return _acdag ;};if _acdag =_aafc .readNumberOfExportedSymbols ();
_acdag !=nil {return _acdag ;};if _acdag =_aafc .readNumberOfNewSymbols ();_acdag !=nil {return _acdag ;};if _acdag =_aafc .setInSyms ();_acdag !=nil {return _acdag ;};if _aafc ._eage {_bbeb :=_aafc .Header .RTSegments ;for _gbgg :=len (_bbeb )-1;_gbgg >=0;
_gbgg --{if _bbeb [_gbgg ].Type ==0{_acga ,_agec :=_bbeb [_gbgg ].SegmentData .(*SymbolDictionary );if !_agec {_acdag =_d .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_bbeb [_gbgg ]);
return _acdag ;};if _acga ._eage {_aafc .setRetainedCodingContexts (_acga );};break ;};};};if _acdag =_aafc .checkInput ();_acdag !=nil {return _acdag ;};return nil ;};func (_bdbb *GenericRegion )setOverrideFlag (_bdf int ){_bdbb .GBAtOverride [_bdf ]=true ;
_bdbb ._fcb =true ;};var _ _be .BasicTabler =&TableSegment {};type GenericRegion struct{_cge _e .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;
GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_fcb bool ;Bitmap *_ba .Bitmap ;_gfcd *_fc .Decoder ;_afd *_fc .DecoderStats ;_cdg *_bc .Decoder ;};func (_ggbf *TextRegion )GetRegionBitmap ()(*_ba .Bitmap ,error ){if _ggbf .RegionBitmap !=nil {return _ggbf .RegionBitmap ,nil ;
};if !_ggbf .IsHuffmanEncoded {if _dgfcce :=_ggbf .setCodingStatistics ();_dgfcce !=nil {return nil ,_dgfcce ;};};if _agaa :=_ggbf .createRegionBitmap ();_agaa !=nil {return nil ,_agaa ;};if _cbbc :=_ggbf .decodeSymbolInstances ();_cbbc !=nil {return nil ,_cbbc ;
};return _ggbf .RegionBitmap ,nil ;};func (_gdag *HalftoneRegion )computeSegmentDataStructure ()error {_gdag .DataOffset =_gdag ._gdcd .StreamPosition ();_gdag .DataHeaderLength =_gdag .DataOffset -_gdag .DataHeaderOffset ;_gdag .DataLength =int64 (_gdag ._gdcd .Length ())-_gdag .DataHeaderLength ;
return nil ;};func (_accd *SymbolDictionary )Init (h *Header ,r _e .StreamReader )error {_accd .Header =h ;_accd ._eced =r ;return _accd .parseHeader ();};func (_dgad *SymbolDictionary )addSymbol (_edfe Regioner )error {_dccb ,_fffb :=_edfe .GetRegionBitmap ();
if _fffb !=nil {return _fffb ;};_dgad ._edgdd [_dgad ._ceab ]=_dccb ;_dgad ._ggae =append (_dgad ._ggae ,_dccb );_bea .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_dccb );
return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_ef *EndOfStripe )LineNumber ()int {return _ef ._ea };func (_dabbd *SymbolDictionary )setCodingStatistics ()error {if _dabbd ._bged ==nil {_dabbd ._bged =_fc .NewStats (512,1);
};if _dabbd ._eeba ==nil {_dabbd ._eeba =_fc .NewStats (512,1);};if _dabbd ._gcde ==nil {_dabbd ._gcde =_fc .NewStats (512,1);};if _dabbd ._ebdc ==nil {_dabbd ._ebdc =_fc .NewStats (512,1);};if _dabbd ._eeca ==nil {_dabbd ._eeca =_fc .NewStats (512,1);
};if _dabbd .UseRefinementAggregation &&_dabbd ._adeb ==nil {_dabbd ._adeb =_fc .NewStats (1<<uint (_dabbd ._fabg ),1);_dabbd ._gea =_fc .NewStats (512,1);_dabbd ._ggbg =_fc .NewStats (512,1);};if _dabbd ._fbcd ==nil {_dabbd ._fbcd =_fc .NewStats (65536,1);
};if _dabbd ._bbce ==nil {var _cceaa error ;_dabbd ._bbce ,_cceaa =_fc .New (_dabbd ._eced );if _cceaa !=nil {return _cceaa ;};};return nil ;};func (_bdde *TextRegion )Encode (w _e .BinaryWriter )(_cfcg int ,_deaf error ){const _bfcd ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _cfcg ,_deaf =_bdde .RegionInfo .Encode (w );_deaf !=nil {return _cfcg ,_fac .Wrap (_deaf ,_bfcd ,"");};var _bcged int ;if _bcged ,_deaf =_bdde .encodeFlags (w );_deaf !=nil {return _cfcg ,_fac .Wrap (_deaf ,_bfcd ,"");};_cfcg +=_bcged ;if _bcged ,_deaf =_bdde .encodeSymbols (w );
_deaf !=nil {return _cfcg ,_fac .Wrap (_deaf ,_bfcd ,"");};_cfcg +=_bcged ;return _cfcg ,nil ;};func (_bggf *GenericRegion )overrideAtTemplate2 (_edeb ,_edgb ,_gdg ,_beeb ,_ddb int )int {_edeb &=0x3FB;if _bggf .GBAtY [0]==0&&_bggf .GBAtX [0]>=-int8 (_ddb ){_edeb |=(_beeb >>uint (7-(int8 (_ddb )+_bggf .GBAtX [0]))&0x1)<<2;
}else {_edeb |=int (_bggf .getPixel (_edgb +int (_bggf .GBAtX [0]),_gdg +int (_bggf .GBAtY [0])))<<2;};return _edeb ;};type RegionSegment struct{_fggb _e .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ba .CombinationOperator ;
};func (_bace *Header )writeSegmentPageAssociation (_gffb _e .BinaryWriter )(_ddec int ,_edab error ){const _fced ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _bace .pageSize ()!=4{if _edab =_gffb .WriteByte (byte (_bace .PageAssociation ));_edab !=nil {return 0,_fac .Wrap (_edab ,_fced ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_edaf :=make ([]byte ,4);
_b .BigEndian .PutUint32 (_edaf ,uint32 (_bace .PageAssociation ));if _ddec ,_edab =_gffb .Write (_edaf );_edab !=nil {return 0,_fac .Wrap (_edab ,_fced ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _ddec ,nil ;
};func (_ecgd *PageInformationSegment )String ()string {_egag :=&_fa .Builder {};_egag .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_egag .WriteString (_d .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_ecgd .PageBMHeight ));_egag .WriteString (_d .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_ecgd .PageBMWidth ));
_egag .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_ecgd .ResolutionX ));_egag .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_ecgd .ResolutionY ));
_egag .WriteString (_d .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_ecgd ._bfbg ));_egag .WriteString (_d .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_ecgd ._cfg ));
_egag .WriteString (_d .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_ecgd .IsLossless ));_egag .WriteString (_d .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ecgd ._cbgc ));
_egag .WriteString (_d .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_ecgd ._dgdg ));_egag .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_ecgd .IsStripe ));
_egag .WriteString (_d .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_ecgd .MaxStripeSize ));return _egag .String ();};func (_ccf *PageInformationSegment )readIsLossless ()error {_ffab ,_cbda :=_ccf ._acgg .ReadBit ();
if _cbda !=nil {return _cbda ;};if _ffab ==1{_ccf .IsLossless =true ;};return nil ;};func (_eae *Header )readDataStartOffset (_gacd _e .StreamReader ,_gdce OrganizationType ){if _gdce ==OSequential {_eae .SegmentDataStartOffset =uint64 (_gacd .StreamPosition ());
};};func (_fdbb *HalftoneRegion )computeGrayScalePlanes (_febc []*_ba .Bitmap ,_ccbg int )([][]int ,error ){_caadc :=make ([][]int ,_fdbb .HGridHeight );for _fda :=0;_fda < len (_caadc );_fda ++{_caadc [_fda ]=make ([]int ,_fdbb .HGridWidth );};for _eeb :=0;
_eeb < int (_fdbb .HGridHeight );_eeb ++{for _dfeg :=0;_dfeg < int (_fdbb .HGridWidth );_dfeg +=8{var _gccf int ;if _gbdd :=int (_fdbb .HGridWidth )-_dfeg ;_gbdd > 8{_gccf =8;}else {_gccf =_gbdd ;};_bagf :=_febc [0].GetByteIndex (_dfeg ,_eeb );for _dabf :=0;
_dabf < _gccf ;_dabf ++{_accc :=_dabf +_dfeg ;_caadc [_eeb ][_accc ]=0;for _dgfe :=0;_dgfe < _ccbg ;_dgfe ++{_gcfb ,_deca :=_febc [_dgfe ].GetByte (_bagf );if _deca !=nil {return nil ,_deca ;};_eccc :=_gcfb >>uint (7-_accc &7);_beca :=_eccc &1;_acbe :=1<<uint (_dgfe );
_bcg :=int (_beca )*_acbe ;_caadc [_eeb ][_accc ]+=_bcg ;};};};};return _caadc ,nil ;};func NewHeader (d Documenter ,r _e .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_dcba :=&Header {Reader :r };if _bdbbb :=_dcba .parse (d ,r ,offset ,organizationType );
_bdbbb !=nil {return nil ,_fac .Wrap (_bdbbb ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _dcba ,nil ;};func (_fafc *SymbolDictionary )getSymbol (_efgb int )(*_ba .Bitmap ,error ){const _abbc ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_ecae ,_eabg :=_fafc ._febf .GetBitmap (_fafc ._eebe [_efgb ]);if _eabg !=nil {return nil ,_fac .Wrap (_eabg ,_abbc ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _ecae ,nil ;};func (_eegf *template0 )setIndex (_ccbf *_fc .DecoderStats ){_ccbf .SetIndex (0x100)};
var _ templater =&template1 {};func (_abdf *TextRegion )decodeIds ()(int64 ,error ){const _bbcfe ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _abdf .IsHuffmanEncoded {if _abdf .SbHuffDS ==3{if _abdf ._affea ==nil {_cdcc :=0;if _abdf .SbHuffFS ==3{_cdcc ++;
};var _ceda error ;_abdf ._affea ,_ceda =_abdf .getUserTable (_cdcc );if _ceda !=nil {return 0,_fac .Wrap (_ceda ,_bbcfe ,"");};};return _abdf ._affea .Decode (_abdf ._addad );};_ggbff ,_gfdg :=_be .GetStandardTable (8+int (_abdf .SbHuffDS ));if _gfdg !=nil {return 0,_fac .Wrap (_gfdg ,_bbcfe ,"");
};return _ggbff .Decode (_abdf ._addad );};_aced ,_acgaf :=_abdf ._ffdc .DecodeInt (_abdf ._dbgbc );if _acgaf !=nil {return 0,_fac .Wrap (_acgaf ,_bbcfe ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_aced ),nil ;};func (_egeaa *TextRegion )decodeIb (_bgdcf ,_abgd int64 )(*_ba .Bitmap ,error ){const _addeg ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_bgge error ;_gdb *_ba .Bitmap ;);if _bgdcf ==0{if int (_abgd )> len (_egeaa .Symbols )-1{return nil ,_fac .Error (_addeg ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _egeaa .Symbols [int (_abgd )],nil ;};var _gggc ,_cgfc ,_bfdc ,_bfgb int64 ;_gggc ,_bgge =_egeaa .decodeRdw ();if _bgge !=nil {return nil ,_fac .Wrap (_bgge ,_addeg ,"");};_cgfc ,_bgge =_egeaa .decodeRdh ();if _bgge !=nil {return nil ,_fac .Wrap (_bgge ,_addeg ,"");
};_bfdc ,_bgge =_egeaa .decodeRdx ();if _bgge !=nil {return nil ,_fac .Wrap (_bgge ,_addeg ,"");};_bfgb ,_bgge =_egeaa .decodeRdy ();if _bgge !=nil {return nil ,_fac .Wrap (_bgge ,_addeg ,"");};if _egeaa .IsHuffmanEncoded {if _ ,_bgge =_egeaa .decodeSymInRefSize ();
_bgge !=nil {return nil ,_fac .Wrap (_bgge ,_addeg ,"");};_egeaa ._addad .Align ();};_ceff :=_egeaa .Symbols [_abgd ];_aggf :=uint32 (_ceff .Width );_cbdd :=uint32 (_ceff .Height );_cag :=int32 (uint32 (_gggc )>>1)+int32 (_bfdc );_cbge :=int32 (uint32 (_cgfc )>>1)+int32 (_bfgb );
if _egeaa ._ebbg ==nil {_egeaa ._ebbg =_eeag (_egeaa ._addad ,nil );};_egeaa ._ebbg .setParameters (_egeaa ._ebfef ,_egeaa ._ffdc ,_egeaa .SbrTemplate ,_aggf +uint32 (_gggc ),_cbdd +uint32 (_cgfc ),_ceff ,_cag ,_cbge ,false ,_egeaa .SbrATX ,_egeaa .SbrATY );
_gdb ,_bgge =_egeaa ._ebbg .GetRegionBitmap ();if _bgge !=nil {return nil ,_fac .Wrap (_bgge ,_addeg ,"\u0067\u0072\u0066");};if _egeaa .IsHuffmanEncoded {_egeaa ._addad .Align ();};return _gdb ,nil ;};func (_gcaa *GenericRegion )setParametersMMR (_efdc bool ,_adc ,_cgcc int64 ,_gac ,_cff uint32 ,_aeg byte ,_adcg ,_eefbc bool ,_edff ,_dfcd []int8 ){_gcaa .DataOffset =_adc ;
_gcaa .DataLength =_cgcc ;_gcaa .RegionSegment =&RegionSegment {};_gcaa .RegionSegment .BitmapHeight =_gac ;_gcaa .RegionSegment .BitmapWidth =_cff ;_gcaa .GBTemplate =_aeg ;_gcaa .IsMMREncoded =_efdc ;_gcaa .IsTPGDon =_adcg ;_gcaa .GBAtX =_edff ;_gcaa .GBAtY =_dfcd ;
};func (_adde *SymbolDictionary )readRegionFlags ()error {var (_gffc uint64 ;_cddfe int ;);_ ,_fdadf :=_adde ._eced .ReadBits (3);if _fdadf !=nil {return _fdadf ;};_cddfe ,_fdadf =_adde ._eced .ReadBit ();if _fdadf !=nil {return _fdadf ;};_adde .SdrTemplate =int8 (_cddfe );
_gffc ,_fdadf =_adde ._eced .ReadBits (2);if _fdadf !=nil {return _fdadf ;};_adde .SdTemplate =int8 (_gffc &0xf);_cddfe ,_fdadf =_adde ._eced .ReadBit ();if _fdadf !=nil {return _fdadf ;};if _cddfe ==1{_adde ._baae =true ;};_cddfe ,_fdadf =_adde ._eced .ReadBit ();
if _fdadf !=nil {return _fdadf ;};if _cddfe ==1{_adde ._eage =true ;};_cddfe ,_fdadf =_adde ._eced .ReadBit ();if _fdadf !=nil {return _fdadf ;};if _cddfe ==1{_adde .SdHuffAggInstanceSelection =true ;};_cddfe ,_fdadf =_adde ._eced .ReadBit ();if _fdadf !=nil {return _fdadf ;
};_adde .SdHuffBMSizeSelection =int8 (_cddfe );_gffc ,_fdadf =_adde ._eced .ReadBits (2);if _fdadf !=nil {return _fdadf ;};_adde .SdHuffDecodeWidthSelection =int8 (_gffc &0xf);_gffc ,_fdadf =_adde ._eced .ReadBits (2);if _fdadf !=nil {return _fdadf ;};
_adde .SdHuffDecodeHeightSelection =int8 (_gffc &0xf);_cddfe ,_fdadf =_adde ._eced .ReadBit ();if _fdadf !=nil {return _fdadf ;};if _cddfe ==1{_adde .UseRefinementAggregation =true ;};_cddfe ,_fdadf =_adde ._eced .ReadBit ();if _fdadf !=nil {return _fdadf ;
};if _cddfe ==1{_adde .IsHuffmanEncoded =true ;};return nil ;};func (_ebcb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gggf ,_edbeb :=_ebcb ._acgg .ReadBit ();if _edbeb !=nil {return _edbeb ;};if _gggf ==1{_ebcb ._cbgc =true ;};return nil ;
};func (_affe *HalftoneRegion )combineGrayscalePlanes (_fde []*_ba .Bitmap ,_ecca int )error {_ecd :=0;for _gebf :=0;_gebf < _fde [_ecca ].Height ;_gebf ++{for _ccgg :=0;_ccgg < _fde [_ecca ].Width ;_ccgg +=8{_fff ,_caee :=_fde [_ecca +1].GetByte (_ecd );
if _caee !=nil {return _caee ;};_dbeb ,_caee :=_fde [_ecca ].GetByte (_ecd );if _caee !=nil {return _caee ;};_caee =_fde [_ecca ].SetByte (_ecd ,_ba .CombineBytes (_dbeb ,_fff ,_ba .CmbOpXor ));if _caee !=nil {return _caee ;};_ecd ++;};};return nil ;};
func (_ggga *HalftoneRegion )computeY (_cabd ,_bebd int )int {return _ggga .shiftAndFill (int (_ggga .HGridY )+_cabd *int (_ggga .HRegionX )-_bebd *int (_ggga .HRegionY ));};func (_fecb *Header )writeSegmentNumber (_acdd _e .BinaryWriter )(_abac int ,_dgbe error ){_fbbe :=make ([]byte ,4);
_b .BigEndian .PutUint32 (_fbbe ,_fecb .SegmentNumber );if _abac ,_dgbe =_acdd .Write (_fbbe );_dgbe !=nil {return 0,_fac .Wrap (_dgbe ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _abac ,nil ;};func (_gccfb *TextRegion )computeSymbolCodeLength ()error {if _gccfb .IsHuffmanEncoded {return _gccfb .symbolIDCodeLengths ();};_gccfb ._babg =int8 (_c .Ceil (_c .Log (float64 (_gccfb .NumberOfSymbols ))/_c .Log (2)));return nil ;
};func (_beee *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _beee .RegionSegment };func (_add *PageInformationSegment )readMaxStripeSize ()error {_dcd ,_egef :=_add ._acgg .ReadBits (15);if _egef !=nil {return _egef ;};_add .MaxStripeSize =uint16 (_dcd &_c .MaxUint16 );
return nil ;};func (_egegb *TextRegion )decodeDT ()(_bbab int64 ,_gcfbg error ){if _egegb .IsHuffmanEncoded {if _egegb .SbHuffDT ==3{_bbab ,_gcfbg =_egegb ._gedf .Decode (_egegb ._addad );if _gcfbg !=nil {return 0,_gcfbg ;};}else {var _eecee _be .Tabler ;
_eecee ,_gcfbg =_be .GetStandardTable (11+int (_egegb .SbHuffDT ));if _gcfbg !=nil {return 0,_gcfbg ;};_bbab ,_gcfbg =_eecee .Decode (_egegb ._addad );if _gcfbg !=nil {return 0,_gcfbg ;};};}else {var _bdbe int32 ;_bdbe ,_gcfbg =_egegb ._ffdc .DecodeInt (_egegb ._dcbac );
if _gcfbg !=nil {return ;};_bbab =int64 (_bdbe );};_bbab *=int64 (_egegb .SbStrips );return _bbab ,nil ;};func (_gbef *SymbolDictionary )setInSyms ()error {if _gbef .Header .RTSegments !=nil {return _gbef .retrieveImportSymbols ();};_gbef ._fdec =make ([]*_ba .Bitmap ,0);
return nil ;};func (_aeeb *TextRegion )decodeRI ()(int64 ,error ){if !_aeeb .UseRefinement {return 0,nil ;};if _aeeb .IsHuffmanEncoded {_egea ,_adfb :=_aeeb ._addad .ReadBit ();return int64 (_egea ),_adfb ;};_feecd ,_dgde :=_aeeb ._ffdc .DecodeInt (_aeeb ._eaad );
return int64 (_feecd ),_dgde ;};func (_ffbf *TextRegion )getSymbols ()error {if _ffbf .Header .RTSegments !=nil {return _ffbf .initSymbols ();};return nil ;};func (_aac *Header )readHeaderFlags ()error {const _daba ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_eagaa ,_age :=_aac .Reader .ReadBit ();if _age !=nil {return _fac .Wrap (_age ,_daba ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _eagaa !=0{_aac .RetainFlag =true ;};_eagaa ,_age =_aac .Reader .ReadBit ();if _age !=nil {return _fac .Wrap (_age ,_daba ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _eagaa !=0{_aac .PageAssociationFieldSize =true ;};_cffa ,_age :=_aac .Reader .ReadBits (6);if _age !=nil {return _fac .Wrap (_age ,_daba ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_aac .Type =Type (int (_cffa ));return nil ;
};func (_gfff *SymbolDictionary )encodeRefinementATFlags (_fcca _e .BinaryWriter )(_gcbe int ,_bgga error ){const _egca ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_gfff .UseRefinementAggregation ||_gfff .SdrTemplate !=0{return 0,nil ;};for _dfgd :=0;_dfgd < 2;_dfgd ++{if _bgga =_fcca .WriteByte (byte (_gfff .SdrATX [_dfgd ]));_bgga !=nil {return _gcbe ,_fac .Wrapf (_bgga ,_egca ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_dfgd );
};_gcbe ++;if _bgga =_fcca .WriteByte (byte (_gfff .SdrATY [_dfgd ]));_bgga !=nil {return _gcbe ,_fac .Wrapf (_bgga ,_egca ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_dfgd );};_gcbe ++;};return _gcbe ,nil ;};func (_bggb *PatternDictionary )computeSegmentDataStructure ()error {_bggb .DataOffset =_bggb ._efef .StreamPosition ();
_bggb .DataHeaderLength =_bggb .DataOffset -_bggb .DataHeaderOffset ;_bggb .DataLength =int64 (_bggb ._efef .Length ())-_bggb .DataHeaderLength ;return nil ;};func (_afaf *TextRegion )encodeFlags (_aedc _e .BinaryWriter )(_gdfba int ,_dbae error ){const _aaec ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dbae =_aedc .WriteBit (int (_afaf .SbrTemplate ));_dbae !=nil {return _gdfba ,_fac .Wrap (_dbae ,_aaec ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_dbae =_aedc .WriteBits (uint64 (_afaf .SbDsOffset ),5);_dbae !=nil {return _gdfba ,_fac .Wrap (_dbae ,_aaec ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _dbae =_aedc .WriteBit (int (_afaf .DefaultPixel ));_dbae !=nil {return _gdfba ,_fac .Wrap (_dbae ,_aaec ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_dbae =_aedc .WriteBits (uint64 (_afaf .CombinationOperator ),2);
_dbae !=nil {return _gdfba ,_fac .Wrap (_dbae ,_aaec ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dbae =_aedc .WriteBit (int (_afaf .IsTransposed ));_dbae !=nil {return _gdfba ,_fac .Wrap (_dbae ,_aaec ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_dbae =_aedc .WriteBits (uint64 (_afaf .ReferenceCorner ),2);_dbae !=nil {return _gdfba ,_fac .Wrap (_dbae ,_aaec ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_dbae =_aedc .WriteBits (uint64 (_afaf .LogSBStrips ),2);
_dbae !=nil {return _gdfba ,_fac .Wrap (_dbae ,_aaec ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _adag int ;if _afaf .UseRefinement {_adag =1;};if _dbae =_aedc .WriteBit (_adag );_dbae !=nil {return _gdfba ,_fac .Wrap (_dbae ,_aaec ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_adag =0;if _afaf .IsHuffmanEncoded {_adag =1;};if _dbae =_aedc .WriteBit (_adag );_dbae !=nil {return _gdfba ,_fac .Wrap (_dbae ,_aaec ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_gdfba =2;return _gdfba ,nil ;};type EncodeInitializer interface{InitEncode ();
};type TableSegment struct{_cead _e .StreamReader ;_gbbgc int32 ;_dfgg int32 ;_edbebc int32 ;_efcb int32 ;_ccdde int32 ;};func (_cabg *TableSegment )HtPS ()int32 {return _cabg ._dfgg };func (_fbf *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_ade ,_fea ,_egg ,_dffb ,_bdbf ,_fcfg ,_gcb ,_gfc ,_bfa int )(_dfc error ){var (_ccg ,_eaf int ;
_dgf ,_daf int ;_fag ,_adee int ;_fdd byte ;);if _ade > 0{_fdd ,_dfc =_fbf .RegionBitmap .GetByte (_gcb -_egg );if _dfc !=nil {return ;};_dgf =int (_fdd );};if _gfc > 0&&_gfc <=_fbf .ReferenceBitmap .Height {_fdd ,_dfc =_fbf .ReferenceBitmap .GetByte (_bfa -_dffb +_fcfg );
if _dfc !=nil {return ;};_daf =int (_fdd )<<2;};if _gfc >=0&&_gfc < _fbf .ReferenceBitmap .Height {_fdd ,_dfc =_fbf .ReferenceBitmap .GetByte (_bfa +_fcfg );if _dfc !=nil {return ;};_fag =int (_fdd );};if _gfc > -2&&_gfc < _fbf .ReferenceBitmap .Height -1{_fdd ,_dfc =_fbf .ReferenceBitmap .GetByte (_bfa +_dffb +_fcfg );
if _dfc !=nil {return ;};_adee =int (_fdd );};_ccg =((_dgf >>5)&0x6)|((_adee >>2)&0x30)|(_fag &0xc0)|(_daf &0x200);_eaf =((_adee >>2)&0x70)|(_fag &0xc0)|(_daf &0x700);var _ccb int ;for _dcc :=0;_dcc < _bdbf ;_dcc =_ccb {var (_agd int ;_afa int ;);_ccb =_dcc +8;
if _agd =_fea -_dcc ;_agd > 8{_agd =8;};_cce :=_ccb < _fea ;_gfcf :=_ccb < _fbf .ReferenceBitmap .Width ;_gae :=_fcfg +1;if _ade > 0{_fdd =0;if _cce {_fdd ,_dfc =_fbf .RegionBitmap .GetByte (_gcb -_egg +1);if _dfc !=nil {return ;};};_dgf =(_dgf <<8)|int (_fdd );
};if _gfc > 0&&_gfc <=_fbf .ReferenceBitmap .Height {var _bbf int ;if _gfcf {_fdd ,_dfc =_fbf .ReferenceBitmap .GetByte (_bfa -_dffb +_gae );if _dfc !=nil {return ;};_bbf =int (_fdd )<<2;};_daf =(_daf <<8)|_bbf ;};if _gfc >=0&&_gfc < _fbf .ReferenceBitmap .Height {_fdd =0;
if _gfcf {_fdd ,_dfc =_fbf .ReferenceBitmap .GetByte (_bfa +_gae );if _dfc !=nil {return ;};};_fag =(_fag <<8)|int (_fdd );};if _gfc > -2&&_gfc < (_fbf .ReferenceBitmap .Height -1){_fdd =0;if _gfcf {_fdd ,_dfc =_fbf .ReferenceBitmap .GetByte (_bfa +_dffb +_gae );
if _dfc !=nil {return ;};};_adee =(_adee <<8)|int (_fdd );};for _eaba :=0;_eaba < _agd ;_eaba ++{var _aea int ;_ced :=(_eaf >>4)&0x1ff;switch _ced {case 0x1ff:_aea =1;case 0x00:_aea =0;default:_fbf ._gdc .SetIndex (int32 (_ccg ));_aea ,_dfc =_fbf ._dc .DecodeBit (_fbf ._gdc );
if _dfc !=nil {return ;};};_faf :=uint (7-_eaba );_afa |=_aea <<_faf ;_ccg =((_ccg &0x0d6)<<1)|_aea |(_dgf >>_faf +5)&0x002|((_adee >>_faf +2)&0x010)|((_fag >>_faf )&0x040)|((_daf >>_faf )&0x200);_eaf =((_eaf &0xdb)<<1)|((_adee >>_faf +2)&0x010)|((_fag >>_faf )&0x080)|((_daf >>_faf )&0x400);
};_dfc =_fbf .RegionBitmap .SetByte (_gcb ,byte (_afa ));if _dfc !=nil {return ;};_gcb ++;_bfa ++;};return nil ;};func (_ceabdd *TextRegion )setParameters (_bgeee *_fc .Decoder ,_egad ,_fafb bool ,_egee ,_geeag uint32 ,_cacce uint32 ,_bbbdd int8 ,_gefcb uint32 ,_ggfdd int8 ,_aabf _ba .CombinationOperator ,_ffddc int8 ,_bbac int16 ,_faga ,_ecfb ,_gbfbg ,_ffda ,_gggbe ,_egega ,_gaadc ,_dgag ,_gacb ,_ebcf int8 ,_gfge ,_dfbd []int8 ,_acfcf []*_ba .Bitmap ,_fcedd int8 ){_ceabdd ._ffdc =_bgeee ;
_ceabdd .IsHuffmanEncoded =_egad ;_ceabdd .UseRefinement =_fafb ;_ceabdd .RegionInfo .BitmapWidth =_egee ;_ceabdd .RegionInfo .BitmapHeight =_geeag ;_ceabdd .NumberOfSymbolInstances =_cacce ;_ceabdd .SbStrips =_bbbdd ;_ceabdd .NumberOfSymbols =_gefcb ;
_ceabdd .DefaultPixel =_ggfdd ;_ceabdd .CombinationOperator =_aabf ;_ceabdd .IsTransposed =_ffddc ;_ceabdd .ReferenceCorner =_bbac ;_ceabdd .SbDsOffset =_faga ;_ceabdd .SbHuffFS =_ecfb ;_ceabdd .SbHuffDS =_gbfbg ;_ceabdd .SbHuffDT =_ffda ;_ceabdd .SbHuffRDWidth =_gggbe ;
_ceabdd .SbHuffRDHeight =_egega ;_ceabdd .SbHuffRSize =_gacb ;_ceabdd .SbHuffRDX =_gaadc ;_ceabdd .SbHuffRDY =_dgag ;_ceabdd .SbrTemplate =_ebcf ;_ceabdd .SbrATX =_gfge ;_ceabdd .SbrATY =_dfbd ;_ceabdd .Symbols =_acfcf ;_ceabdd ._babg =_fcedd ;};func (_cfdd *SymbolDictionary )Encode (w _e .BinaryWriter )(_dfcdd int ,_gdcg error ){const _dafa ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _cfdd ==nil {return 0,_fac .Error (_dafa ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _dfcdd ,_gdcg =_cfdd .encodeFlags (w );
_gdcg !=nil {return _dfcdd ,_fac .Wrap (_gdcg ,_dafa ,"");};_cacb ,_gdcg :=_cfdd .encodeATFlags (w );if _gdcg !=nil {return _dfcdd ,_fac .Wrap (_gdcg ,_dafa ,"");};_dfcdd +=_cacb ;if _cacb ,_gdcg =_cfdd .encodeRefinementATFlags (w );_gdcg !=nil {return _dfcdd ,_fac .Wrap (_gdcg ,_dafa ,"");
};_dfcdd +=_cacb ;if _cacb ,_gdcg =_cfdd .encodeNumSyms (w );_gdcg !=nil {return _dfcdd ,_fac .Wrap (_gdcg ,_dafa ,"");};_dfcdd +=_cacb ;if _cacb ,_gdcg =_cfdd .encodeSymbols (w );_gdcg !=nil {return _dfcdd ,_fac .Wrap (_gdcg ,_dafa ,"");};_dfcdd +=_cacb ;
return _dfcdd ,nil ;};func (_gggb *RegionSegment )Size ()int {return 17};func (_gdd *GenericRefinementRegion )decodeOptimized (_ad ,_ec ,_bce ,_eg ,_fdf ,_dce ,_bgcc int )error {var (_eeg error ;_feca int ;_cb int ;);_ggf :=_ad -int (_gdd .ReferenceDY );
if _dff :=int (-_gdd .ReferenceDX );_dff > 0{_feca =_dff ;};_dcf :=_gdd .ReferenceBitmap .GetByteIndex (_feca ,_ggf );if _gdd .ReferenceDX > 0{_cb =int (_gdd .ReferenceDX );};_ebab :=_gdd .RegionBitmap .GetByteIndex (_cb ,_ad );switch _gdd .TemplateID {case 0:_eeg =_gdd .decodeTemplate (_ad ,_ec ,_bce ,_eg ,_fdf ,_dce ,_bgcc ,_ebab ,_ggf ,_dcf ,_gdd ._gb );
case 1:_eeg =_gdd .decodeTemplate (_ad ,_ec ,_bce ,_eg ,_fdf ,_dce ,_bgcc ,_ebab ,_ggf ,_dcf ,_gdd ._ge );};return _eeg ;};func (_cdae *TextRegion )decodeRdx ()(int64 ,error ){const _aabea ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _cdae .IsHuffmanEncoded {if _cdae .SbHuffRDX ==3{if _cdae ._bfaf ==nil {var (_edbea int ;
_gdfg error ;);if _cdae .SbHuffFS ==3{_edbea ++;};if _cdae .SbHuffDS ==3{_edbea ++;};if _cdae .SbHuffDT ==3{_edbea ++;};if _cdae .SbHuffRDWidth ==3{_edbea ++;};if _cdae .SbHuffRDHeight ==3{_edbea ++;};_cdae ._bfaf ,_gdfg =_cdae .getUserTable (_edbea );
if _gdfg !=nil {return 0,_fac .Wrap (_gdfg ,_aabea ,"");};};return _cdae ._bfaf .Decode (_cdae ._addad );};_fgac ,_cbfcf :=_be .GetStandardTable (14+int (_cdae .SbHuffRDX ));if _cbfcf !=nil {return 0,_fac .Wrap (_cbfcf ,_aabea ,"");};return _fgac .Decode (_cdae ._addad );
};_abfg ,_cdbgd :=_cdae ._ffdc .DecodeInt (_cdae ._efefb );if _cdbgd !=nil {return 0,_fac .Wrap (_cdbgd ,_aabea ,"");};return int64 (_abfg ),nil ;};func (_gaaa *TextRegion )createRegionBitmap ()error {_gaaa .RegionBitmap =_ba .New (int (_gaaa .RegionInfo .BitmapWidth ),int (_gaaa .RegionInfo .BitmapHeight ));
if _gaaa .DefaultPixel !=0{_gaaa .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_baac *PageInformationSegment )encodeFlags (_cgdc _e .BinaryWriter )(_bbbb error ){const _bffac ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bbbb =_cgdc .SkipBits (1);
_bbbb !=nil {return _fac .Wrap (_bbbb ,_bffac ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _baf int ;if _baac .CombinationOperatorOverrideAllowed (){_baf =1;};if _bbbb =_cgdc .WriteBit (_baf );_bbbb !=nil {return _fac .Wrap (_bbbb ,_bffac ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_baf =0;if _baac ._cbgc {_baf =1;};if _bbbb =_cgdc .WriteBit (_baf );_bbbb !=nil {return _fac .Wrap (_bbbb ,_bffac ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _bbbb =_cgdc .WriteBit ((int (_baac ._bfbg )>>1)&0x01);
_bbbb !=nil {return _fac .Wrap (_bbbb ,_bffac ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _bbbb =_cgdc .WriteBit (int (_baac ._bfbg )&0x01);
_bbbb !=nil {return _fac .Wrap (_bbbb ,_bffac ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_baf =int (_baac .DefaultPixelValue );
if _bbbb =_cgdc .WriteBit (_baf );_bbbb !=nil {return _fac .Wrap (_bbbb ,_bffac ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_baf =0;if _baac ._dgdg {_baf =1;
};if _bbbb =_cgdc .WriteBit (_baf );_bbbb !=nil {return _fac .Wrap (_bbbb ,_bffac ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_baf =0;if _baac .IsLossless {_baf =1;};if _bbbb =_cgdc .WriteBit (_baf );
_bbbb !=nil {return _fac .Wrap (_bbbb ,_bffac ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_cgba *GenericRegion )readGBAtPixels (_cfcd int )error {const _ggcg ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_cgba .GBAtX =make ([]int8 ,_cfcd );_cgba .GBAtY =make ([]int8 ,_cfcd );for _eec :=0;_eec < _cfcd ;_eec ++{_ggec ,_aef :=_cgba ._cge .ReadByte ();if _aef !=nil {return _fac .Wrapf (_aef ,_ggcg ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_eec );
};_cgba .GBAtX [_eec ]=int8 (_ggec );_ggec ,_aef =_cgba ._cge .ReadByte ();if _aef !=nil {return _fac .Wrapf (_aef ,_ggcg ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_eec );};_cgba .GBAtY [_eec ]=int8 (_ggec );};return nil ;};
func _eeag (_degg _e .StreamReader ,_fba *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_gd :_degg ,RegionInfo :NewRegionSegment (_degg ),_feg :_fba ,_gb :&template0 {},_ge :&template1 {}};};type templater interface{form (_dbe ,_eef ,_bbg ,_dag ,_deg int16 )int16 ;
setIndex (_gbd *_fc .DecoderStats );};func (_bd *GenericRefinementRegion )GetRegionBitmap ()(*_ba .Bitmap ,error ){var _df error ;_bea .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _df !=nil {_bea .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_df );
}else {_bea .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bd .RegionBitmap !=nil {return _bd .RegionBitmap ,nil ;};_eea :=0;if _bd .ReferenceBitmap ==nil {_bd .ReferenceBitmap ,_df =_bd .getGrReference ();if _df !=nil {return nil ,_df ;};};if _bd ._dc ==nil {_bd ._dc ,_df =_fc .New (_bd ._gd );if _df !=nil {return nil ,_df ;
};};if _bd ._gdc ==nil {_bd ._gdc =_fc .NewStats (8192,1);};_bd .RegionBitmap =_ba .New (int (_bd .RegionInfo .BitmapWidth ),int (_bd .RegionInfo .BitmapHeight ));if _bd .TemplateID ==0{if _df =_bd .updateOverride ();_df !=nil {return nil ,_df ;};};_bb :=(_bd .RegionBitmap .Width +7)&-8;
var _fg int ;if _bd .IsTPGROn {_fg =int (-_bd .ReferenceDY )*_bd .ReferenceBitmap .RowStride ;};_eba :=_fg +1;for _bcb :=0;_bcb < _bd .RegionBitmap .Height ;_bcb ++{if _bd .IsTPGROn {_ab ,_bcf :=_bd .decodeSLTP ();if _bcf !=nil {return nil ,_bcf ;};_eea ^=_ab ;
};if _eea ==0{_df =_bd .decodeOptimized (_bcb ,_bd .RegionBitmap .Width ,_bd .RegionBitmap .RowStride ,_bd .ReferenceBitmap .RowStride ,_bb ,_fg ,_eba );if _df !=nil {return nil ,_df ;};}else {_df =_bd .decodeTypicalPredictedLine (_bcb ,_bd .RegionBitmap .Width ,_bd .RegionBitmap .RowStride ,_bd .ReferenceBitmap .RowStride ,_bb ,_fg );
if _df !=nil {return nil ,_df ;};};};return _bd .RegionBitmap ,nil ;};func (_ddgd *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_gafg int ;_cfac int32 ;_daada error ;_geaa =int32 (_ddgd ._cgeg +_ddgd .NumberOfNewSymbols );_gagdc =make ([]int ,_geaa );
);for _ddee :=int32 (0);_ddee < _geaa ;_ddee +=_cfac {if _ddgd .IsHuffmanEncoded {_adda ,_cdce :=_be .GetStandardTable (1);if _cdce !=nil {return nil ,_cdce ;};_abea ,_cdce :=_adda .Decode (_ddgd ._eced );if _cdce !=nil {return nil ,_cdce ;};_cfac =int32 (_abea );
}else {_cfac ,_daada =_ddgd ._bbce .DecodeInt (_ddgd ._eeca );if _daada !=nil {return nil ,_daada ;};};if _cfac !=0{for _fbfc :=_ddee ;_fbfc < _ddee +_cfac ;_fbfc ++{_gagdc [_fbfc ]=_gafg ;};};if _gafg ==0{_gafg =1;}else {_gafg =0;};};return _gagdc ,nil ;
};func (_gecg *GenericRegion )Size ()int {return _gecg .RegionSegment .Size ()+1+2*len (_gecg .GBAtX )};func (_edgc *RegionSegment )String ()string {_cfea :=&_fa .Builder {};_cfea .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_cfea .WriteString (_d .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_edgc .BitmapWidth ,_edgc .BitmapHeight ));
_cfea .WriteString (_d .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_edgc .XLocation ,_edgc .YLocation ));_cfea .WriteString (_d .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_edgc .CombinaionOperator ));
return _cfea .String ();};func (_efab *HalftoneRegion )GetPatterns ()([]*_ba .Bitmap ,error ){var (_bgd []*_ba .Bitmap ;_cae error ;);for _ ,_feec :=range _efab ._aba .RTSegments {var _ccag Segmenter ;_ccag ,_cae =_feec .GetSegmentData ();if _cae !=nil {_bea .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cae );
return nil ,_cae ;};_cba ,_eecg :=_ccag .(*PatternDictionary );if !_eecg {_cae =_d .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_ccag );
return nil ,_cae ;};var _eacc []*_ba .Bitmap ;_eacc ,_cae =_cba .GetDictionary ();if _cae !=nil {_bea .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cae );
return nil ,_cae ;};_bgd =append (_bgd ,_eacc ...);};return _bgd ,nil ;};func (_aebb *TableSegment )Init (h *Header ,r _e .StreamReader )error {_aebb ._cead =r ;return _aebb .parseHeader ();};