//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_be "bytes";_ceg "encoding/binary";_ge "errors";_c "fmt";_ef "github.com/unidoc/unipdf/v3/common";_dc "github.com/unidoc/unipdf/v3/core";_ba "github.com/unidoc/unipdf/v3/internal/cmap";_gc "github.com/unidoc/unipdf/v3/internal/textencoding";
_da "golang.org/x/xerrors";_ec "io";_e "os";_ce "regexp";_d "sort";_g "strings";_a "sync";);type GID =_gc .GID ;var _abe =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_dcc :make (map[rune ]CharMetrics ,length )};};func (_ccga *ttfParser )parseCmapFormat0 ()error {_dge ,_aeb :=_ccga .ReadStr (256);if _aeb !=nil {return _aeb ;};_adbf :=[]byte (_dge );
_ef .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_ccga ._cge .String (),_dge ,_adbf );
for _fgaf ,_gacg :=range _adbf {_ccga ._cge .Chars [rune (_fgaf )]=GID (_gacg );};return nil ;};var _edg =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
var _dca *RuneCharSafeMap ;var _fbb *RuneCharSafeMap ;var _ae _a .Once ;func _efc ()StdFont {_ae .Do (_eeec );_fca :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fca ,_gga );};func _dae ()StdFont {_edf .Do (_fce );_bdg :=Descriptor {Name :TimesRomanName ,Family :_beec ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_bdg ,_abf );};func (_eeb *RuneCharSafeMap )Length ()int {_eeb ._dd .RLock ();defer _eeb ._dd .RUnlock ();return len (_eeb ._dcc );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _cba =&RuneCharSafeMap {_dcc :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_egfc *ttfParser )ReadSByte ()(_bdda int8 ){_ceg .Read (_egfc ._gff ,_ceg .BigEndian ,&_bdda );return _bdda ;};func (_dcg StdFont )ToPdfObject ()_dc .PdfObject {_acf :=_dc .MakeDict ();_acf .Set ("\u0054\u0079\u0070\u0065",_dc .MakeName ("\u0046\u006f\u006e\u0074"));
_acf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dc .MakeName ("\u0054\u0079\u0070e\u0031"));_acf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_dc .MakeName (_dcg .Name ()));_acf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dcg ._ece .ToPdfObject ());
return _dc .MakeIndirectObject (_acf );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_cca *fontMap )read (_fd StdFontName )(func ()StdFont ,bool ){_cca .Lock ();defer _cca .Unlock ();_bee ,_cfg :=_cca ._cf [_fd ];
return _bee ,_cfg ;};func _fce (){_abf =MakeRuneCharSafeMap (len (_abe ));_bb =MakeRuneCharSafeMap (len (_abe ));_dce =MakeRuneCharSafeMap (len (_abe ));_dca =MakeRuneCharSafeMap (len (_abe ));for _add ,_bdf :=range _abe {_abf .Write (_bdf ,CharMetrics {Wx :float64 (_cga [_add ])});
_bb .Write (_bdf ,CharMetrics {Wx :float64 (_edg [_add ])});_dce .Write (_bdf ,CharMetrics {Wx :float64 (_bdff [_add ])});_dca .Write (_bdf ,CharMetrics {Wx :float64 (_befc [_add ])});};};var _edf _a .Once ;var _bdcf =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _ggf *RuneCharSafeMap ;func (_ffcf *ttfParser )parseCmapSubtable31 (_ecfc int64 )error {_begg :=make ([]rune ,0,8);_abg :=make ([]rune ,0,8);_dcbf :=make ([]int16 ,0,8);_aabf :=make ([]uint16 ,0,8);_ffcf ._cge .Chars =make (map[rune ]GID );_ffcf ._gff .Seek (int64 (_ffcf ._edb ["\u0063\u006d\u0061\u0070"])+_ecfc ,_ec .SeekStart );
_egcb :=_ffcf .ReadUShort ();if _egcb !=4{return _da .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_egcb ,_dc .ErrNotSupported );
};_ffcf .Skip (2*2);_cdb :=int (_ffcf .ReadUShort ()/2);_ffcf .Skip (3*2);for _afb :=0;_afb < _cdb ;_afb ++{_abg =append (_abg ,rune (_ffcf .ReadUShort ()));};_ffcf .Skip (2);for _fgd :=0;_fgd < _cdb ;_fgd ++{_begg =append (_begg ,rune (_ffcf .ReadUShort ()));
};for _ecga :=0;_ecga < _cdb ;_ecga ++{_dcbf =append (_dcbf ,_ffcf .ReadShort ());};_bcb ,_ :=_ffcf ._gff .Seek (int64 (0),_ec .SeekCurrent );for _deb :=0;_deb < _cdb ;_deb ++{_aabf =append (_aabf ,_ffcf .ReadUShort ());};for _cdc :=0;_cdc < _cdb ;_cdc ++{_fdge :=_begg [_cdc ];
_faec :=_abg [_cdc ];_afe :=_dcbf [_cdc ];_ded :=_aabf [_cdc ];if _ded > 0{_ffcf ._gff .Seek (_bcb +2*int64 (_cdc )+int64 (_ded ),_ec .SeekStart );};for _bde :=_fdge ;_bde <=_faec ;_bde ++{if _bde ==0xFFFF{break ;};var _gfa int32 ;if _ded > 0{_gfa =int32 (_ffcf .ReadUShort ());
if _gfa > 0{_gfa +=int32 (_afe );};}else {_gfa =_bde +int32 (_afe );};if _gfa >=65536{_gfa -=65536;};if _gfa > 0{_ffcf ._cge .Chars [_bde ]=GID (_gfa );};};};return nil ;};func _gbb ()StdFont {_edf .Do (_fce );_bcee :=Descriptor {Name :TimesItalicName ,Family :_beec ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_bcee ,_dca );};func (_addc *ttfParser )ParseMaxp ()error {if _bfff :=_addc .Seek ("\u006d\u0061\u0078\u0070");_bfff !=nil {return _bfff ;};_addc .Skip (4);_addc ._aab =_addc .ReadUShort ();return nil ;};var _cd *RuneCharSafeMap ;var _gga *RuneCharSafeMap ;
var _ Font =StdFont {};type Font interface{Encoder ()_gc .TextEncoder ;GetRuneMetrics (_gd rune )(CharMetrics ,bool );};var _fcd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
var _dce *RuneCharSafeMap ;func (_fbd *ttfParser )parseCmapSubtable10 (_edgf int64 )error {if _fbd ._cge .Chars ==nil {_fbd ._cge .Chars =make (map[rune ]GID );};_fbd ._gff .Seek (int64 (_fbd ._edb ["\u0063\u006d\u0061\u0070"])+_edgf ,_ec .SeekStart );
var _fba ,_cfb uint32 ;_bbd :=_fbd .ReadUShort ();if _bbd < 8{_fba =uint32 (_fbd .ReadUShort ());_cfb =uint32 (_fbd .ReadUShort ());}else {_fbd .ReadUShort ();_fba =_fbd .ReadULong ();_cfb =_fbd .ReadULong ();};_ef .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_bbd ,_fba ,_cfb );
if _bbd !=0{return _ge .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_egg ,_dgc :=_fbd .ReadStr (256);if _dgc !=nil {return _dgc ;
};_dgbe :=[]byte (_egg );for _bad ,_gfe :=range _dgbe {_fbd ._cge .Chars [rune (_bad )]=GID (_gfe );if _gfe !=0{_c .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_bad ,_gfe ,rune (_gfe ));
};};return nil ;};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func init (){RegisterStdFont (CourierName ,_gb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_efc ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_gdc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_gdcf ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};var _dga *RuneCharSafeMap ;const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);var _fa _a .Once ;func (_begb *ttfParser )Seek (tag string )error {_cgdf ,_eed :=_begb ._edb [tag ];if !_eed {return _c .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_begb ._gff .Seek (int64 (_cgdf ),_ec .SeekStart );
return nil ;};func _eeec (){const _dg =600;_dga =MakeRuneCharSafeMap (len (_abe ));for _ ,_bef :=range _abe {_dga .Write (_bef ,CharMetrics {Wx :_dg });};_gga =_dga .Copy ();_dgb =_dga .Copy ();_fbb =_dga .Copy ();};func (_gdb *ttfParser )ParseHhea ()error {if _geb :=_gdb .Seek ("\u0068\u0068\u0065\u0061");
_geb !=nil {return _geb ;};_gdb .Skip (4+15*2);_gdb ._cbf =_gdb .ReadUShort ();return nil ;};func _dccd (){_cd =MakeRuneCharSafeMap (len (_abe ));_bdd =MakeRuneCharSafeMap (len (_abe ));for _ffa ,_aba :=range _abe {_cd .Write (_aba ,CharMetrics {Wx :float64 (_cegc [_ffa ])});
_bdd .Write (_aba ,CharMetrics {Wx :float64 (_fcd [_ffa ])});};_bcfe =_cd .Copy ();_ggf =_bdd .Copy ();};var _befc =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_daf CharMetrics )String ()string {return _c .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_daf .Wx ,_daf .Wy );};type ttfParser struct{_cge TtfType ;_gff _ec .ReadSeeker ;_edb map[string ]uint32 ;_cbf uint16 ;_aab uint16 ;
};func _df ()StdFont {_fgb :=_gc .NewSymbolEncoder ();_dcd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_dcd ,_bg ,_fgb );};func init (){RegisterStdFont (HelveticaName ,_gab ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_af ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_dgg ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_ag ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_fdbc *ttfParser )Skip (n int ){_fdbc ._gff .Seek (int64 (n ),_ec .SeekCurrent )};func (_gcf StdFont )Name ()string {return string (_gcf ._bc .Name )};
var _bg =&RuneCharSafeMap {_dcc :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
type StdFontName string ;var _cga =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_gce *ttfParser )ParseOS2 ()error {if _agcf :=_gce .Seek ("\u004f\u0053\u002f\u0032");_agcf !=nil {return _agcf ;};_ecgag :=_gce .ReadUShort ();_gce .Skip (4*2);_gce .Skip (11*2+10+4*4+4);_gdd :=_gce .ReadUShort ();_gce ._cge .Bold =(_gdd &32)!=0;
_gce .Skip (2*2);_gce ._cge .TypoAscender =_gce .ReadShort ();_gce ._cge .TypoDescender =_gce .ReadShort ();if _ecgag >=2{_gce .Skip (3*2+2*4+2);_gce ._cge .CapHeight =_gce .ReadShort ();}else {_gce ._cge .CapHeight =0;};return nil ;};func _af ()StdFont {_fa .Do (_dccd );
_egf :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};return NewStdFont (_egf ,_bdd );
};type StdFont struct{_bc Descriptor ;_fcf *RuneCharSafeMap ;_ece _gc .TextEncoder ;};func (_gaba *ttfParser )ParseHmtx ()error {if _gaf :=_gaba .Seek ("\u0068\u006d\u0074\u0078");_gaf !=nil {return _gaf ;};_gaba ._cge .Widths =make ([]uint16 ,0,8);for _ddfc :=uint16 (0);
_ddfc < _gaba ._cbf ;_ddfc ++{_gaba ._cge .Widths =append (_gaba ._cge .Widths ,_gaba .ReadUShort ());_gaba .Skip (2);};if _gaba ._cbf < _gaba ._aab &&_gaba ._cbf > 0{_cad :=_gaba ._cge .Widths [_gaba ._cbf -1];for _abed :=_gaba ._cbf ;_abed < _gaba ._aab ;
_abed ++{_gaba ._cge .Widths =append (_gaba ._cge .Widths ,_cad );};};return nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_efb :=_beg .read (name );_efb {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_beg .write (name ,fnc );for _ ,_abc :=range aliases {RegisterStdFont (_abc ,fnc );};};func (_bceb *ttfParser )ParsePost ()error {if _bfg :=_bceb .Seek ("\u0070\u006f\u0073\u0074");_bfg !=nil {return _bfg ;};_aeg :=_bceb .Read32Fixed ();_bceb ._cge .ItalicAngle =_bceb .Read32Fixed ();
_bceb ._cge .UnderlinePosition =_bceb .ReadShort ();_bceb ._cge .UnderlineThickness =_bceb .ReadShort ();_bceb ._cge .IsFixedPitch =_bceb .ReadULong ()!=0;_bceb .ReadULong ();_bceb .ReadULong ();_bceb .ReadULong ();_bceb .ReadULong ();_ef .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_aeg );
switch _aeg {case 1.0:_bceb ._cge .GlyphNames =_bdcf ;case 2.0:_dcda :=int (_bceb .ReadUShort ());_gdf :=make ([]int ,_dcda );_bceb ._cge .GlyphNames =make ([]GlyphName ,_dcda );_bcef :=-1;for _eaa :=0;_eaa < _dcda ;_eaa ++{_dbb :=int (_bceb .ReadUShort ());
_gdf [_eaa ]=_dbb ;if _dbb <=0x7fff&&_dbb > _bcef {_bcef =_dbb ;};};var _gbg []GlyphName ;if _bcef >=len (_bdcf ){_gbg =make ([]GlyphName ,_bcef -len (_bdcf )+1);for _gbbcd :=0;_gbbcd < _bcef -len (_bdcf )+1;_gbbcd ++{_cfa :=int (_bceb .readByte ());_dfa ,_daecd :=_bceb .ReadStr (_cfa );
if _daecd !=nil {return _daecd ;};_gbg [_gbbcd ]=GlyphName (_dfa );};};for _eega :=0;_eega < _dcda ;_eega ++{_gbc :=_gdf [_eega ];if _gbc < len (_bdcf ){_bceb ._cge .GlyphNames [_eega ]=_bdcf [_gbc ];}else if _gbc >=len (_bdcf )&&_gbc <=32767{_bceb ._cge .GlyphNames [_eega ]=_gbg [_gbc -len (_bdcf )];
}else {_bceb ._cge .GlyphNames [_eega ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_aff :=make ([]int ,_bceb ._aab );for _abab :=0;_abab < len (_aff );_abab ++{_edc :=int (_bceb .ReadSByte ());_aff [_abab ]=_abab +1+_edc ;
};_bceb ._cge .GlyphNames =make ([]GlyphName ,len (_aff ));for _ccgg :=0;_ccgg < len (_bceb ._cge .GlyphNames );_ccgg ++{_fbag :=_bdcf [_aff [_ccgg ]];_bceb ._cge .GlyphNames [_ccgg ]=_fbag ;};case 3.0:_ef .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ef .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_aeg );};return nil ;};func (_ad StdFont )GetMetricsTable ()*RuneCharSafeMap {return _ad ._fcf };
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func init (){RegisterStdFont (SymbolName ,_df ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_bag );};func _gdc ()StdFont {_ae .Do (_eeec );_gef :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gef ,_fbb );};func _gea ()StdFont {_edf .Do (_fce );_bdc :=Descriptor {Name :TimesBoldItalicName ,Family :_beec ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_bdc ,_dce );};func (_fdb *ttfParser )parseCmapVersion (_dec int64 )error {_ef .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_dec );
if _fdb ._cge .Chars ==nil {_fdb ._cge .Chars =make (map[rune ]GID );};_fdb ._gff .Seek (int64 (_fdb ._edb ["\u0063\u006d\u0061\u0070"])+_dec ,_ec .SeekStart );var _afd ,_efd uint32 ;_cgb :=_fdb .ReadUShort ();if _cgb < 8{_afd =uint32 (_fdb .ReadUShort ());
_efd =uint32 (_fdb .ReadUShort ());}else {_fdb .ReadUShort ();_afd =_fdb .ReadULong ();_efd =_fdb .ReadULong ();};_ef .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_cgb ,_afd ,_efd );
switch _cgb {case 0:return _fdb .parseCmapFormat0 ();case 6:return _fdb .parseCmapFormat6 ();case 12:return _fdb .parseCmapFormat12 ();default:_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_cgb );
return nil ;};};func (_eg *fontMap )write (_cb StdFontName ,_eb func ()StdFont ){_eg .Lock ();defer _eg .Unlock ();_eg ._cf [_cb ]=_eb ;};func (_dgd *TtfType )MakeToUnicode ()*_ba .CMap {_abb :=make (map[_ba .CharCode ]rune );if len (_dgd .GlyphNames )==0{return _ba .NewToUnicodeCMap (_abb );
};for _egb ,_eeaf :=range _dgd .Chars {_fbg :=_ba .CharCode (_egb );_agg :=_dgd .GlyphNames [_eeaf ];_dag ,_edgb :=_gc .GlyphToRune (_agg );if !_edgb {_ef .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_egb ,_agg );
_dag =_gc .MissingCodeRune ;};_abb [_fbg ]=_dag ;};return _ba .NewToUnicodeCMap (_abb );};func init (){RegisterStdFont (TimesRomanName ,_dae ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_adb ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_gbb ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_gea ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};type GlyphName =_gc .GlyphName ;func (_eec StdFont )Encoder ()_gc .TextEncoder {return _eec ._ece };func NewFontFile2FromPdfObject (obj _dc .PdfObject )(TtfType ,error ){obj =_dc .TraceToDirectObject (obj );_ffd ,_gbbc :=obj .(*_dc .PdfObjectStream );
if !_gbbc {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_dc .ErrTypeError ;
};_abfb ,_ca :=_dc .DecodeStream (_ffd );if _ca !=nil {return TtfType {},_ca ;};_ffc :=ttfParser {_gff :_be .NewReader (_abfb )};return _ffc .Parse ();};const (_beec ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func (_cfe *ttfParser )ParseName ()error {if _daag :=_cfe .Seek ("\u006e\u0061\u006d\u0065");_daag !=nil {return _daag ;};_caga ,_ :=_cfe ._gff .Seek (0,_ec .SeekCurrent );_cfe ._cge .PostScriptName ="";_cfe .Skip (2);_gbbb :=_cfe .ReadUShort ();_ade :=_cfe .ReadUShort ();
for _dccdd :=uint16 (0);_dccdd < _gbbb &&_cfe ._cge .PostScriptName =="";_dccdd ++{_cfe .Skip (3*2);_eef :=_cfe .ReadUShort ();_gcb :=_cfe .ReadUShort ();_dgba :=_cfe .ReadUShort ();if _eef ==6{_cfe ._gff .Seek (_caga +int64 (_ade )+int64 (_dgba ),_ec .SeekStart );
_daec ,_gcdg :=_cfe .ReadStr (int (_gcb ));if _gcdg !=nil {return _gcdg ;};_daec =_g .Replace (_daec ,"\u0000","",-1);_bfdg ,_gcdg :=_ce .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _gcdg !=nil {return _gcdg ;
};_cfe ._cge .PostScriptName =_bfdg .ReplaceAllString (_daec ,"");};};if _cfe ._cge .PostScriptName ==""{_ef .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};type fontMap struct{_a .Mutex ;_cf map[StdFontName ]func ()StdFont ;};func TtfParseFile (fileStr string )(TtfType ,error ){_dafb ,_aec :=_e .Open (fileStr );if _aec !=nil {return TtfType {},_aec ;};defer _dafb .Close ();return TtfParse (_dafb );
};func (_edba *ttfParser )ReadStr (length int )(string ,error ){_bgf :=make ([]byte ,length );_ccdb ,_faa :=_edba ._gff .Read (_bgf );if _faa !=nil {return "",_faa ;}else if _ccdb !=length {return "",_c .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_bgf ),nil ;};func (_dbd *ttfParser )Parse ()(TtfType ,error ){_cbag ,_agd :=_dbd .ReadStr (4);if _agd !=nil {return TtfType {},_agd ;};if _cbag =="\u004f\u0054\u0054\u004f"{return TtfType {},_da .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_dc .ErrNotSupported );
};if _cbag !="\u0000\u0001\u0000\u0000"&&_cbag !="\u0074\u0072\u0075\u0065"{_ef .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_cbag );
};_fag :=int (_dbd .ReadUShort ());_dbd .Skip (3*2);_dbd ._edb =make (map[string ]uint32 );var _eff string ;for _fab :=0;_fab < _fag ;_fab ++{_eff ,_agd =_dbd .ReadStr (4);if _agd !=nil {return TtfType {},_agd ;};_dbd .Skip (4);_dad :=_dbd .ReadULong ();
_dbd .Skip (4);_dbd ._edb [_eff ]=_dad ;};_ef .Log .Trace (_cag (_dbd ._edb ));if _agd =_dbd .ParseComponents ();_agd !=nil {return TtfType {},_agd ;};return _dbd ._cge ,nil ;};func (_deg *TtfType )NewEncoder ()_gc .TextEncoder {return _gc .NewTrueTypeFontEncoder (_deg .Chars )};
func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _gc .TextEncoder )StdFont {var _aa rune =0xA0;if _ ,_ecg :=metrics .Read (_aa );!_ecg {_ecgg ,_ :=metrics .Read (0x20);metrics .Write (_aa ,_ecgg );};return StdFont {_bc :desc ,_fcf :metrics ,_ece :encoder };
};type FontWeight int ;func _bag ()StdFont {_abeg :=_gc .NewZapfDingbatsEncoder ();_dbc :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_dbc ,_cba ,_abeg );};func _dgg ()StdFont {_fa .Do (_dccd );_eca :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_eca ,_bcfe );};func (_bce StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ea ,_dcf :=_bce ._fcf .Read (r );return _ea ,_dcf ;};var _dgb *RuneCharSafeMap ;func (_fe *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_fe ._dd .RLock ();
defer _fe ._dd .RUnlock ();_ac ,_fg :=_fe ._dcc [b ];return _ac ,_fg ;};func (_cbfb *ttfParser )parseCmapFormat12 ()error {_cgad :=_cbfb .ReadULong ();_ef .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_cbfb ._cge .String (),_cgad );
for _bba :=uint32 (0);_bba < _cgad ;_bba ++{_ffbd :=_cbfb .ReadULong ();_fbdf :=_cbfb .ReadULong ();_bdga :=_cbfb .ReadULong ();if _ffbd > 0x0010FFFF||(0xD800<=_ffbd &&_ffbd <=0xDFFF){return _ge .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _fbdf < _ffbd ||_fbdf > 0x0010FFFF||(0xD800<=_fbdf &&_fbdf <=0xDFFF){return _ge .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _agga :=_ffbd ;_agga <=_fbdf ;
_agga ++{if _agga > 0x10FFFF{_ef .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_cbfb ._cge .Chars [rune (_agga )]=GID (_bdga );_bdga ++;};};return nil ;};func (_caf *ttfParser )ParseHead ()error {if _bdca :=_caf .Seek ("\u0068\u0065\u0061\u0064");_bdca !=nil {return _bdca ;};_caf .Skip (3*4);_bgg :=_caf .ReadULong ();if _bgg !=0x5F0F3CF5{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_caf );
};_caf .Skip (2);_caf ._cge .UnitsPerEm =_caf .ReadUShort ();_caf .Skip (2*8);_caf ._cge .Xmin =_caf .ReadShort ();_caf ._cge .Ymin =_caf .ReadShort ();_caf ._cge .Xmax =_caf .ReadShort ();_caf ._cge .Ymax =_caf .ReadShort ();return nil ;};var _beg =&fontMap {_cf :make (map[StdFontName ]func ()StdFont )};
func (_cg *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_cc :=MakeRuneCharSafeMap (_cg .Length ());_cg .Range (func (_geg rune ,_f CharMetrics )(_fc bool ){_cc ._dcc [_geg ]=_f ;return false });return _cc ;};func (_ega *ttfParser )ReadUShort ()(_cec uint16 ){_ceg .Read (_ega ._gff ,_ceg .BigEndian ,&_cec );
return _cec ;};var _abf *RuneCharSafeMap ;func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ced ,_ga :=_beg .read (name );if !_ga {return StdFont {},false ;};return _ced (),true ;};func _ag ()StdFont {_fa .Do (_dccd );_ggd :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_ggd ,_ggf );};func (_ee *RuneCharSafeMap )Range (f func (_fb rune ,_de CharMetrics )(_ab bool )){_ee ._dd .RLock ();defer _ee ._dd .RUnlock ();for _ccg ,_bf :=range _ee ._dcc {if f (_ccg ,_bf ){break ;};};};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_gc .NewStandardEncoder ());
};func (_ed *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ed ._dd .Lock ();defer _ed ._dd .Unlock ();_ed ._dcc [b ]=r ;};func (_ccd *ttfParser )ParseCmap ()error {var _gcd int64 ;if _edfb :=_ccd .Seek ("\u0063\u006d\u0061\u0070");_edfb !=nil {return _edfb ;
};_ef .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_ccd .ReadUShort ();_aggg :=int (_ccd .ReadUShort ());_ffb :=int64 (0);_bgb :=int64 (0);_fbbb :=int64 (0);for _fagad :=0;_fagad < _aggg ;_fagad ++{_fbde :=_ccd .ReadUShort ();_adda :=_ccd .ReadUShort ();
_gcd =int64 (_ccd .ReadULong ());if _fbde ==3&&_adda ==1{_bgb =_gcd ;}else if _fbde ==3&&_adda ==10{_fbbb =_gcd ;}else if _fbde ==1&&_adda ==0{_ffb =_gcd ;};};if _ffb !=0{if _fff :=_ccd .parseCmapVersion (_ffb );_fff !=nil {return _fff ;};};if _bgb !=0{if _baa :=_ccd .parseCmapSubtable31 (_bgb );
_baa !=nil {return _baa ;};};if _fbbb !=0{if _fbeg :=_ccd .parseCmapVersion (_fbbb );_fbeg !=nil {return _fbeg ;};};if _bgb ==0&&_ffb ==0&&_fbbb ==0{_ef .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func _cag (_dgae map[string ]uint32 )string {var _bddf []string ;for _fgg :=range _dgae {_bddf =append (_bddf ,_fgg );};_d .Slice (_bddf ,func (_abcg ,_agc int )bool {return _dgae [_bddf [_abcg ]]< _dgae [_bddf [_agc ]]});
_ggfc :=[]string {_c .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_dgae ))};for _ ,_fga :=range _bddf {_ggfc =append (_ggfc ,_c .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_fga ,_dgae [_fga ]));
};return _g .Join (_ggfc ,"\u000a");};var _bb *RuneCharSafeMap ;var _bcfe *RuneCharSafeMap ;func TtfParse (r _ec .ReadSeeker )(TtfType ,error ){_bff :=&ttfParser {_gff :r };return _bff .Parse ()};func _gb ()StdFont {_ae .Do (_eeec );_bcf :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bcf ,_dga );};func (_ddd *TtfType )String ()string {return _c .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_ddd .PostScriptName ,_ddd .UnitsPerEm ,_ddd .Bold ,_ddd .ItalicAngle ,_ddd .CapHeight ,len (_ddd .Chars ),len (_ddd .GlyphNames ));
};func (_gega *ttfParser )ParseComponents ()error {if _efff :=_gega .ParseHead ();_efff !=nil {return _efff ;};if _bfd :=_gega .ParseHhea ();_bfd !=nil {return _bfd ;};if _eda :=_gega .ParseMaxp ();_eda !=nil {return _eda ;};if _fcb :=_gega .ParseHmtx ();
_fcb !=nil {return _fcb ;};if _ ,_feb :=_gega ._edb ["\u006e\u0061\u006d\u0065"];_feb {if _adg :=_gega .ParseName ();_adg !=nil {return _adg ;};};if _ ,_cgd :=_gega ._edb ["\u004f\u0053\u002f\u0032"];_cgd {if _ecd :=_gega .ParseOS2 ();_ecd !=nil {return _ecd ;
};};if _ ,_dea :=_gega ._edb ["\u0070\u006f\u0073\u0074"];_dea {if _cagc :=_gega .ParsePost ();_cagc !=nil {return _cagc ;};};if _ ,_fdg :=_gega ._edb ["\u0063\u006d\u0061\u0070"];_fdg {if _dcb :=_gega .ParseCmap ();_dcb !=nil {return _dcb ;};};return nil ;
};func _gab ()StdFont {_fa .Do (_dccd );_ff :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ff ,_cd );};func IsStdFont (name StdFontName )bool {_ ,_bd :=_beg .read (name );return _bd };func (_cgg *ttfParser )ReadULong ()(_edaa uint32 ){_ceg .Read (_cgg ._gff ,_ceg .BigEndian ,&_edaa );return _edaa ;};func _gdcf ()StdFont {_ae .Do (_eeec );
_db :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};return NewStdFont (_db ,_dgb );
};type RuneCharSafeMap struct{_dcc map[rune ]CharMetrics ;_dd _a .RWMutex ;};var _bdff =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_egcbd *ttfParser )ReadShort ()(_gfb int16 ){_ceg .Read (_egcbd ._gff ,_ceg .BigEndian ,&_gfb );return _gfb ;};var _cegc =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_ddg *ttfParser )Read32Fixed ()float64 {_dcgb :=float64 (_ddg .ReadShort ());_gdba :=float64 (_ddg .ReadUShort ())/65536.0;return _dcgb +_gdba ;};func (_fef *ttfParser )readByte ()(_gdcfc uint8 ){_ceg .Read (_fef ._gff ,_ceg .BigEndian ,&_gdcfc );
return _gdcfc ;};var _bdd *RuneCharSafeMap ;type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_eecf *ttfParser )parseCmapFormat6 ()error {_dadf :=int (_eecf .ReadUShort ());_cbba :=int (_eecf .ReadUShort ());_ef .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_eecf ._cge .String (),_dadf ,_cbba );
for _bfc :=0;_bfc < _cbba ;_bfc ++{_bggd :=GID (_eecf .ReadUShort ());_eecf ._cge .Chars [rune (_bfc +_dadf )]=_bggd ;};return nil ;};func (_fbe StdFont )Descriptor ()Descriptor {return _fbe ._bc };func (_afc *TtfType )MakeEncoder ()(_gc .SimpleEncoder ,error ){_bfb :=make (map[_gc .CharCode ]GlyphName );
for _acc :=_gc .CharCode (0);_acc <=256;_acc ++{_fcg :=rune (_acc );_fec ,_efbd :=_afc .Chars [_fcg ];if !_efbd {continue ;};var _ggfd GlyphName ;if int (_fec )>=0&&int (_fec )< len (_afc .GlyphNames ){_ggfd =_afc .GlyphNames [_fec ];}else {_fae :=rune (_fec );
if _bdge ,_cbb :=_gc .RuneToGlyph (_fae );_cbb {_ggfd =_bdge ;};};if _ggfd !=""{_bfb [_acc ]=_ggfd ;};};if len (_bfb )==0{_ef .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_afc ,_afc .Chars );
};return _gc .NewCustomSimpleTextEncoder (_bfb ,nil );};func _adb ()StdFont {_edf .Do (_fce );_dba :=Descriptor {Name :TimesBoldName ,Family :_beec ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_dba ,_bb );};