//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_b "bufio";_ae "bytes";_cc "crypto/md5";_e "crypto/rand";_bge "crypto/sha1";_adf "crypto/x509";_bg "encoding/binary";_aa "encoding/hex";_cfe "errors";_ad "fmt";_ce "github.com/unidoc/pkcs7";_bef "github.com/unidoc/unipdf/v3/common";
_adfb "github.com/unidoc/unipdf/v3/core";_bga "github.com/unidoc/unipdf/v3/core/security";_af "github.com/unidoc/unipdf/v3/core/security/crypt";_bfa "github.com/unidoc/unipdf/v3/internal/cmap";_afe "github.com/unidoc/unipdf/v3/internal/imageutil";_ag "github.com/unidoc/unipdf/v3/internal/license";
_fd "github.com/unidoc/unipdf/v3/internal/sampling";_ba "github.com/unidoc/unipdf/v3/internal/textencoding";_ffcg "github.com/unidoc/unipdf/v3/internal/timeutils";_fb "github.com/unidoc/unipdf/v3/internal/transform";_da "github.com/unidoc/unipdf/v3/model/internal/docutil";
_ga "github.com/unidoc/unipdf/v3/model/internal/fonts";_dgb "github.com/unidoc/unipdf/v3/model/mdp";_ccg "github.com/unidoc/unipdf/v3/model/sigutil";_df "github.com/unidoc/unipdf/v3/ps";_dbc "github.com/unidoc/unitype";_daf "golang.org/x/xerrors";_f "hash";
_ade "image";_d "image/color";_ "image/gif";_ "image/png";_gb "io";_dg "io/ioutil";_dc "math";_cf "math/rand";_bf "os";_db "regexp";_ab "sort";_bc "strconv";_be "strings";_g "sync";_c "time";_gec "unicode";_ffc "unicode/utf8";);

// ToPdfObject returns a stream object.
func (_ebfcf *XObjectImage )ToPdfObject ()_adfb .PdfObject {_eafff :=_ebfcf ._efgf ;_cbcff :=_eafff .PdfObjectDictionary ;if _ebfcf .Filter !=nil {_cbcff =_ebfcf .Filter .MakeStreamDict ();_eafff .PdfObjectDictionary =_cbcff ;};_cbcff .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_cbcff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0049\u006d\u0061g\u0065"));_cbcff .Set ("\u0057\u0069\u0064t\u0068",_adfb .MakeInteger (*(_ebfcf .Width )));_cbcff .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_adfb .MakeInteger (*(_ebfcf .Height )));
if _ebfcf .BitsPerComponent !=nil {_cbcff .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_adfb .MakeInteger (*(_ebfcf .BitsPerComponent )));};if _ebfcf .ColorSpace !=nil {_cbcff .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ebfcf .ColorSpace .ToPdfObject ());
};_cbcff .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ebfcf .Intent );_cbcff .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ebfcf .ImageMask );_cbcff .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ebfcf .Mask );_ecbfc :=_cbcff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _ebfcf .Decode ==nil &&_ecbfc {_cbcff .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _ebfcf .Decode !=nil {_cbcff .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ebfcf .Decode );};_cbcff .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ebfcf .Interpolate );
_cbcff .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ebfcf .Alternatives );_cbcff .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ebfcf .SMask );_cbcff .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ebfcf .SMaskInData );
_cbcff .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ebfcf .Matte );_cbcff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebfcf .Name );_cbcff .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ebfcf .StructParent );_cbcff .SetIfNotNil ("\u0049\u0044",_ebfcf .ID );
_cbcff .SetIfNotNil ("\u004f\u0050\u0049",_ebfcf .OPI );_cbcff .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ebfcf .Metadata );_cbcff .SetIfNotNil ("\u004f\u0043",_ebfcf .OC );_cbcff .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_adfb .MakeInteger (int64 (len (_ebfcf .Stream ))));
_eafff .Stream =_ebfcf .Stream ;return _eafff ;};func (_cacd *PdfShading )getShadingDict ()(*_adfb .PdfObjectDictionary ,error ){_ggfg :=_cacd ._egbfe ;if _gagb ,_dagb :=_ggfg .(*_adfb .PdfIndirectObject );_dagb {_eeace ,_gcadf :=_gagb .PdfObject .(*_adfb .PdfObjectDictionary );
if !_gcadf {return nil ,_adfb .ErrTypeError ;};return _eeace ,nil ;}else if _gffde ,_edgef :=_ggfg .(*_adfb .PdfObjectStream );_edgef {return _gffde .PdfObjectDictionary ,nil ;}else if _ggff ,_dcfaff :=_ggfg .(*_adfb .PdfObjectDictionary );_dcfaff {return _ggff ,nil ;
}else {_bef .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_adfb .ErrTypeError ;};};

// ColorToRGB converts a Lab color to an RGB color.
func (_aagg *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_ddbc :=func (_fcbf float64 )float64 {if _fcbf >=6.0/29{return _fcbf *_fcbf *_fcbf ;};return 108.0/841*(_fcbf -4/29);};_accb ,_bdca :=color .(*PdfColorLab );if !_bdca {_bef .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_accb .L ();AStar :=_accb .A ();BStar :=_accb .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_aagg .WhitePoint [0]*_ddbc (L );Y :=_aagg .WhitePoint [1]*_ddbc (M );Z :=_aagg .WhitePoint [2]*_ddbc (N );_eggf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ebee :=-0.969256*X +1.875992*Y +0.041556*Z ;_aegd :=0.055648*X +-0.204043*Y +1.057311*Z ;_eggf =_dc .Min (_dc .Max (_eggf ,0),1.0);
_ebee =_dc .Min (_dc .Max (_ebee ,0),1.0);_aegd =_dc .Min (_dc .Max (_aegd ,0),1.0);return NewPdfColorDeviceRGB (_eggf ,_ebee ,_aegd ),nil ;};func (_dfdge Image )getBase ()_afe .ImageBase {return _afe .NewImageBase (int (_dfdge .Width ),int (_dfdge .Height ),int (_dfdge .BitsPerComponent ),_dfdge .ColorComponents ,_dfdge .Data ,_dfdge ._befaf ,_dfdge ._cdcd );
};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_geg :=NewPdfAnnotation ();_egcd :=&PdfAnnotationLink {};_egcd .PdfAnnotation =_geg ;_geg .SetContext (_egcd );return _egcd ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_bcce :=NewPdfAnnotation ();_cbeg :=&PdfAnnotationSquiggly {};_cbeg .PdfAnnotation =_bcce ;_cbeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcce .SetContext (_cbeg );return _cbeg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_eaggg *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _eaggg .Alternate ==nil {if _eaggg .N ==1{_fgfc :=NewPdfColorspaceDeviceGray ();return _fgfc .ColorFromFloats (vals );}else if _eaggg .N ==3{_abbf :=NewPdfColorspaceDeviceRGB ();
return _abbf .ColorFromFloats (vals );}else if _eaggg .N ==4{_cegbd :=NewPdfColorspaceDeviceCMYK ();return _cegbd .ColorFromFloats (vals );}else {return nil ,_cfe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _eaggg .Alternate .ColorFromFloats (vals );};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _adfb .PdfObject ;AN _adfb .PdfObject ;OP _adfb .PdfObject ;JS _adfb .PdfObject ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_fgbd *PdfReader )newPdfActionImportDataFromDict (_dcfb *_adfb .PdfObjectDictionary )(*PdfActionImportData ,error ){_fcc ,_fcb :=_fda (_dcfb .Get ("\u0046"));
if _fcb !=nil {return nil ,_fcb ;};return &PdfActionImportData {F :_fcc },nil ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_cbfge *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _baaeb []*PdfField ;_gdagg :=map[*_adfb .PdfIndirectObject ]struct{}{};for _ ,_dgdae :=range _cbfge .PageList {_ffgee ,_cfbcg :=_dgdae .GetAnnotations ();if _cfbcg !=nil {return _cfbcg ;
};for _ ,_afgec :=range _ffgee {var _afcag *PdfField ;switch _eegde :=_afgec .GetContext ().(type ){case *PdfAnnotationWidget :if _eegde ._bbea !=nil {_afcag =_eegde ._bbea ;break ;};if _fgceb ,_efeb :=_adfb .GetIndirect (_eegde .Parent );_efeb {_afcag ,_cfbcg =_cbfge .newPdfFieldFromIndirectObject (_fgceb ,nil );
if _cfbcg ==nil {break ;};_bef .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fgceb ,_cfbcg );
};if _eegde ._ged !=nil {_afcag ,_cfbcg =_cbfge .newPdfFieldFromIndirectObject (_eegde ._ged ,nil );if _cfbcg ==nil {break ;};_bef .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eegde ._ged ,_cfbcg );
};};if _afcag ==nil {continue ;};if _ ,_cbfgba :=_gdagg [_afcag ._dfgf ];_cbfgba {continue ;};_gdagg [_afcag ._dfgf ]=struct{}{};_baaeb =append (_baaeb ,_afcag );};};if len (_baaeb )==0{return nil ;};if _cbfge .AcroForm ==nil {_cbfge .AcroForm =NewPdfAcroForm ();
};_cbfge .AcroForm .Fields =&_baaeb ;return nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _adfb .PdfObject ;Open _adfb .PdfObject ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _dgb .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_adfb .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_adfb .MakeInteger (int64 (permission )),V :_adfb .MakeName ("\u0031\u002e\u0032")};
};

// SetAction sets the PDF action for the annotation link.
func (_dbg *PdfAnnotationLink )SetAction (action *PdfAction ){_dbg ._add =action ;if action ==nil {_dbg .A =nil ;};};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_befg :=NewPdfAnnotation ();_dgcf :=&PdfAnnotation3D {};_dgcf .PdfAnnotation =_befg ;_befg .SetContext (_dgcf );return _dgcf ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_gebbe .Lock ();defer _gebbe .Unlock ();_gdbde =title };func (_bfgc *PdfAppender )updateObjectsDeep (_agf _adfb .PdfObject ,_aca map[_adfb .PdfObject ]struct{}){if _aca ==nil {_aca =map[_adfb .PdfObject ]struct{}{};};if _ ,_ggad :=_aca [_agf ];
_ggad ||_agf ==nil {return ;};_aca [_agf ]=struct{}{};_agag :=_adfb .ResolveReferencesDeep (_agf ,_bfgc ._bgfg );if _agag !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agag );};switch _bded :=_agf .(type ){case *_adfb .PdfIndirectObject :switch {case _bded .GetParser ()==_bfgc ._agd ._aeea :return ;
case _bded .GetParser ()==_bfgc .Reader ._aeea :_cffc ,_ :=_bfgc ._agd .GetIndirectObjectByNumber (int (_bded .ObjectNumber ));_fagf ,_dece :=_cffc .(*_adfb .PdfIndirectObject );if _dece &&_fagf !=nil {if _fagf .PdfObject !=_bded .PdfObject &&_fagf .PdfObject .WriteString ()!=_bded .PdfObject .WriteString (){_bfgc .addNewObject (_agf );
_bfgc ._bcd [_agf ]=_bded .ObjectNumber ;};};default:_bfgc .addNewObject (_agf );};_bfgc .updateObjectsDeep (_bded .PdfObject ,_aca );case *_adfb .PdfObjectArray :for _ ,_ggdb :=range _bded .Elements (){_bfgc .updateObjectsDeep (_ggdb ,_aca );};case *_adfb .PdfObjectDictionary :for _ ,_fdfg :=range _bded .Keys (){_bfgc .updateObjectsDeep (_bded .Get (_fdfg ),_aca );
};case *_adfb .PdfObjectStreams :if _bded .GetParser ()!=_bfgc ._agd ._aeea {for _ ,_bagg :=range _bded .Elements (){_bfgc .updateObjectsDeep (_bagg ,_aca );};};case *_adfb .PdfObjectStream :switch {case _bded .GetParser ()==_bfgc ._agd ._aeea :return ;
case _bded .GetParser ()==_bfgc .Reader ._aeea :if _dcbb ,_bgbd :=_bfgc ._agd ._aeea .LookupByReference (_bded .PdfObjectReference );_bgbd ==nil {var _fae bool ;if _cgcc ,_daga :=_adfb .GetStream (_dcbb );_daga &&_ae .Equal (_cgcc .Stream ,_bded .Stream ){_fae =true ;
};if _cdgc ,_edfd :=_adfb .GetDict (_dcbb );_fae &&_edfd {_fae =_cdgc .WriteString ()==_bded .PdfObjectDictionary .WriteString ();};if _fae {return ;};};if _bded .ObjectNumber !=0{_bfgc ._bcd [_agf ]=_bded .ObjectNumber ;};default:if _ ,_ebcf :=_bfgc ._gaf [_agf ];
!_ebcf {_bfgc .addNewObject (_agf );};};_bfgc .updateObjectsDeep (_bded .PdfObjectDictionary ,_aca );};};func (_dggbg *PdfPattern )getDict ()*_adfb .PdfObjectDictionary {if _ebbbaa ,_geagb :=_dggbg ._fcgcb .(*_adfb .PdfIndirectObject );_geagb {_ebad ,_dfcdf :=_ebbbaa .PdfObject .(*_adfb .PdfObjectDictionary );
if !_dfcdf {return nil ;};return _ebad ;}else if _afca ,_aagee :=_dggbg ._fcgcb .(*_adfb .PdfObjectStream );_aagee {return _afca .PdfObjectDictionary ;}else {_bef .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_dggbg ._fcgcb );
return nil ;};};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_bcfg *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_fcega ,_egfe :=color .(*PdfColorDeviceCMYK );if !_egfe {_bef .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_egfb :=_fcega .C ();_ebgga :=_fcega .M ();_efd :=_fcega .Y ();_eebf :=_fcega .K ();_egfb =_egfb *(1-_eebf )+_eebf ;_ebgga =_ebgga *(1-_eebf )+_eebf ;
_efd =_efd *(1-_eebf )+_eebf ;_cgfc :=1-_egfb ;_ggcf :=1-_ebgga ;_abgd :=1-_efd ;return NewPdfColorDeviceRGB (_cgfc ,_ggcf ,_abgd ),nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dgef *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_fdfad :=_fd .NewReader (img .getBase ());_gcce :=_afe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dgef .AlternateSpace .GetNumComponents (),nil ,img ._befaf ,nil );
_bdce :=_fd .NewWriter (_gcce );_gegca :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_bef .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_bef .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dgef .TintTransform );_ceag :=_dgef .AlternateSpace .DecodeArray ();var (_adec uint32 ;_dcfd error ;);for {_adec ,_dcfd =_fdfad .ReadSample ();
if _dcfd ==_gb .EOF {break ;};if _dcfd !=nil {return img ,_dcfd ;};_dbede :=float64 (_adec )/_gegca ;_ggagg ,_afbd :=_dgef .TintTransform .Evaluate ([]float64 {_dbede });if _afbd !=nil {return img ,_afbd ;};for _dfabf ,_gfbg :=range _ggagg {_fagb :=_afe .LinearInterpolate (_gfbg ,_ceag [_dfabf *2],_ceag [_dfabf *2+1],0,1);
if _afbd =_bdce .WriteSample (uint32 (_fagb *_gegca ));_afbd !=nil {return img ,_afbd ;};};};return _dgef .AlternateSpace .ImageToRGB (_ebfdg (&_gcce ));};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetContentStreams returns the content stream as an array of strings.
func (_gbdbb *PdfPage )GetContentStreams ()([]string ,error ){_eegag :=_gbdbb .GetContentStreamObjs ();var _acfaa []string ;for _ ,_aafb :=range _eegag {_acbbg ,_ddcgb :=_efab (_aafb );if _ddcgb !=nil {return nil ,_ddcgb ;};_acfaa =append (_acfaa ,_acbbg );
};return _acfaa ,nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_deggf *PdfPageResources )HasColorspaceByName (keyName _adfb .PdfObjectName )bool {_fceec ,_egdfa :=_deggf .GetColorspaces ();if _egdfa !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_egdfa );
return false ;};if _fceec ==nil {return false ;};_ ,_gdbgd :=_fceec .Colorspaces [string (keyName )];return _gdbgd ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_fgdgc *LTV )EnableChain (chain []*_adf .Certificate )error {return _fgdgc .enable (nil ,chain ,"")};func (_fagcb *PdfReader )newPdfFieldSignatureFromDict (_edae *_adfb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_dbfaa :=&PdfFieldSignature {};
_dfdg ,_acafc :=_adfb .GetIndirect (_edae .Get ("\u0056"));if _acafc {var _fefg error ;_dbfaa .V ,_fefg =_fagcb .newPdfSignatureFromIndirect (_dfdg );if _fefg !=nil {return nil ,_fefg ;};};_dbfaa .Lock ,_ =_adfb .GetIndirect (_edae .Get ("\u004c\u006f\u0063\u006b"));
_dbfaa .SV ,_ =_adfb .GetIndirect (_edae .Get ("\u0053\u0056"));return _dbfaa ,nil ;};

// AddWatermarkImage adds a watermark to the page.
func (_bggac *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ffcfc ,_fgfea :=_bggac .GetMediaBox ();if _fgfea !=nil {return _fgfea ;};_abcgc :=_ffcfc .Urx -_ffcfc .Llx ;_gaaea :=_ffcfc .Ury -_ffcfc .Lly ;_dcab :=float64 (*ximg .Width );
_dbagg :=(_abcgc -_dcab )/2;if opt .FitToWidth {_dcab =_abcgc ;_dbagg =0;};_ccdbc :=_gaaea ;_gcdf :=float64 (0);if opt .PreserveAspectRatio {_ccdbc =_dcab *float64 (*ximg .Height )/float64 (*ximg .Width );_gcdf =(_gaaea -_ccdbc )/2;};if _bggac .Resources ==nil {_bggac .Resources =NewPdfPageResources ();
};_ggaec :=0;_beed :=_adfb .PdfObjectName (_ad .Sprintf ("\u0049\u006d\u0077%\u0064",_ggaec ));for _bggac .Resources .HasXObjectByName (_beed ){_ggaec ++;_beed =_adfb .PdfObjectName (_ad .Sprintf ("\u0049\u006d\u0077%\u0064",_ggaec ));};_fgfea =_bggac .AddImageResource (_beed ,ximg );
if _fgfea !=nil {return _fgfea ;};_ggaec =0;_cdfac :=_adfb .PdfObjectName (_ad .Sprintf ("\u0047\u0053\u0025\u0064",_ggaec ));for _bggac .HasExtGState (_cdfac ){_ggaec ++;_cdfac =_adfb .PdfObjectName (_ad .Sprintf ("\u0047\u0053\u0025\u0064",_ggaec ));
};_cegge :=_adfb .MakeDict ();_cegge .Set ("\u0042\u004d",_adfb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_cegge .Set ("\u0043\u0041",_adfb .MakeFloat (opt .Alpha ));_cegge .Set ("\u0063\u0061",_adfb .MakeFloat (opt .Alpha ));_fgfea =_bggac .AddExtGState (_cdfac ,_cegge );
if _fgfea !=nil {return _fgfea ;};_dfddg :=_ad .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_cdfac ,_dcab ,_ccdbc ,_dbagg ,_gcdf ,_beed );
_bggac .AddContentStreamByString (_dfddg );return nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _adfb .PdfObject ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_fc :=NewPdfAction ();_fa :=&PdfActionNamed {};_fa .PdfAction =_fc ;_fc .SetContext (_fa );return _fa ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_adabg *PdfWriter )SetNamedDestinations (dests _adfb .PdfObject )error {if dests ==nil {return nil ;};_bef .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_adabg ._bcdaf .Set ("\u0044\u0065\u0073t\u0073",dests );return _adabg .addObjects (dests );};

// ToInteger convert to an integer format.
func (_daed *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_fdfa :=_dc .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_fdfa *_daed .C ()),uint32 (_fdfa *_daed .M ()),uint32 (_fdfa *_daed .Y ()),uint32 (_fdfa *_daed .K ())};};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_dfbd *Image )SetSamples (samples []uint32 ){if _dfbd .BitsPerComponent < 8{samples =_dfbd .samplesAddPadding (samples );};_ddaff :=_fd .ResampleUint32 (samples ,int (_dfbd .BitsPerComponent ),8);_bgae :=make ([]byte ,len (_ddaff ));for _feabc ,_fddf :=range _ddaff {_bgae [_feabc ]=byte (_fddf );
};_dfbd .Data =_bgae ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_bdef *PdfField )ToPdfObject ()_adfb .PdfObject {_cacc :=_bdef ._dfgf ;_decfe :=_cacc .PdfObject .(*_adfb .PdfObjectDictionary );_edbdb :=_adfb .MakeArray ();for _ ,_abge :=range _bdef .Kids {_edbdb .Append (_abge .ToPdfObject ());};for _ ,_fgeag :=range _bdef .Annotations {if _fgeag ._ged !=_bdef ._dfgf {_edbdb .Append (_fgeag .GetContext ().ToPdfObject ());
};};if _bdef .Parent !=nil {_decfe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bdef .Parent .GetContainingPdfObject ());};if _edbdb .Len ()> 0{_decfe .Set ("\u004b\u0069\u0064\u0073",_edbdb );};_decfe .SetIfNotNil ("\u0046\u0054",_bdef .FT );
_decfe .SetIfNotNil ("\u0054",_bdef .T );_decfe .SetIfNotNil ("\u0054\u0055",_bdef .TU );_decfe .SetIfNotNil ("\u0054\u004d",_bdef .TM );_decfe .SetIfNotNil ("\u0046\u0066",_bdef .Ff );_decfe .SetIfNotNil ("\u0056",_bdef .V );_decfe .SetIfNotNil ("\u0044\u0056",_bdef .DV );
_decfe .SetIfNotNil ("\u0041\u0041",_bdef .AA );if _bdef .VariableText !=nil {_decfe .SetIfNotNil ("\u0044\u0041",_bdef .VariableText .DA );_decfe .SetIfNotNil ("\u0051",_bdef .VariableText .Q );_decfe .SetIfNotNil ("\u0044\u0053",_bdef .VariableText .DS );
_decfe .SetIfNotNil ("\u0052\u0056",_bdef .VariableText .RV );};return _cacc ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_abfdb *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _abfdb ._befdc .(*PdfShadingPattern );};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_ageb *PdfFieldText )ToPdfObject ()_adfb .PdfObject {_ageb .PdfField .ToPdfObject ();_eafcb :=_ageb ._dfgf ;_cbea :=_eafcb .PdfObject .(*_adfb .PdfObjectDictionary );_cbea .Set ("\u0046\u0054",_adfb .MakeName ("\u0054\u0078"));if _ageb .DA !=nil {_cbea .Set ("\u0044\u0041",_ageb .DA );
};if _ageb .Q !=nil {_cbea .Set ("\u0051",_ageb .Q );};if _ageb .DS !=nil {_cbea .Set ("\u0044\u0053",_ageb .DS );};if _ageb .RV !=nil {_cbea .Set ("\u0052\u0056",_ageb .RV );};if _ageb .MaxLen !=nil {_cbea .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_ageb .MaxLen );
};return _eafcb ;};

// ToPdfObject implements interface PdfModel.
func (_gfc *PdfAnnotationWidget )ToPdfObject ()_adfb .PdfObject {_gfc .PdfAnnotation .ToPdfObject ();_ebc :=_gfc ._ged ;_efgc :=_ebc .PdfObject .(*_adfb .PdfObjectDictionary );if _gfc ._bdc {return _ebc ;};_gfc ._bdc =true ;_efgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_efgc .SetIfNotNil ("\u0048",_gfc .H );_efgc .SetIfNotNil ("\u004d\u004b",_gfc .MK );_efgc .SetIfNotNil ("\u0041",_gfc .A );_efgc .SetIfNotNil ("\u0041\u0041",_gfc .AA );_efgc .SetIfNotNil ("\u0042\u0053",_gfc .BS );_gdfc :=_gfc .Parent ;if _gfc ._bbea !=nil {if _gfc ._bbea ._dfgf ==_gfc ._ged {_gfc ._bbea .ToPdfObject ();
};_gdfc =_gfc ._bbea .GetContainingPdfObject ();};if _gdfc !=_ebc {_efgc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdfc );};_gfc ._bdc =false ;return _ebc ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _adfb .PdfObject ;Dest _adfb .PdfObject ;H _adfb .PdfObject ;PA _adfb .PdfObject ;QuadPoints _adfb .PdfObject ;BS _adfb .PdfObject ;_add *PdfAction ;_gff *PdfReader ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_bfdc *PdfInfo )ToPdfObject ()_adfb .PdfObject {_gggc :=_adfb .MakeDict ();_gggc .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_bfdc .Title );_gggc .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_bfdc .Author );_gggc .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_bfdc .Subject );
_gggc .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bfdc .Keywords );_gggc .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_bfdc .Creator );_gggc .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bfdc .Producer );
_gggc .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_bfdc .Trapped );if _bfdc .CreationDate !=nil {_gggc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bfdc .CreationDate .ToPdfObject ());};if _bfdc .ModifiedDate !=nil {_gggc .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_bfdc .ModifiedDate .ToPdfObject ());
};for _ ,_dfcf :=range _bfdc ._cgdf .Keys (){_gggc .SetIfNotNil (_dfcf ,_bfdc ._cgdf .Get (_dfcf ));};return _gggc ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gdcf pdfFont };

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_aegc *PdfFieldButton )IsRadio ()bool {return _aegc .GetType ()==ButtonTypeRadio };

// ToPdfObject implements interface PdfModel.
func (_gacgg *PdfAnnotationScreen )ToPdfObject ()_adfb .PdfObject {_gacgg .PdfAnnotation .ToPdfObject ();_ega :=_gacgg ._ged ;_bfce :=_ega .PdfObject .(*_adfb .PdfObjectDictionary );_bfce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_bfce .SetIfNotNil ("\u0054",_gacgg .T );_bfce .SetIfNotNil ("\u004d\u004b",_gacgg .MK );_bfce .SetIfNotNil ("\u0041",_gacgg .A );_bfce .SetIfNotNil ("\u0041\u0041",_gacgg .AA );return _ega ;};

// ToPdfObject implements interface PdfModel.
func (_gcda *PdfAnnotationRichMedia )ToPdfObject ()_adfb .PdfObject {_gcda .PdfAnnotation .ToPdfObject ();_aba :=_gcda ._ged ;_daff :=_aba .PdfObject .(*_adfb .PdfObjectDictionary );_daff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_daff .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_gcda .RichMediaSettings );_daff .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_gcda .RichMediaContent );
return _aba ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_dfgf :_adfb .MakeIndirectObject (_adfb .MakeDict ())}};func _bffbc (_bdgc ,_gagd string )string {if _be .Contains (_bdgc ,"\u002b"){_cbbee :=_be .Split (_bdgc ,"\u002b");if len (_cbbee )==2{_bdgc =_cbbee [1];
};};return _gagd +"\u002b"+_bdgc ;};func (_bbbg *PdfAnnotationMarkup )appendToPdfDictionary (_gcafe *_adfb .PdfObjectDictionary ){_gcafe .SetIfNotNil ("\u0054",_bbbg .T );if _bbbg .Popup !=nil {_gcafe .Set ("\u0050\u006f\u0070u\u0070",_bbbg .Popup .ToPdfObject ());
};_gcafe .SetIfNotNil ("\u0043\u0041",_bbbg .CA );_gcafe .SetIfNotNil ("\u0052\u0043",_bbbg .RC );_gcafe .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bbbg .CreationDate );_gcafe .SetIfNotNil ("\u0049\u0052\u0054",_bbbg .IRT );
_gcafe .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bbbg .Subj );_gcafe .SetIfNotNil ("\u0052\u0054",_bbbg .RT );_gcafe .SetIfNotNil ("\u0049\u0054",_bbbg .IT );_gcafe .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bbbg .ExData );};func (_cagf *PdfReader )newPdfActionRenditionFromDict (_adb *_adfb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_adb .Get ("\u0052"),AN :_adb .Get ("\u0041\u004e"),OP :_adb .Get ("\u004f\u0050"),JS :_adb .Get ("\u004a\u0053")},nil ;
};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_beaaa ,_baggc :=_dggdf (basefont );if _baggc !=nil {return nil ,_baggc ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_beaaa ._ddabe =_ba .NewWinAnsiEncoder ();};return &PdfFont {_gdcf :&_beaaa },nil ;
};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _adfb .PdfObject ;Sy _adfb .PdfObject ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_fdff *PdfReader )GetCatalogStructTreeRoot ()(_adfb .PdfObject ,bool ){if _fdff ._egeag ==nil {return nil ,false ;};_gbfb :=_fdff ._egeag .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _gbfb ,_gbfb !=nil ;
};func (_agcc *PdfReader )newPdfAnnotationPolygonFromDict (_abff *_adfb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_eeee :=PdfAnnotationPolygon {};_dadb ,_dfde :=_agcc .newPdfAnnotationMarkupFromDict (_abff );if _dfde !=nil {return nil ,_dfde ;
};_eeee .PdfAnnotationMarkup =_dadb ;_eeee .Vertices =_abff .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_eeee .LE =_abff .Get ("\u004c\u0045");_eeee .BS =_abff .Get ("\u0042\u0053");_eeee .IC =_abff .Get ("\u0049\u0043");_eeee .BE =_abff .Get ("\u0042\u0045");
_eeee .IT =_abff .Get ("\u0049\u0054");_eeee .Measure =_abff .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_eeee ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// GetTrailer returns the PDF's trailer dictionary.
func (_edcgac *PdfReader )GetTrailer ()(*_adfb .PdfObjectDictionary ,error ){_ecageg :=_edcgac ._aeea .GetTrailer ();if _ecageg ==nil {return nil ,_cfe .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _ecageg ,nil ;
};func (_ggda *PdfPage )getParentResources ()(*PdfPageResources ,error ){_cabc :=_ggda .Parent ;for _cabc !=nil {_bcffg ,_dgcg :=_adfb .GetDict (_cabc );if !_dgcg {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _deeae :=_bcffg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_deeae !=nil {_debde ,_ccgca :=_adfb .GetDict (_deeae );
if !_ccgca {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_dfgb ,_cdce :=NewPdfPageResourcesFromDict (_debde );if _cdce !=nil {return nil ,_cdce ;};return _dfgb ,nil ;};
_cabc =_bcffg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// Fill populates `form` with values provided by `provider`.
func (_ecdbb *PdfAcroForm )Fill (provider FieldValueProvider )error {return _ecdbb .fill (provider ,nil )};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _adfb .PdfObject ;Name _adfb .PdfObject ;State _adfb .PdfObject ;StateModel _adfb .PdfObject ;};

// GetPerms returns the Permissions dictionary
func (_dfcceb *PdfReader )GetPerms ()*Permissions {return _dfcceb ._bfced };func (_ddcbc *PdfWriter )checkCrossReferenceStream ()bool {_bcgb :=_ddcbc ._dbbecb .Major > 1||(_ddcbc ._dbbecb .Major ==1&&_ddcbc ._dbbecb .Minor > 4);if _ddcbc ._eebgd !=nil {_bcgb =*_ddcbc ._eebgd ;
};return _bcgb ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _c .Time ){_gebbe .Lock ();defer _gebbe .Unlock ();_agfgg =creationDate ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _adfb .PdfObject ;IC _adfb .PdfObject ;RO _adfb .PdfObject ;OverlayText _adfb .PdfObject ;Repeat _adfb .PdfObject ;DA _adfb .PdfObject ;Q _adfb .PdfObject ;};

// SetContext set the sub annotation (context).
func (_dcge *PdfShading )SetContext (ctx PdfModel ){_dcge ._fcedf =ctx };func _aaeaa (_fefeb _adfb .PdfObject ,_ceged *PdfReader )(*OutlineDest ,error ){_dgaee ,_ageeb :=_adfb .GetArray (_fefeb );if !_ageeb {return nil ,_cfe .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_baggbe :=_dgaee .Len ();if _baggbe < 2{return nil ,_ad .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_baggbe );
};_ccae :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_eeagde :=_dgaee .Get (0);if _ccdba ,_cecdef :=_adfb .GetIndirect (_eeagde );_cecdef {if _ ,_ffgef ,_dbgdd :=_ceged .PageFromIndirectObject (_ccdba );_dbgdd ==nil {_ccae .Page =int64 (_ffgef -1);}else {_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ccdba );
};_ccae .PageObj =_ccdba ;}else if _aedde ,_bedca :=_adfb .GetIntVal (_eeagde );_bedca {if _aedde >=0&&_aedde < len (_ceged .PageList ){_ccae .PageObj =_ceged .PageList [_aedde ].GetPageAsIndirectObject ();}else {_bef .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_aedde );
};_ccae .Page =int64 (_aedde );}else {return nil ,_ad .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_eeagde );};_edbf ,_ageeb :=_adfb .GetNameVal (_dgaee .Get (1));
if !_ageeb {_bef .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_dgaee .Get (1));
return _ccae ,nil ;};switch _edbf {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _baggbe > 2{_ccae .Y ,_ =_adfb .GetNumberAsFloat (_adfb .TraceToDirectObject (_dgaee .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _baggbe > 2{_ccae .X ,_ =_adfb .GetNumberAsFloat (_adfb .TraceToDirectObject (_dgaee .Get (2)));
};case "\u0058\u0059\u005a":if _baggbe > 4{_ccae .X ,_ =_adfb .GetNumberAsFloat (_adfb .TraceToDirectObject (_dgaee .Get (2)));_ccae .Y ,_ =_adfb .GetNumberAsFloat (_adfb .TraceToDirectObject (_dgaee .Get (3)));_ccae .Zoom ,_ =_adfb .GetNumberAsFloat (_adfb .TraceToDirectObject (_dgaee .Get (4)));
};default:_edbf ="\u0046\u0069\u0074";};_ccae .Mode =_edbf ;return _ccae ,nil ;};var _ebed =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_gebbe .Lock ();defer _gebbe .Unlock ();_bafef =subject };func (_caabcg *LTV )validateSig (_cccbf *PdfSignature )error {if _cccbf ==nil ||_cccbf .Contents ==nil ||len (_cccbf .Contents .Bytes ())==0{return _ad .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_cccbf );
};return nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);
FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);
FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_adfbb *PdfField )FullName ()(string ,error ){var _dfac _ae .Buffer ;_cdca :=[]string {};if _adfbb .T !=nil {_cdca =append (_cdca ,_adfbb .T .Decoded ());};_gcca :=map[*PdfField ]bool {};_gcca [_adfbb ]=true ;_adcd :=_adfbb .Parent ;for _adcd !=nil {if _ ,_adfea :=_gcca [_adcd ];
_adfea {return _dfac .String (),_cfe .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _adcd .T ==nil {return _dfac .String (),_cfe .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_cdca =append (_cdca ,_adcd .T .Decoded ());_gcca [_adcd ]=true ;_adcd =_adcd .Parent ;};for _acdee :=len (_cdca )-1;_acdee >=0;_acdee --{_dfac .WriteString (_cdca [_acdee ]);if _acdee > 0{_dfac .WriteString ("\u002e");};};return _dfac .String (),nil ;
};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_feae *PdfAcroForm )ToPdfObject ()_adfb .PdfObject {_cedfc :=_feae ._geacd ;_gbcg :=_cedfc .PdfObject .(*_adfb .PdfObjectDictionary );if _feae .Fields !=nil {_ffgdc :=_adfb .PdfObjectArray {};for _ ,_eggfg :=range *_feae .Fields {_edca :=_eggfg .GetContext ();
if _edca !=nil {_ffgdc .Append (_edca .ToPdfObject ());}else {_ffgdc .Append (_eggfg .ToPdfObject ());};};_gbcg .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_ffgdc );};if _feae .NeedAppearances !=nil {_gbcg .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_feae .NeedAppearances );
};if _feae .SigFlags !=nil {_gbcg .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_feae .SigFlags );};if _feae .CO !=nil {_gbcg .Set ("\u0043\u004f",_feae .CO );};if _feae .DR !=nil {_gbcg .Set ("\u0044\u0052",_feae .DR .ToPdfObject ());};if _feae .DA !=nil {_gbcg .Set ("\u0044\u0041",_feae .DA );
};if _feae .Q !=nil {_gbcg .Set ("\u0051",_feae .Q );};if _feae .XFA !=nil {_gbcg .Set ("\u0058\u0046\u0041",_feae .XFA );};return _cedfc ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;func _bccfa (_caccc *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_caccc }};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_bdab *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _bdab .flattenFieldsWithOpts (false ,appgen ,opts );};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_ffbac *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ffbac .Alternate ==nil {_bef .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ffbac .N ==1{_bef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cabb :=NewPdfColorspaceDeviceGray ();return _cabb .ColorToRGB (color );}else if _ffbac .N ==3{_bef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _ffbac .N ==4{_bef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cfaa :=NewPdfColorspaceDeviceCMYK ();return _cfaa .ColorToRGB (color );}else {return nil ,_cfe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_bef .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ffbac );
return _ffbac .Alternate .ColorToRGB (color );};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_cbgb *PdfFont )ToPdfObject ()_adfb .PdfObject {if _cbgb ._gdcf ==nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _adfb .MakeNull ();
};return _cbgb ._gdcf .ToPdfObject ();};type fontCommon struct{_gbed string ;_bbbdc string ;_abdd string ;_cfagb _adfb .PdfObject ;_gdgf *_bfa .CMap ;_ebcbf *PdfFontDescriptor ;_cddcc int64 ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_gag :=NewPdfAnnotation ();_bebf :=&PdfAnnotationTrapNet {};_bebf .PdfAnnotation =_gag ;_gag .SetContext (_bebf );return _bebf ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_fegcf *_adfb .PdfIndirectObject ;};func _bfffe (_adda *_adfb .PdfIndirectObject )(*PdfOutline ,error ){_ccfgb ,_bbfeb :=_adda .PdfObject .(*_adfb .PdfObjectDictionary );
if !_bbfeb {return nil ,_ad .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cdbde :=NewPdfOutline ();if _dfbeg :=_ccfgb .Get ("\u0054\u0079\u0070\u0065");
_dfbeg !=nil {_gbecc ,_bbgcc :=_dfbeg .(*_adfb .PdfObjectName );if _bbgcc {if *_gbecc !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gbecc );
};};};if _bdabd :=_ccfgb .Get ("\u0043\u006f\u0075n\u0074");_bdabd !=nil {_egbcc ,_bgcec :=_adfb .GetNumberAsInt64 (_bdabd );if _bgcec !=nil {return nil ,_bgcec ;};_cdbde .Count =&_egbcc ;};return _cdbde ,nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_bgbg :=NewPdfAnnotation ();_edb :=&PdfAnnotationInk {};_edb .PdfAnnotation =_bgbg ;_edb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgbg .SetContext (_edb );return _edb ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _adfb .PdfObject ;T3DV _adfb .PdfObject ;T3DA _adfb .PdfObject ;T3DI _adfb .PdfObject ;T3DB _adfb .PdfObject ;};func (_becf *PdfWriter )writeBytes (_fgdga []byte ){if _becf ._aabaf !=nil {return ;};_fdgcc ,_fbbbafd :=_becf ._ebbda .Write (_fgdga );
_becf ._dgbga +=int64 (_fdgcc );_becf ._aabaf =_fbbbafd ;};func (_bdgb *PdfReader )newPdfActionMovieFromDict (_aac *_adfb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_aac .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_aac .Get ("\u0054"),Operation :_aac .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_bebc *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _ggefg []float64 ;for _eeac :=0;_eeac < _bebc .GetNumComponents ();_eeac ++{_ggefg =append (_ggefg ,0.0,1.0);};return _ggefg ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _adfb .PdfObject ;NewWindow _adfb .PdfObject ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _adfb .PdfObject ;T _adfb .PdfObject ;Operation _adfb .PdfObject ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fecf :=&PdfColorspaceSpecialSeparation {};return _fecf ;};func (_bccef *PdfWriter )adjustXRefAffectedVersion (_bdfef bool ){if _bdfef &&_bccef ._dbbecb .Major ==1&&_bccef ._dbbecb .Minor < 5{_bccef ._dbbecb .Minor =5;
};};

// SetContext sets the sub action (context).
func (_bfc *PdfAction )SetContext (ctx PdfModel ){_bfc ._beg =ctx };

// ToPdfObject implements interface PdfModel.
func (_bfgd *PdfAnnotationFileAttachment )ToPdfObject ()_adfb .PdfObject {_bfgd .PdfAnnotation .ToPdfObject ();_aagf :=_bfgd ._ged ;_ccb :=_aagf .PdfObject .(*_adfb .PdfObjectDictionary );_bfgd .PdfAnnotationMarkup .appendToPdfDictionary (_ccb );_ccb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_ccb .SetIfNotNil ("\u0046\u0053",_bfgd .FS );_ccb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bfgd .Name );return _aagf ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_aacbe :=&PdfPageResources {};_aacbe ._bccfgb =_adfb .MakeDict ();return _aacbe ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_geegf *PdfPageResources )AddExtGState (gsName _adfb .PdfObjectName ,gsDict _adfb .PdfObject )error {if _geegf .ExtGState ==nil {_geegf .ExtGState =_adfb .MakeDict ();};_bcbbe :=_geegf .ExtGState ;_aagce ,_accca :=_adfb .TraceToDirectObject (_bcbbe ).(*_adfb .PdfObjectDictionary );
if !_accca {_bef .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_bcbbe ,_adfb .TraceToDirectObject (_bcbbe ));
return _adfb .ErrTypeError ;};_aagce .Set (gsName ,gsDict );return nil ;};func (_bgce *DSS )add (_eba *[]*_adfb .PdfObjectStream ,_faaa map[string ]*_adfb .PdfObjectStream ,_ecgf [][]byte )([]*_adfb .PdfObjectStream ,error ){_cdee :=make ([]*_adfb .PdfObjectStream ,0,len (_ecgf ));
for _ ,_aebde :=range _ecgf {_fbge ,_aebe :=_ecdgb (_aebde );if _aebe !=nil {return nil ,_aebe ;};_bcgf ,_ecdf :=_faaa [string (_fbge )];if !_ecdf {_bcgf ,_aebe =_adfb .MakeStream (_aebde ,_adfb .NewRawEncoder ());if _aebe !=nil {return nil ,_aebe ;};_faaa [string (_fbge )]=_bcgf ;
*_eba =append (*_eba ,_bcgf );};_cdee =append (_cdee ,_bcgf );};return _cdee ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_adbgd *PdfShadingType2 )ToPdfObject ()_adfb .PdfObject {_adbgd .PdfShading .ToPdfObject ();_bcdb ,_fagbg :=_adbgd .getShadingDict ();if _fagbg !=nil {_bef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bcdb ==nil {_bef .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _adbgd .Coords !=nil {_bcdb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_adbgd .Coords );
};if _adbgd .Domain !=nil {_bcdb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_adbgd .Domain );};if _adbgd .Function !=nil {if len (_adbgd .Function )==1{_bcdb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adbgd .Function [0].ToPdfObject ());
}else {_gbabd :=_adfb .MakeArray ();for _ ,_dfdfa :=range _adbgd .Function {_gbabd .Append (_dfdfa .ToPdfObject ());};_bcdb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbabd );};};if _adbgd .Extend !=nil {_bcdb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_adbgd .Extend );
};return _adbgd ._egbfe ;};func (_bfec *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_beefe *PdfReader )newPdfAnnotationProjectionFromDict (_bfbc *_adfb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_ddg :=&PdfAnnotationProjection {};
_afdde ,_cfc :=_beefe .newPdfAnnotationMarkupFromDict (_bfbc );if _cfc !=nil {return nil ,_cfc ;};_ddg .PdfAnnotationMarkup =_afdde ;return _ddg ,nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_caabcf int ,_gecca *PdfPage );

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_cdfg :=&PdfColorspaceDeviceN {};return _cdfg };

// ToPdfObject implements interface PdfModel.
func (_dcbe *PdfActionMovie )ToPdfObject ()_adfb .PdfObject {_dcbe .PdfAction .ToPdfObject ();_dfd :=_dcbe ._ca ;_fgg :=_dfd .PdfObject .(*_adfb .PdfObjectDictionary );_fgg .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeMovie )));_fgg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_dcbe .Annotation );
_fgg .SetIfNotNil ("\u0054",_dcbe .T );_fgg .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_dcbe .Operation );return _dfd ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_adfb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _adfb .PdfObject ;A _adfb .PdfObject ;SE _adfb .PdfObject ;C _adfb .PdfObject ;
F _adfb .PdfObject ;_baeee *_adfb .PdfIndirectObject ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_aaca *OutlineItem )ToPdfObject ()_adfb .PdfObject {_daebc ,_ :=_aaca .ToPdfOutlineItem ();return _daebc .ToPdfObject ();};func _bdabb ()string {_gebbe .Lock ();defer _gebbe .Unlock ();return _cbag };func (_gfeb *PdfAppender )addNewObject (_abac _adfb .PdfObject ){if _ ,_fcgc :=_gfeb ._gaf [_abac ];
!_fcgc {_gfeb ._bfd =append (_gfeb ._bfd ,_abac );_gfeb ._gaf [_abac ]=struct{}{};};};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_cdcab *PdfWriter )setCatalogVersion (){_cdcab ._bcdaf .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_adfb .MakeName (_ad .Sprintf ("\u0025\u0064\u002e%\u0064",_cdcab ._dbbecb .Major ,_cdcab ._dbbecb .Minor )));};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_fdcdf *PdfReader )GetObjectNums ()[]int {return _fdcdf ._aeea .GetObjectNums ()};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_fgab *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_eggab :=NewPdfOutlineItem ();_eggab .Title =_adfb .MakeEncodedString (_fgab .Title ,true );_eggab .Dest =_fgab .Dest .ToPdfObject ();var _fdage []*PdfOutlineItem ;var _bceg int64 ;
var _gdccc *PdfOutlineItem ;for _ ,_adaec :=range _fgab .Entries {_fbcc ,_fdeda :=_adaec .ToPdfOutlineItem ();_fbcc .Parent =&_eggab .PdfOutlineTreeNode ;if _gdccc !=nil {_gdccc .Next =&_fbcc .PdfOutlineTreeNode ;_fbcc .Prev =&_gdccc .PdfOutlineTreeNode ;
};_fdage =append (_fdage ,_fbcc );_bceg +=_fdeda ;_gdccc =_fbcc ;};_fcgf :=len (_fdage );_bceg +=int64 (_fcgf );if _fcgf > 0{_eggab .First =&_fdage [0].PdfOutlineTreeNode ;_eggab .Last =&_fdage [_fcgf -1].PdfOutlineTreeNode ;_eggab .Count =&_bceg ;};return _eggab ,_bceg ;
};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_caad _adfb .ParserMetadata ;};func _bfbg (_cefd _adfb .PdfObject )(*PdfPattern ,error ){_bfcaf :=&PdfPattern {};var _aaded *_adfb .PdfObjectDictionary ;if _feddg ,_fgfee :=_adfb .GetIndirect (_cefd );_fgfee {_bfcaf ._fcgcb =_feddg ;
_cfga ,_agce :=_feddg .PdfObject .(*_adfb .PdfObjectDictionary );if !_agce {_bef .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_feddg .PdfObject );
return nil ,_adfb .ErrTypeError ;};_aaded =_cfga ;}else if _bbafd ,_caccd :=_adfb .GetStream (_cefd );_caccd {_bfcaf ._fcgcb =_bbafd ;_aaded =_bbafd .PdfObjectDictionary ;}else {_bef .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_cefd );
return nil ,_adfb .ErrTypeError ;};_ebaf :=_aaded .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _ebaf ==nil {_bef .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_daabb ,_abbba :=_ebaf .(*_adfb .PdfObjectInteger );if !_abbba {_bef .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ebaf );
return nil ,_adfb .ErrTypeError ;};if *_daabb !=1&&*_daabb !=2{_bef .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_daabb );return nil ,_adfb .ErrRangeError ;
};_bfcaf .PatternType =int64 (*_daabb );switch *_daabb {case 1:_baace ,_ebcbfc :=_feed (_aaded );if _ebcbfc !=nil {return nil ,_ebcbfc ;};_baace .PdfPattern =_bfcaf ;_bfcaf ._befdc =_baace ;return _bfcaf ,nil ;case 2:_dcfe ,_dabd :=_agcdd (_aaded );if _dabd !=nil {return nil ,_dabd ;
};_dcfe .PdfPattern =_bfcaf ;_bfcaf ._befdc =_dcfe ;return _bfcaf ,nil ;};return nil ,_cfe .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ecfda *PdfPageResources )GetXObjectImageByName (keyName _adfb .PdfObjectName )(*XObjectImage ,error ){_ababaa ,_fcfg :=_ecfda .GetXObjectByName (keyName );if _ababaa ==nil {return nil ,nil ;};if _fcfg !=XObjectTypeImage {return nil ,_cfe .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_gfabge ,_ecgbaa :=NewXObjectImageFromStream (_ababaa );if _ecgbaa !=nil {return nil ,_ecgbaa ;};return _gfabge ,nil ;};func (_efbee *XObjectImage )getParamsDict ()*_adfb .PdfObjectDictionary {_bagfd :=_adfb .MakeDict ();_bagfd .Set ("\u0057\u0069\u0064t\u0068",_adfb .MakeInteger (*_efbee .Width ));
_bagfd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_adfb .MakeInteger (*_efbee .Height ));_bagfd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_adfb .MakeInteger (int64 (_efbee .ColorSpace .GetNumComponents ())));
_bagfd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_adfb .MakeInteger (*_efbee .BitsPerComponent ));return _bagfd ;};type modelManager struct{_cbeca map[PdfModel ]_adfb .PdfObject ;_bccgd map[_adfb .PdfObject ]PdfModel ;
};func _adgf (_ggcb _adfb .PdfObject )(*PdfFunctionType3 ,error ){_dagga :=&PdfFunctionType3 {};var _geagc *_adfb .PdfObjectDictionary ;if _afee ,_acbe :=_ggcb .(*_adfb .PdfIndirectObject );_acbe {_agaaf ,_daebg :=_afee .PdfObject .(*_adfb .PdfObjectDictionary );
if !_daebg {return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dagga ._edbaf =_afee ;_geagc =_agaaf ;}else if _bafa ,_bgceg :=_ggcb .(*_adfb .PdfObjectDictionary );_bgceg {_geagc =_bafa ;
}else {return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adddg ,_ecage :=_adfb .TraceToDirectObject (_geagc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_adfb .PdfObjectArray );if !_ecage {_bef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _adddg .Len ()!=2{_bef .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fggg ,_bfbae :=_adddg .ToFloat64Array ();if _bfbae !=nil {return nil ,_bfbae ;};_dagga .Domain =_fggg ;_adddg ,_ecage =_adfb .TraceToDirectObject (_geagc .Get ("\u0052\u0061\u006eg\u0065")).(*_adfb .PdfObjectArray );
if _ecage {if _adddg .Len ()< 0||_adddg .Len ()%2!=0{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_adeg ,_cfda :=_adddg .ToFloat64Array ();if _cfda !=nil {return nil ,_cfda ;};_dagga .Range =_adeg ;
};_adddg ,_ecage =_adfb .TraceToDirectObject (_geagc .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_adfb .PdfObjectArray );if !_ecage {_bef .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dagga .Functions =[]PdfFunction {};
for _ ,_cabae :=range _adddg .Elements (){_fedd ,_cggc :=_ebba (_cabae );if _cggc !=nil {return nil ,_cggc ;};_dagga .Functions =append (_dagga .Functions ,_fedd );};_adddg ,_ecage =_adfb .TraceToDirectObject (_geagc .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_adfb .PdfObjectArray );
if !_ecage {_bef .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_ggbabb ,_bfbae :=_adddg .ToFloat64Array ();if _bfbae !=nil {return nil ,_bfbae ;};_dagga .Bounds =_ggbabb ;if len (_dagga .Bounds )!=len (_dagga .Functions )-1{_bef .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_dagga .Bounds ),len (_dagga .Functions ));
return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adddg ,_ecage =_adfb .TraceToDirectObject (_geagc .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_adfb .PdfObjectArray );if !_ecage {_bef .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ccfgf ,_bfbae :=_adddg .ToFloat64Array ();
if _bfbae !=nil {return nil ,_bfbae ;};_dagga .Encode =_ccfgf ;if len (_dagga .Encode )!=2*len (_dagga .Functions ){_bef .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_dagga .Encode ),len (_dagga .Functions ));
return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _dagga ,nil ;};func (_gbfe *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// ToPdfObject implements interface PdfModel.
func (_dggce *Permissions )ToPdfObject ()_adfb .PdfObject {return _dggce ._dbdcc };

// GetPage returns the PdfPage model for the specified page number.
func (_adaeg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _adaeg ._aeea .GetCrypter ()!=nil &&!_adaeg ._aeea .IsAuthenticated (){return nil ,_ad .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_adaeg ._fccad )< pageNumber {return nil ,_cfe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_face :=pageNumber -1;if _face < 0{return nil ,_ad .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_fecfe :=_adaeg .PageList [_face ];
return _fecfe ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_babbf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_babbf ._dcegf =colorspace ;};func (_eeba *DSS )addOCSPs (_acee [][]byte )([]*_adfb .PdfObjectStream ,error ){return _eeba .add (&_eeba .OCSPs ,_eeba ._defe ,_acee );
};func (_dgacf *PdfReader )traverseObjectData (_gggd _adfb .PdfObject )error {return _adfb .ResolveReferencesDeep (_gggd ,_dgacf ._aegfa );};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_bdag *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )!=_bdag .GetNumComponents (){return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gege ,_adeec :=_adfb .GetNumbersAsFloat (objects );
if _adeec !=nil {return nil ,_adeec ;};return _bdag .ColorFromFloats (_gege );};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_caaf :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_caaf ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_dgddb *PdfPattern )GetContext ()PdfModel {return _dgddb ._befdc };

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_eeaa *PdfWriter )SetPageLabels (pageLabels _adfb .PdfObject )error {if pageLabels ==nil {return nil ;};_bef .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_eeaa ._bcdaf .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _eeaa .addObjects (pageLabels );};

// GetOptimizer returns current PDF optimizer.
func (_caedf *PdfWriter )GetOptimizer ()Optimizer {return _caedf ._fbfc };

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_eeabe *PdfOutlineItem )GetContainingPdfObject ()_adfb .PdfObject {return _eeabe ._baeee };

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_adfb .PdfObject ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_egag *Image )AlphaMap (mapFunc AlphaMapFunc ){for _abedf ,_feee :=range _egag ._befaf {_egag ._befaf [_abedf ]=mapFunc (_feee );};};

// ToPdfObject implements interface PdfModel.
func (_dcfa *PdfAnnotationRedact )ToPdfObject ()_adfb .PdfObject {_dcfa .PdfAnnotation .ToPdfObject ();_abee :=_dcfa ._ged ;_adac :=_abee .PdfObject .(*_adfb .PdfObjectDictionary );_dcfa .PdfAnnotationMarkup .appendToPdfDictionary (_adac );_adac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_adac .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dcfa .QuadPoints );_adac .SetIfNotNil ("\u0049\u0043",_dcfa .IC );_adac .SetIfNotNil ("\u0052\u004f",_dcfa .RO );_adac .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_dcfa .OverlayText );
_adac .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dcfa .Repeat );_adac .SetIfNotNil ("\u0044\u0041",_dcfa .DA );_adac .SetIfNotNil ("\u0051",_dcfa .Q );return _abee ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_bfff *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_bfff .HiVal )};};

// AddExtGState adds a graphics state to the XObject resources.
func (_gbacc *PdfPage )AddExtGState (name _adfb .PdfObjectName ,egs *_adfb .PdfObjectDictionary )error {if _gbacc .Resources ==nil {_gbacc .Resources =NewPdfPageResources ();};if _gbacc .Resources .ExtGState ==nil {_gbacc .Resources .ExtGState =_adfb .MakeDict ();
};_fdca ,_eccceg :=_adfb .TraceToDirectObject (_gbacc .Resources .ExtGState ).(*_adfb .PdfObjectDictionary );if !_eccceg {_bef .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_adfb .TraceToDirectObject (_gbacc .Resources .ExtGState ));
return _cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fdca .Set (name ,egs );return nil ;};func (_gfdb fontCommon )coreString ()string {_bdbbb :="";if _gfdb ._ebcbf !=nil {_bdbbb =_gfdb ._ebcbf .String ();
};return _ad .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_gfdb ._bbbdc ,_gfdb ._gbed ,_gfdb ._abdd ,_gfdb ._cddcc ,_gfdb ._cfagb !=nil ,_gfdb .fontFlags (),_bdbbb );
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bcgad *PdfColorspaceSpecialPattern )ToPdfObject ()_adfb .PdfObject {if _bcgad .UnderlyingCS ==nil {return _adfb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_eedd :=_adfb .MakeArray (_adfb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_eedd .Append (_bcgad .UnderlyingCS .ToPdfObject ());if _bcgad ._aeee !=nil {_bcgad ._aeee .PdfObject =_eedd ;return _bcgad ._aeee ;};return _eedd ;};

// Encoder returns the font's text encoder.
func (_aabd pdfCIDFontType0 )Encoder ()_ba .TextEncoder {return _aabd ._cbeb };

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_dcdb :=NewPdfAnnotation ();_ecf :=&PdfAnnotationProjection {};_ecf .PdfAnnotation =_dcdb ;_ecf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcdb .SetContext (_ecf );return _ecf ;};func _cfae (_dbdcb []byte )[]byte {const _cbca =52845;
const _fcee =22719;_cdfdc :=55665;for _ ,_aecac :=range _dbdcb [:4]{_cdfdc =(int (_aecac )+_cdfdc )*_cbca +_fcee ;};_aeaaa :=make ([]byte ,len (_dbdcb )-4);for _fcdcg ,_fegf :=range _dbdcb [4:]{_aeaaa [_fcdcg ]=byte (int (_fegf )^_cdfdc >>8);_cdfdc =(int (_fegf )+_cdfdc )*_cbca +_fcee ;
};return _aeaaa ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// B returns the value of the B component of the color.
func (_gaee *PdfColorCalRGB )B ()float64 {return _gaee [1]};var ImageHandling ImageHandler =DefaultImageHandler {};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};func (_fced *PdfReader )newPdfAnnotationUnderlineFromDict (_cdac *_adfb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_abb :=PdfAnnotationUnderline {};_caaa ,_cee :=_fced .newPdfAnnotationMarkupFromDict (_cdac );
if _cee !=nil {return nil ,_cee ;};_abb .PdfAnnotationMarkup =_caaa ;_abb .QuadPoints =_cdac .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_abb ,nil ;};type pdfFontSimple struct{fontCommon ;_dbbeb *_adfb .PdfIndirectObject ;
_babf map[_ba .CharCode ]float64 ;_ddabe _ba .TextEncoder ;_dcef _ba .TextEncoder ;_aded *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _adfb .PdfObject ;LastChar _adfb .PdfObject ;Widths _adfb .PdfObject ;Encoding _adfb .PdfObject ;_gcbae *_ga .RuneCharSafeMap ;};func _ecea (_dbef _adfb .PdfObject )(*PdfColorspaceCalGray ,error ){_fgad :=NewPdfColorspaceCalGray ();if _cbgcb ,_gad :=_dbef .(*_adfb .PdfIndirectObject );
_gad {_fgad ._aagc =_cbgcb ;};_dbef =_adfb .TraceToDirectObject (_dbef );_bbdc ,_dbdcg :=_dbef .(*_adfb .PdfObjectArray );if !_dbdcg {return nil ,_ad .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbdc .Len ()!=2{return nil ,_ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_dbef =_adfb .TraceToDirectObject (_bbdc .Get (0));_ebcc ,_dbdcg :=_dbef .(*_adfb .PdfObjectName );if !_dbdcg {return nil ,_ad .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ebcc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_ad .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_dbef =_adfb .TraceToDirectObject (_bbdc .Get (1));
_befa ,_dbdcg :=_dbef .(*_adfb .PdfObjectDictionary );if !_dbdcg {return nil ,_ad .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_dbef =_befa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_dbef =_adfb .TraceToDirectObject (_dbef );_cedaf ,_dbdcg :=_dbef .(*_adfb .PdfObjectArray );if !_dbdcg {return nil ,_ad .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _cedaf .Len ()!=3{return nil ,_ad .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fcad ,_gaeb :=_cedaf .GetAsFloat64Slice ();
if _gaeb !=nil {return nil ,_gaeb ;};_fgad .WhitePoint =_fcad ;_dbef =_befa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dbef !=nil {_dbef =_adfb .TraceToDirectObject (_dbef );_afeb ,_bacc :=_dbef .(*_adfb .PdfObjectArray );
if !_bacc {return nil ,_ad .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _afeb .Len ()!=3{return nil ,_ad .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_afecee ,_adcb :=_afeb .GetAsFloat64Slice ();if _adcb !=nil {return nil ,_adcb ;};_fgad .BlackPoint =_afecee ;};_dbef =_befa .Get ("\u0047\u0061\u006dm\u0061");if _dbef !=nil {_dbef =_adfb .TraceToDirectObject (_dbef );_gaaec ,_ecbcb :=_adfb .GetNumberAsFloat (_dbef );
if _ecbcb !=nil {return nil ,_ad .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_fgad .Gamma =_gaaec ;};return _fgad ,nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_facae *PdfPattern )ToPdfObject ()_adfb .PdfObject {_bebeb :=_facae .getDict ();_bebeb .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bebeb .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_adfb .MakeInteger (_facae .PatternType ));
return _facae ._fcgcb ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_gffbb *XObjectImage )SetFilter (encoder _adfb .StreamEncoder )error {_feef :=_gffbb .Stream ;_fcgab ,_cacbd :=_gffbb .Filter .DecodeBytes (_feef );if _cacbd !=nil {return _cacbd ;};_gffbb .Filter =encoder ;encoder .UpdateParams (_gffbb .getParamsDict ());
_feef ,_cacbd =encoder .EncodeBytes (_fcgab );if _cacbd !=nil {return _cacbd ;};_gffbb .Stream =_feef ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fee *PdfAnnotationSquiggly )ToPdfObject ()_adfb .PdfObject {_fee .PdfAnnotation .ToPdfObject ();_gffa :=_fee ._ged ;_ddad :=_gffa .PdfObject .(*_adfb .PdfObjectDictionary );_fee .PdfAnnotationMarkup .appendToPdfDictionary (_ddad );_ddad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_ddad .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fee .QuadPoints );return _gffa ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_acf PdfModel ;Rect _adfb .PdfObject ;Contents _adfb .PdfObject ;P _adfb .PdfObject ;NM _adfb .PdfObject ;M _adfb .PdfObject ;F _adfb .PdfObject ;AP _adfb .PdfObject ;AS _adfb .PdfObject ;Border _adfb .PdfObject ;C _adfb .PdfObject ;
StructParent _adfb .PdfObject ;OC _adfb .PdfObject ;_ged *_adfb .PdfIndirectObject ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ggbd *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_cfe .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_dgaca ,_ffed :=_afe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._befaf ,img ._cdcd );if _ffed !=nil {return img ,_ffed ;};_aceb ,_ffed :=_afe .GrayConverter .Convert (_dgaca );if _ffed !=nil {return img ,_ffed ;
};return _ebfdg (_aceb .Base ()),nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";
ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_gcffb int ,_ecbcg *PdfPage )error ;func _ggdef (_bdfc *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_bdfc }};func (_ecded *PdfReader )newPdfAnnotationSquigglyFromDict (_ggde *_adfb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_cdf :=PdfAnnotationSquiggly {};
_eca ,_cead :=_ecded .newPdfAnnotationMarkupFromDict (_ggde );if _cead !=nil {return nil ,_cead ;};_cdf .PdfAnnotationMarkup =_eca ;_cdf .QuadPoints =_ggde .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cdf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfcc *PdfAnnotationCaret )ToPdfObject ()_adfb .PdfObject {_dfcc .PdfAnnotation .ToPdfObject ();_beaa :=_dfcc ._ged ;_dcdeb :=_beaa .PdfObject .(*_adfb .PdfObjectDictionary );_dfcc .PdfAnnotationMarkup .appendToPdfDictionary (_dcdeb );_dcdeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0043\u0061\u0072e\u0074"));
_dcdeb .SetIfNotNil ("\u0052\u0044",_dfcc .RD );_dcdeb .SetIfNotNil ("\u0053\u0079",_dfcc .Sy );return _beaa ;};func (_bedcf *PdfReader )newPdfPageFromDict (_gdbcg *_adfb .PdfObjectDictionary )(*PdfPage ,error ){_fbgfb :=NewPdfPage ();_fbgfb ._bdabg =_gdbcg ;
_dbdac :=*_gdbcg ;_deeeg ,_ecegc :=_dbdac .Get ("\u0054\u0079\u0070\u0065").(*_adfb .PdfObjectName );if !_ecegc {return nil ,_cfe .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_deeeg !="\u0050\u0061\u0067\u0065"{return nil ,_cfe .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _fbgcf :=_dbdac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_fbgcf !=nil {_fbgfb .Parent =_fbgcf ;};if _ddaa :=_dbdac .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_ddaa !=nil {_bbaf ,_ggggd :=_adfb .GetString (_ddaa );if !_ggggd {return nil ,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_bdgg ,_gfcb :=NewPdfDate (_bbaf .Str ());if _gfcb !=nil {return nil ,_gfcb ;};_fbgfb .LastModified =&_bdgg ;};if _aefc :=_dbdac .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_aefc !=nil &&!_adfb .IsNullObject (_aefc ){_fedae ,_acadg :=_adfb .GetDict (_aefc );
if !_acadg {return nil ,_ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aefc );};var _daba error ;_fbgfb .Resources ,_daba =NewPdfPageResourcesFromDict (_fedae );
if _daba !=nil {return nil ,_daba ;};}else {_fdeag ,_cbgd :=_fbgfb .getParentResources ();if _cbgd !=nil {return nil ,_cbgd ;};if _fdeag ==nil {_fdeag =NewPdfPageResources ();};_fbgfb .Resources =_fdeag ;};if _ececf :=_dbdac .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_ececf !=nil {_bdgd ,_bgbc :=_adfb .GetArray (_ececf );if !_bgbc {return nil ,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _acege error ;
_fbgfb .MediaBox ,_acege =NewPdfRectangle (*_bdgd );if _acege !=nil {return nil ,_acege ;};};if _fdeeb :=_dbdac .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fdeeb !=nil {_accgd ,_geccf :=_adfb .GetArray (_fdeeb );if !_geccf {return nil ,_cfe .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ccfad error ;_fbgfb .CropBox ,_ccfad =NewPdfRectangle (*_accgd );if _ccfad !=nil {return nil ,_ccfad ;};};if _dcegd :=_dbdac .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dcegd !=nil {_aagac ,_eggffe :=_adfb .GetArray (_dcegd );if !_eggffe {return nil ,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _fcfc error ;_fbgfb .BleedBox ,_fcfc =NewPdfRectangle (*_aagac );if _fcfc !=nil {return nil ,_fcfc ;};};if _edce :=_dbdac .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_edce !=nil {_abcfd ,_cbffb :=_adfb .GetArray (_edce );if !_cbffb {return nil ,_cfe .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _dadbg error ;_fbgfb .TrimBox ,_dadbg =NewPdfRectangle (*_abcfd );if _dadbg !=nil {return nil ,_dadbg ;};};if _aadea :=_dbdac .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_aadea !=nil {_cdgdd ,_fbag :=_adfb .GetArray (_aadea );if !_fbag {return nil ,_cfe .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _affda error ;_fbgfb .ArtBox ,_affda =NewPdfRectangle (*_cdgdd );if _affda !=nil {return nil ,_affda ;};};if _dgecc :=_dbdac .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_dgecc !=nil {_fbgfb .BoxColorInfo =_dgecc ;
};if _gcbad :=_dbdac .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gcbad !=nil {_fbgfb .Contents =_gcbad ;};if _efcfa :=_dbdac .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_efcfa !=nil {_gfabc ,_fbafe :=_adfb .GetNumberAsInt64 (_efcfa );if _fbafe !=nil {return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fbgfb .Rotate =&_gfabc ;};if _geacg :=_dbdac .Get ("\u0047\u0072\u006fu\u0070");_geacg !=nil {_fbgfb .Group =_geacg ;};if _ccaccb :=_dbdac .Get ("\u0054\u0068\u0075m\u0062");_ccaccb !=nil {_fbgfb .Thumb =_ccaccb ;};if _fcde :=_dbdac .Get ("\u0042");
_fcde !=nil {_fbgfb .B =_fcde ;};if _fadg :=_dbdac .Get ("\u0044\u0075\u0072");_fadg !=nil {_fbgfb .Dur =_fadg ;};if _fadeb :=_dbdac .Get ("\u0054\u0072\u0061n\u0073");_fadeb !=nil {_fbgfb .Trans =_fadeb ;};if _ggead :=_dbdac .Get ("\u0041\u0041");_ggead !=nil {_fbgfb .AA =_ggead ;
};if _dagfe :=_dbdac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dagfe !=nil {_fbgfb .Metadata =_dagfe ;};if _bebeg :=_dbdac .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bebeg !=nil {_fbgfb .PieceInfo =_bebeg ;};if _ccdcc :=_dbdac .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_ccdcc !=nil {_fbgfb .StructParents =_ccdcc ;};if _beaca :=_dbdac .Get ("\u0049\u0044");_beaca !=nil {_fbgfb .ID =_beaca ;};if _afffb :=_dbdac .Get ("\u0050\u005a");_afffb !=nil {_fbgfb .PZ =_afffb ;};if _bgbce :=_dbdac .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_bgbce !=nil {_fbgfb .SeparationInfo =_bgbce ;};if _adfd :=_dbdac .Get ("\u0054\u0061\u0062\u0073");_adfd !=nil {_fbgfb .Tabs =_adfd ;};if _cgda :=_dbdac .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_cgda !=nil {_fbgfb .TemplateInstantiated =_cgda ;};if _bacag :=_dbdac .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_bacag !=nil {_fbgfb .PresSteps =_bacag ;};if _dffbc :=_dbdac .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_dffbc !=nil {_fbgfb .UserUnit =_dffbc ;
};if _cebdf :=_dbdac .Get ("\u0056\u0050");_cebdf !=nil {_fbgfb .VP =_cebdf ;};if _befe :=_dbdac .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_befe !=nil {_fbgfb .Annots =_befe ;};_fbgfb ._bdbgg =_bedcf ;return _fbgfb ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_ccbc *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _ccbc .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_adg :=NewPdfAction ();_dac :=&PdfActionThread {};_dac .PdfAction =_adg ;_adg .SetContext (_dac );return _dac ;};

// ToPdfObject implements interface PdfModel.
func (_gdc *PdfActionTrans )ToPdfObject ()_adfb .PdfObject {_gdc .PdfAction .ToPdfObject ();_gdf :=_gdc ._ca ;_gac :=_gdf .PdfObject .(*_adfb .PdfObjectDictionary );_gac .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeTrans )));_gac .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gdc .Trans );
return _gdf ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_ddfd *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _bbcbe []*PdfOutlineTreeNode ;var _aefa []string ;var _fcbfd func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_fcbfd =func (_acdeeb *PdfOutlineTreeNode ,_cefbb *[]*PdfOutlineTreeNode ,_debb *[]string ,_agcf int ){if _acdeeb ==nil {return ;
};if _acdeeb ._ddddf ==nil {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_efaf ,_gcacab :=_acdeeb ._ddddf .(*PdfOutlineItem );if _gcacab {*_cefbb =append (*_cefbb ,&_efaf .PdfOutlineTreeNode );
_cedff :=_be .Repeat ("\u0020",_agcf *2)+_efaf .Title .Decoded ();*_debb =append (*_debb ,_cedff );};if _acdeeb .First !=nil {_ebccc :=_be .Repeat ("\u0020",_agcf *2)+"\u002b";*_debb =append (*_debb ,_ebccc );_fcbfd (_acdeeb .First ,_cefbb ,_debb ,_agcf +1);
};if _gcacab &&_efaf .Next !=nil {_fcbfd (_efaf .Next ,_cefbb ,_debb ,_agcf );};};_fcbfd (_ddfd ._fdcgb ,&_bbcbe ,&_aefa ,0);return _bbcbe ,_aefa ,nil ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_becg *_adfb .PdfObjectDictionary ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_adfb .PdfObjectStream )(*XObjectForm ,error ){_deeac :=&XObjectForm {};_deeac ._ddcaaa =stream ;_aaefd :=*(stream .PdfObjectDictionary );_bcfdgf ,_fefb :=_adfb .NewEncoderFromStream (stream );if _fefb !=nil {return nil ,_fefb ;
};_deeac .Filter =_bcfdgf ;if _aedbg :=_aaefd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_aedbg !=nil {_bbdab ,_dbdec :=_aedbg .(*_adfb .PdfObjectName );if !_dbdec {return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_bbdab !="\u0046\u006f\u0072\u006d"{_bef .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _fbbgb :=_aaefd .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_fbbgb !=nil {_deeac .FormType =_fbbgb ;};if _cccfg :=_aaefd .Get ("\u0042\u0042\u006f\u0078");_cccfg !=nil {_deeac .BBox =_cccfg ;};if _gccbg :=_aaefd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_gccbg !=nil {_deeac .Matrix =_gccbg ;};if _dedac :=_aaefd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dedac !=nil {_dedac =_adfb .TraceToDirectObject (_dedac );_cbcbg ,_adeecb :=_dedac .(*_adfb .PdfObjectDictionary );if !_adeecb {_bef .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_adfb .ErrTypeError ;};_ggaag ,_bffaf :=NewPdfPageResourcesFromDict (_cbcbg );if _bffaf !=nil {_bef .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_bffaf ;};_deeac .Resources =_ggaag ;_bef .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_deeac .Resources );};_deeac .Group =_aaefd .Get ("\u0047\u0072\u006fu\u0070");
_deeac .Ref =_aaefd .Get ("\u0052\u0065\u0066");_deeac .MetaData =_aaefd .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_deeac .PieceInfo =_aaefd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_deeac .LastModified =_aaefd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_deeac .StructParent =_aaefd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_deeac .StructParents =_aaefd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_deeac .OPI =_aaefd .Get ("\u004f\u0050\u0049");
_deeac .OC =_aaefd .Get ("\u004f\u0043");_deeac .Name =_aaefd .Get ("\u004e\u0061\u006d\u0065");_deeac .Stream =stream .Stream ;return _deeac ,nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _adfb .PdfObject ;FontFamily _adfb .PdfObject ;FontStretch _adfb .PdfObject ;FontWeight _adfb .PdfObject ;Flags _adfb .PdfObject ;FontBBox _adfb .PdfObject ;ItalicAngle _adfb .PdfObject ;Ascent _adfb .PdfObject ;Descent _adfb .PdfObject ;
Leading _adfb .PdfObject ;CapHeight _adfb .PdfObject ;XHeight _adfb .PdfObject ;StemV _adfb .PdfObject ;StemH _adfb .PdfObject ;AvgWidth _adfb .PdfObject ;MaxWidth _adfb .PdfObject ;MissingWidth _adfb .PdfObject ;FontFile _adfb .PdfObject ;FontFile2 _adfb .PdfObject ;
FontFile3 _adfb .PdfObject ;CharSet _adfb .PdfObject ;_degb int ;_fafc float64 ;*fontFile ;_bagcb *_ga .TtfType ;

// Additional entries for CIDFonts
Style _adfb .PdfObject ;Lang _adfb .PdfObject ;FD _adfb .PdfObject ;CIDSet _adfb .PdfObject ;_dbgdb *_adfb .PdfIndirectObject ;};func (_cdbbb *pdfFontSimple )baseFields ()*fontCommon {return &_cdbbb .fontCommon };

// ToPdfObject returns the PDF representation of the page resources.
func (_agfg *PdfPageResources )ToPdfObject ()_adfb .PdfObject {_gafb :=_agfg ._bccfgb ;_gafb .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_agfg .ExtGState );if _agfg ._dcegf !=nil {_agfg .ColorSpace =_agfg ._dcegf .ToPdfObject ();};_gafb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_agfg .ColorSpace );
_gafb .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_agfg .Pattern );_gafb .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_agfg .Shading );_gafb .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_agfg .XObject );_gafb .SetIfNotNil ("\u0046\u006f\u006e\u0074",_agfg .Font );
_gafb .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_agfg .ProcSet );_gafb .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_agfg .Properties );return _gafb ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ccg .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ccg .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ccg .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_bfdea *PdfAppender ;_gacgc *DSS ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_gcbf *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_ebgeg :=_fd .NewReader (img .getBase ());_faf :=_afe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gafc :=_fd .NewWriter (_faf );
_ddcg :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_edba :=make ([]uint32 ,3);var (_fbbgcc error ;_fagc ,_edaa ,_acbb ,_bcbc ,_febg ,_begdg float64 ;);for {_fbbgcc =_ebgeg .ReadSamples (_edba );if _fbbgcc ==_gb .EOF {break ;}else if _fbbgcc !=nil {return img ,_fbbgcc ;
};_fagc =float64 (_edba [0])/_ddcg ;_edaa =float64 (_edba [1])/_ddcg ;_acbb =float64 (_edba [2])/_ddcg ;_bcbc =_gcbf .Matrix [0]*_dc .Pow (_fagc ,_gcbf .Gamma [0])+_gcbf .Matrix [3]*_dc .Pow (_edaa ,_gcbf .Gamma [1])+_gcbf .Matrix [6]*_dc .Pow (_acbb ,_gcbf .Gamma [2]);
_febg =_gcbf .Matrix [1]*_dc .Pow (_fagc ,_gcbf .Gamma [0])+_gcbf .Matrix [4]*_dc .Pow (_edaa ,_gcbf .Gamma [1])+_gcbf .Matrix [7]*_dc .Pow (_acbb ,_gcbf .Gamma [2]);_begdg =_gcbf .Matrix [2]*_dc .Pow (_fagc ,_gcbf .Gamma [0])+_gcbf .Matrix [5]*_dc .Pow (_edaa ,_gcbf .Gamma [1])+_gcbf .Matrix [8]*_dc .Pow (_acbb ,_gcbf .Gamma [2]);
_fagc =3.240479*_bcbc +-1.537150*_febg +-0.498535*_begdg ;_edaa =-0.969256*_bcbc +1.875992*_febg +0.041556*_begdg ;_acbb =0.055648*_bcbc +-0.204043*_febg +1.057311*_begdg ;_fagc =_dc .Min (_dc .Max (_fagc ,0),1.0);_edaa =_dc .Min (_dc .Max (_edaa ,0),1.0);
_acbb =_dc .Min (_dc .Max (_acbb ,0),1.0);_edba [0]=uint32 (_fagc *_ddcg );_edba [1]=uint32 (_edaa *_ddcg );_edba [2]=uint32 (_acbb *_ddcg );if _fbbgcc =_gafc .WriteSamples (_edba );_fbbgcc !=nil {return img ,_fbbgcc ;};};return _ebfdg (&_faf ),nil ;};


// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_adfb .PdfObjectDictionary )(*PdfPageResources ,error ){_cage :=NewPdfPageResources ();if _caea :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_caea !=nil {_cage .ExtGState =_caea ;};if _gafeg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_gafeg !=nil &&!_adfb .IsNullObject (_gafeg ){_cage .ColorSpace =_gafeg ;};if _eeebg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_eeebg !=nil {_cage .Pattern =_eeebg ;};if _fcecd :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_fcecd !=nil {_cage .Shading =_fcecd ;
};if _ddaffa :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_ddaffa !=nil {_cage .XObject =_ddaffa ;};if _agbbe :=_adfb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_agbbe !=nil {_cage .Font =_agbbe ;};if _acedd :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_acedd !=nil {_cage .ProcSet =_acedd ;};if _afgc :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_afgc !=nil {_cage .Properties =_afgc ;};return _cage ,nil ;};func (_abada *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};func _ccge (_fddaf _adfb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_aebca :=&PdfPageResourcesColorspaces {};if _gbceg ,_bage :=_fddaf .(*_adfb .PdfIndirectObject );_bage {_aebca ._daccf =_gbceg ;_fddaf =_gbceg .PdfObject ;};_adadg ,_bafcg :=_adfb .GetDict (_fddaf );
if !_bafcg {return nil ,_cfe .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_aebca .Names =[]string {};_aebca .Colorspaces =map[string ]PdfColorspace {};for _ ,_bdbfd :=range _adadg .Keys (){_fbbcf :=_adadg .Get (_bdbfd );
_aebca .Names =append (_aebca .Names ,string (_bdbfd ));_gdfa ,_cbgee :=NewPdfColorspaceFromPdfObject (_fbbcf );if _cbgee !=nil {return nil ,_cbgee ;};_aebca .Colorspaces [string (_bdbfd )]=_gdfa ;};return _aebca ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_aaeea *PdfOutline )ToPdfObject ()_adfb .PdfObject {_bdfca :=_aaeea ._fegcf ;_fead :=_bdfca .PdfObject .(*_adfb .PdfObjectDictionary );_fead .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _aaeea .First !=nil {_fead .Set ("\u0046\u0069\u0072s\u0074",_aaeea .First .ToPdfObject ());
};if _aaeea .Last !=nil {_fead .Set ("\u004c\u0061\u0073\u0074",_aaeea .Last .GetContext ().GetContainingPdfObject ());};if _aaeea .Parent !=nil {_fead .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aaeea .Parent .GetContext ().GetContainingPdfObject ());
};if _aaeea .Count !=nil {_fead .Set ("\u0043\u006f\u0075n\u0074",_adfb .MakeInteger (*_aaeea .Count ));};return _bdfca ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _adfb .PdfObject ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_ggccg *PdfPattern )IsTiling ()bool {return _ggccg .PatternType ==1};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func (_gacbdg *PdfReader )buildOutlineTree (_dbecf _adfb .PdfObject ,_bfcad *PdfOutlineTreeNode ,_daeec *PdfOutlineTreeNode ,_ebaea map[_adfb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _ebaea ==nil {_ebaea =map[_adfb .PdfObject ]struct{}{};
};_ebaea [_dbecf ]=struct{}{};_gaea ,_ffbgd :=_dbecf .(*_adfb .PdfIndirectObject );if !_ffbgd {return nil ,nil ,_ad .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dbecf );
};_dcfaa ,_abcfe :=_gaea .PdfObject .(*_adfb .PdfObjectDictionary );if !_abcfe {return nil ,nil ,_cfe .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bef .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_dcfaa ,_gaea ,_gaea );
if _cefec :=_dcfaa .Get ("\u0054\u0069\u0074l\u0065");_cefec !=nil {_adacf ,_cgdb :=_gacbdg .newPdfOutlineItemFromIndirectObject (_gaea );if _cgdb !=nil {return nil ,nil ,_cgdb ;};_adacf .Parent =_bfcad ;_adacf .Prev =_daeec ;_gecaf :=_adfb .ResolveReference (_dcfaa .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_bgcegd :=_ebaea [_gecaf ];_gecaf !=nil &&_gecaf !=_gaea &&!_bgcegd {if !_adfb .IsNullObject (_gecaf ){_daaa ,_accege ,_cdad :=_gacbdg .buildOutlineTree (_gecaf ,&_adacf .PdfOutlineTreeNode ,nil ,_ebaea );if _cdad !=nil {_bef .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_cdad );
}else {_adacf .First =_daaa ;_adacf .Last =_accege ;};};};_fgegd :=_adfb .ResolveReference (_dcfaa .Get ("\u004e\u0065\u0078\u0074"));if _ ,_caebg :=_ebaea [_fgegd ];_fgegd !=nil &&_fgegd !=_gaea &&!_caebg {if !_adfb .IsNullObject (_fgegd ){_degaf ,_gdbb ,_cgdcb :=_gacbdg .buildOutlineTree (_fgegd ,_bfcad ,&_adacf .PdfOutlineTreeNode ,_ebaea );
if _cgdcb !=nil {_bef .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_cgdcb );
}else {_adacf .Next =_degaf ;return &_adacf .PdfOutlineTreeNode ,_gdbb ,nil ;};};};return &_adacf .PdfOutlineTreeNode ,&_adacf .PdfOutlineTreeNode ,nil ;};_gefae ,_fbgace :=_bfffe (_gaea );if _fbgace !=nil {return nil ,nil ,_fbgace ;};_gefae .Parent =_bfcad ;
if _dabbc :=_dcfaa .Get ("\u0046\u0069\u0072s\u0074");_dabbc !=nil {_dabbc =_adfb .ResolveReference (_dabbc );if _ ,_adgbc :=_ebaea [_dabbc ];_dabbc !=nil &&_dabbc !=_gaea &&!_adgbc {_ffcef :=_adfb .TraceToDirectObject (_dabbc );if _ ,_efged :=_ffcef .(*_adfb .PdfObjectNull );
!_efged &&_ffcef !=nil {_aegba ,_gbgdb ,_dbde :=_gacbdg .buildOutlineTree (_dabbc ,&_gefae .PdfOutlineTreeNode ,nil ,_ebaea );if _dbde !=nil {_bef .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_dbde );
}else {_gefae .First =_aegba ;_gefae .Last =_gbgdb ;};};};};return &_gefae .PdfOutlineTreeNode ,&_gefae .PdfOutlineTreeNode ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aeba *PdfAnnotationFreeText )ToPdfObject ()_adfb .PdfObject {_aeba .PdfAnnotation .ToPdfObject ();_cgge :=_aeba ._ged ;_afga :=_cgge .PdfObject .(*_adfb .PdfObjectDictionary );_aeba .PdfAnnotationMarkup .appendToPdfDictionary (_afga );_afga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_afga .SetIfNotNil ("\u0044\u0041",_aeba .DA );_afga .SetIfNotNil ("\u0051",_aeba .Q );_afga .SetIfNotNil ("\u0052\u0043",_aeba .RC );_afga .SetIfNotNil ("\u0044\u0053",_aeba .DS );_afga .SetIfNotNil ("\u0043\u004c",_aeba .CL );_afga .SetIfNotNil ("\u0049\u0054",_aeba .IT );
_afga .SetIfNotNil ("\u0042\u0045",_aeba .BE );_afga .SetIfNotNil ("\u0052\u0044",_aeba .RD );_afga .SetIfNotNil ("\u0042\u0053",_aeba .BS );_afga .SetIfNotNil ("\u004c\u0045",_aeba .LE );return _cgge ;};

// ToPdfObject implements interface PdfModel.
func (_abd *PdfActionJavaScript )ToPdfObject ()_adfb .PdfObject {_abd .PdfAction .ToPdfObject ();_dgc :=_abd ._ca ;_aaf :=_dgc .PdfObject .(*_adfb .PdfObjectDictionary );_aaf .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeJavaScript )));_aaf .SetIfNotNil ("\u004a\u0053",_abd .JS );
return _dgc ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_adfb .PdfObjectStream ;Data []byte ;_dffd *_adfb .PdfIndirectObject ;_gebfd *_adfb .PdfObjectStream ;};func _cdabg (_efbb *_adfb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_afbaf :=PdfShadingType3 {};_ecbcc :=_efbb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _ecbcc ==nil {_bef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_becab ,_eccbg :=_ecbcc .(*_adfb .PdfObjectArray );if !_eccbg {_bef .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecbcc );return nil ,_adfb .ErrTypeError ;
};if _becab .Len ()!=6{_bef .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_becab .Len ());return nil ,ErrInvalidAttribute ;};_afbaf .Coords =_becab ;
if _adfcfe :=_efbb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_adfcfe !=nil {_adfcfe =_adfb .TraceToDirectObject (_adfcfe );_bdacd ,_acabc :=_adfcfe .(*_adfb .PdfObjectArray );if !_acabc {_bef .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adfcfe );
return nil ,_adfb .ErrTypeError ;};_afbaf .Domain =_bdacd ;};_ecbcc =_efbb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ecbcc ==nil {_bef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_afbaf .Function =[]PdfFunction {};if _ecacfd ,_gabbg :=_ecbcc .(*_adfb .PdfObjectArray );_gabbg {for _ ,_bddef :=range _ecacfd .Elements (){_dgacac ,_ggcg :=_ebba (_bddef );if _ggcg !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggcg );
return nil ,_ggcg ;};_afbaf .Function =append (_afbaf .Function ,_dgacac );};}else {_bcgc ,_dbcf :=_ebba (_ecbcc );if _dbcf !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbcf );
return nil ,_dbcf ;};_afbaf .Function =append (_afbaf .Function ,_bcgc );};if _bbedg :=_efbb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bbedg !=nil {_bbedg =_adfb .TraceToDirectObject (_bbedg );_eadce ,_dfegg :=_bbedg .(*_adfb .PdfObjectArray );if !_dfegg {_bef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbedg );
return nil ,_adfb .ErrTypeError ;};if _eadce .Len ()!=2{_bef .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_eadce .Len ());return nil ,ErrInvalidAttribute ;
};_afbaf .Extend =_eadce ;};return &_afbaf ,nil ;};func (_bdfa *PdfAcroForm )filteredFields (_egfac FieldFilterFunc ,_dfffg bool )[]*PdfField {if _bdfa ==nil {return nil ;};return _fgedd (_bdfa .Fields ,_egfac ,_dfffg );};func (_egda *PdfWriter )setHashIDs (_gcec _f .Hash )error {_gadac :=_gcec .Sum (nil );
if _egda ._cgccef ==""{_egda ._cgccef =_aa .EncodeToString (_gadac [:8]);};_egda .setDocumentIDs (_egda ._cgccef ,_aa .EncodeToString (_gadac [8:]));return nil ;};func _acde (_bgbfg _adfb .PdfObject )(*PdfColorspaceDeviceN ,error ){_adbg :=NewPdfColorspaceDeviceN ();
if _fcdfg ,_bdfd :=_bgbfg .(*_adfb .PdfIndirectObject );_bdfd {_adbg ._dacd =_fcdfg ;};_bgbfg =_adfb .TraceToDirectObject (_bgbfg );_aagd ,_dfbc :=_bgbfg .(*_adfb .PdfObjectArray );if !_dfbc {return nil ,_ad .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _aagd .Len ()!=4&&_aagd .Len ()!=5{return nil ,_ad .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_bgbfg =_aagd .Get (0);
_cagg ,_dfbc :=_bgbfg .(*_adfb .PdfObjectName );if !_dfbc {return nil ,_ad .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cagg !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_ad .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_bgbfg =_aagd .Get (1);
_bgbfg =_adfb .TraceToDirectObject (_bgbfg );_bbdfe ,_dfbc :=_bgbfg .(*_adfb .PdfObjectArray );if !_dfbc {return nil ,_ad .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_adbg .ColorantNames =_bbdfe ;_bgbfg =_aagd .Get (2);_gaad ,_ffgaa :=NewPdfColorspaceFromPdfObject (_bgbfg );if _ffgaa !=nil {return nil ,_ffgaa ;};_adbg .AlternateSpace =_gaad ;_ccgg ,_ffgaa :=_ebba (_aagd .Get (3));if _ffgaa !=nil {return nil ,_ffgaa ;
};_adbg .TintTransform =_ccgg ;if _aagd .Len ()==5{_affdd ,_gfbe :=_ggbdc (_aagd .Get (4));if _gfbe !=nil {return nil ,_gfbe ;};_adbg .Attributes =_affdd ;};return _adbg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gbab *PdfAnnotationLine )ToPdfObject ()_adfb .PdfObject {_gbab .PdfAnnotation .ToPdfObject ();_cecg :=_gbab ._ged ;_abffc :=_cecg .PdfObject .(*_adfb .PdfObjectDictionary );_gbab .PdfAnnotationMarkup .appendToPdfDictionary (_abffc );_abffc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u004c\u0069\u006e\u0065"));
_abffc .SetIfNotNil ("\u004c",_gbab .L );_abffc .SetIfNotNil ("\u0042\u0053",_gbab .BS );_abffc .SetIfNotNil ("\u004c\u0045",_gbab .LE );_abffc .SetIfNotNil ("\u0049\u0043",_gbab .IC );_abffc .SetIfNotNil ("\u004c\u004c",_gbab .LL );_abffc .SetIfNotNil ("\u004c\u004c\u0045",_gbab .LLE );
_abffc .SetIfNotNil ("\u0043\u0061\u0070",_gbab .Cap );_abffc .SetIfNotNil ("\u0049\u0054",_gbab .IT );_abffc .SetIfNotNil ("\u004c\u004c\u004f",_gbab .LLO );_abffc .SetIfNotNil ("\u0043\u0050",_gbab .CP );_abffc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gbab .Measure );
_abffc .SetIfNotNil ("\u0043\u004f",_gbab .CO );return _cecg ;};

// StdFontName represents name of a standard font.
type StdFontName =_ga .StdFontName ;

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_fceg *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ba .SimpleEncoder ,error ){_dbeb ,_fgbf :=_dggdf (basefont );if _fgbf !=nil {return nil ,nil ,_fgbf ;};_dbbbf ,_ecdg :=_dbeb .Encoder ().(_ba .SimpleEncoder );
if !_ecdg {return nil ,nil ,_ad .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_dbeb .Encoder ());
};_dagfb :=make (map[rune ]_ba .GlyphName );for _daae :=range alphabet {if _ ,_aage :=_dbbbf .RuneToCharcode (_daae );!_aage {_ ,_febfg :=_dbeb ._gcbae .Read (_daae );if !_febfg {_bef .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_daae ,_daae );
continue ;};_efae ,_febfg :=_ba .RuneToGlyph (_daae );if !_febfg {_bef .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_daae ,_daae );continue ;};if len (_dagfb )>=255{return nil ,nil ,_cfe .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_dagfb [_daae ]=_efae ;};};var (_accc []_ba .CharCode ;_ffbg []_ba .CharCode ;);for _ccgbf :=_ba .CharCode (1);_ccgbf <=0xff;_ccgbf ++{_cbbdc ,_cdddg :=_dbbbf .CharcodeToRune (_ccgbf );if !_cdddg {_accc =append (_accc ,_ccgbf );continue ;};if _ ,_cdddg =alphabet [_cbbdc ];
!_cdddg {_ffbg =append (_ffbg ,_ccgbf );};};_ccec :=append (_accc ,_ffbg ...);if len (_ccec )< len (_dagfb ){return nil ,nil ,_ad .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_dagfb ),len (_ccec ));
};_aadg :=make ([]rune ,0,len (_dagfb ));for _fddd :=range _dagfb {_aadg =append (_aadg ,_fddd );};_ab .Slice (_aadg ,func (_agebd ,_cgea int )bool {return _aadg [_agebd ]< _aadg [_cgea ]});_agec :=make (map[_ba .CharCode ]_ba .GlyphName ,len (_aadg ));
for _ ,_fdfagfg :=range _aadg {_edbb :=_ccec [0];_ccec =_ccec [1:];_agec [_edbb ]=_dagfb [_fdfagfg ];};_dbbbf =_ba .ApplyDifferences (_dbbbf ,_agec );_dbeb .SetEncoder (_dbbbf );return &PdfFont {_gdcf :&_dbeb },_dbbbf ,nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gba :=NewPdfAction ();_ee :=&PdfActionSetOCGState {};_ee .PdfAction =_gba ;_gba .SetContext (_ee );return _ee ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _adfb .PdfObject ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_cebe *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _cfe .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_cebe .S =subtype ;return nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_feabf *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _feabf .MediaBox !=nil {return _feabf .MediaBox ,nil ;};_ggefag :=_feabf .Parent ;for _ggefag !=nil {_dfabfd ,_dfcb :=_adfb .GetDict (_ggefag );if !_dfcb {return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ecfeb :=_dfabfd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ecfeb !=nil {_cagcc ,_ecbad :=_adfb .GetArray (_ecfeb );if !_ecbad {return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_cdgcf ,_deadb :=NewPdfRectangle (*_cagcc );if _deadb !=nil {return nil ,_deadb ;};return _cdgcf ,nil ;};_ggefag =_dfabfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_cfe .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func (_bbbcd *PdfField )inherit (_gcccd func (*PdfField )bool )(bool ,error ){_aadd :=map[*PdfField ]bool {};_dbeab :=false ;_gfbaa :=_bbbcd ;for _gfbaa !=nil {if _ ,_bccf :=_aadd [_gfbaa ];_bccf {return false ,_cfe .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_fgcb :=_gcccd (_gfbaa );if _fgcb {_dbeab =true ;break ;};_aadd [_gfbaa ]=true ;_gfbaa =_gfbaa .Parent ;};return _dbeab ,nil ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_cedbd *_da .Document )error ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_cgfdf *PdfReader )CheckAccessRights (password []byte )(bool ,_bga .Permissions ,error ){return _cgfdf ._aeea .CheckAccessRights (password );};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_ccgdb :=&PdfFieldSignature {};_ccgdb .PdfField =NewPdfField ();_ccgdb .PdfField .SetContext (_ccgdb );_ccgdb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_ccgdb .PdfAnnotationWidget .SetContext (_ccgdb );
_ccgdb .PdfAnnotationWidget ._ged =_ccgdb .PdfField ._dfgf ;_ccgdb .T =_adfb .MakeString ("");_ccgdb .F =_adfb .MakeInteger (132);_ccgdb .V =signature ;return _ccgdb ;};type pdfCIDFontType0 struct{fontCommon ;_bgbde *_adfb .PdfIndirectObject ;_cbeb _ba .TextEncoder ;


// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_adfb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _adfb .PdfObject ;W _adfb .PdfObject ;DW2 _adfb .PdfObject ;W2 _adfb .PdfObject ;_dfddd map[_ba .CharCode ]float64 ;_adfc float64 ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_ecef _adfb .PdfObject ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// Mask returns the uin32 bitmask for the specific flag.
func (_badg FieldFlag )Mask ()uint32 {return uint32 (_badg )};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_baaa *PdfColorspaceLab )GetNumComponents ()int {return 3};func _ecfe (_febc _adfb .PdfObject )(*PdfColorspaceCalRGB ,error ){_cadd :=NewPdfColorspaceCalRGB ();if _eae ,_ecdac :=_febc .(*_adfb .PdfIndirectObject );_ecdac {_cadd ._dadee =_eae ;};_febc =_adfb .TraceToDirectObject (_febc );
_caef ,_cbga :=_febc .(*_adfb .PdfObjectArray );if !_cbga {return nil ,_ad .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _caef .Len ()!=2{return nil ,_ad .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_febc =_adfb .TraceToDirectObject (_caef .Get (0));_aada ,_cbga :=_febc .(*_adfb .PdfObjectName );if !_cbga {return nil ,_ad .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_aada !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_ad .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_febc =_adfb .TraceToDirectObject (_caef .Get (1));
_fdaf ,_cbga :=_febc .(*_adfb .PdfObjectDictionary );if !_cbga {return nil ,_ad .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_febc =_fdaf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_febc =_adfb .TraceToDirectObject (_febc );_fdeb ,_cbga :=_febc .(*_adfb .PdfObjectArray );if !_cbga {return nil ,_ad .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _fdeb .Len ()!=3{return nil ,_ad .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bcfb ,_defd :=_fdeb .GetAsFloat64Slice ();
if _defd !=nil {return nil ,_defd ;};_cadd .WhitePoint =_bcfb ;_febc =_fdaf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _febc !=nil {_febc =_adfb .TraceToDirectObject (_febc );_ddcc ,_fdgg :=_febc .(*_adfb .PdfObjectArray );
if !_fdgg {return nil ,_ad .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _ddcc .Len ()!=3{return nil ,_ad .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_gagcc ,_dbdf :=_ddcc .GetAsFloat64Slice ();if _dbdf !=nil {return nil ,_dbdf ;};_cadd .BlackPoint =_gagcc ;};_febc =_fdaf .Get ("\u0047\u0061\u006dm\u0061");if _febc !=nil {_febc =_adfb .TraceToDirectObject (_febc );_cbab ,_gcbde :=_febc .(*_adfb .PdfObjectArray );
if !_gcbde {return nil ,_ad .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _cbab .Len ()!=3{return nil ,_ad .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_gedd ,_geceb :=_cbab .GetAsFloat64Slice ();if _geceb !=nil {return nil ,_geceb ;};_cadd .Gamma =_gedd ;};_febc =_fdaf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _febc !=nil {_febc =_adfb .TraceToDirectObject (_febc );_bcfc ,_agac :=_febc .(*_adfb .PdfObjectArray );
if !_agac {return nil ,_ad .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _bcfc .Len ()!=9{_bef .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_bcfc .String ());
return nil ,_ad .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_baeea ,_eddb :=_bcfc .GetAsFloat64Slice ();if _eddb !=nil {return nil ,_eddb ;
};_cadd .Matrix =_baeea ;};return _cadd ,nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_edcbe *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gdfg :=_fd .NewReader (img .getBase ());_bfde :=_afe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_daca :=_fd .NewWriter (_bfde );
_ddag :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_gcbgg :=make ([]uint32 ,3);var (_efgca uint32 ;ANorm ,X ,Y ,Z ,_dbcd ,_edfg ,_dgca float64 ;_aadb error ;);for {_efgca ,_aadb =_gdfg .ReadSample ();if _aadb ==_gb .EOF {break ;}else if _aadb !=nil {return img ,_aadb ;
};ANorm =float64 (_efgca )/_ddag ;X =_edcbe .WhitePoint [0]*_dc .Pow (ANorm ,_edcbe .Gamma );Y =_edcbe .WhitePoint [1]*_dc .Pow (ANorm ,_edcbe .Gamma );Z =_edcbe .WhitePoint [2]*_dc .Pow (ANorm ,_edcbe .Gamma );_dbcd =3.240479*X +-1.537150*Y +-0.498535*Z ;
_edfg =-0.969256*X +1.875992*Y +0.041556*Z ;_dgca =0.055648*X +-0.204043*Y +1.057311*Z ;_dbcd =_dc .Min (_dc .Max (_dbcd ,0),1.0);_edfg =_dc .Min (_dc .Max (_edfg ,0),1.0);_dgca =_dc .Min (_dc .Max (_dgca ,0),1.0);_gcbgg [0]=uint32 (_dbcd *_ddag );_gcbgg [1]=uint32 (_edfg *_ddag );
_gcbgg [2]=uint32 (_dgca *_ddag );if _aadb =_daca .WriteSamples (_gcbgg );_aadb !=nil {return img ,_aadb ;};};return _ebfdg (&_bfde ),nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_cfca *PdfPageResources )GetExtGState (keyName _adfb .PdfObjectName )(_adfb .PdfObject ,bool ){if _cfca .ExtGState ==nil {return nil ,false ;};_gfbfa ,_ccdce :=_adfb .TraceToDirectObject (_cfca .ExtGState ).(*_adfb .PdfObjectDictionary );if !_ccdce {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfca .ExtGState );
return nil ,false ;};if _gbgdd :=_gfbfa .Get (keyName );_gbgdd !=nil {return _gbgdd ,true ;};return nil ,false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gbaddd *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gbaddd .UnderlyingCS ==nil {return nil ,_cfe .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _gbaddd .UnderlyingCS .ColorFromFloats (vals );};func (_bbgga *LTV )getOCSPs (_dgfde []*_adf .Certificate ,_afgadb map[string ]*_adf .Certificate )([][]byte ,error ){_ebbag :=make ([][]byte ,0,len (_dgfde ));for _ ,_ecbbg :=range _dgfde {for _ ,_bdgbd :=range _ecbbg .OCSPServer {if _bbgga .CertClient .IsCA (_ecbbg ){continue ;
};_bagaeg ,_dddda :=_afgadb [_ecbbg .Issuer .CommonName ];if !_dddda {_bef .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_aceg ,_bgeff :=_bbgga .OCSPClient .MakeRequest (_bdgbd ,_ecbbg ,_bagaeg );if _bgeff !=nil {_bef .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_bgeff );
continue ;};_ebbag =append (_ebbag ,_aceg );};};return _ebbag ,nil ;};func _bbcd (_ccgce *_adfb .PdfObjectDictionary )(*PdfFieldText ,error ){_eecd :=&PdfFieldText {};_eecd .DA ,_ =_adfb .GetString (_ccgce .Get ("\u0044\u0041"));_eecd .Q ,_ =_adfb .GetInt (_ccgce .Get ("\u0051"));
_eecd .DS ,_ =_adfb .GetString (_ccgce .Get ("\u0044\u0053"));_eecd .RV =_ccgce .Get ("\u0052\u0056");_eecd .MaxLen ,_ =_adfb .GetInt (_ccgce .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _eecd ,nil ;};func (_baggb *pdfCIDFontType0 )baseFields ()*fontCommon {return &_baggb .fontCommon };
func (_efa *PdfReader )newPdfAnnotationMarkupFromDict (_gbdd *_adfb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_dfef :=&PdfAnnotationMarkup {};if _eccd :=_gbdd .Get ("\u0054");_eccd !=nil {_dfef .T =_eccd ;};if _efgd :=_gbdd .Get ("\u0050\u006f\u0070u\u0070");
_efgd !=nil {_gbdg ,_eacb :=_efgd .(*_adfb .PdfIndirectObject );if !_eacb {if _ ,_gfg :=_efgd .(*_adfb .PdfObjectNull );!_gfg {return nil ,_cfe .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_dad ,_geac :=_efa .newPdfAnnotationFromIndirectObject (_gbdg );if _geac !=nil {return nil ,_geac ;};if _dad !=nil {_eacbf ,_edcb :=_dad ._acf .(*PdfAnnotationPopup );if !_edcb {return nil ,_cfe .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_dfef .Popup =_eacbf ;};};};if _bgdd :=_gbdd .Get ("\u0043\u0041");_bgdd !=nil {_dfef .CA =_bgdd ;};if _cfbc :=_gbdd .Get ("\u0052\u0043");_cfbc !=nil {_dfef .RC =_cfbc ;};if _fdf :=_gbdd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_fdf !=nil {_dfef .CreationDate =_fdf ;};if _fca :=_gbdd .Get ("\u0049\u0052\u0054");_fca !=nil {_dfef .IRT =_fca ;};if _dag :=_gbdd .Get ("\u0053\u0075\u0062\u006a");_dag !=nil {_dfef .Subj =_dag ;};if _ecgg :=_gbdd .Get ("\u0052\u0054");_ecgg !=nil {_dfef .RT =_ecgg ;
};if _feb :=_gbdd .Get ("\u0049\u0054");_feb !=nil {_dfef .IT =_feb ;};if _aegf :=_gbdd .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_aegf !=nil {_dfef .ExData =_aegf ;};return _dfef ,nil ;};

// String returns a string describing the font descriptor.
func (_gdaeg *PdfFontDescriptor )String ()string {var _fcfdc []string ;if _gdaeg .FontName !=nil {_fcfdc =append (_fcfdc ,_gdaeg .FontName .String ());};if _gdaeg .FontFamily !=nil {_fcfdc =append (_fcfdc ,_gdaeg .FontFamily .String ());};if _gdaeg .fontFile !=nil {_fcfdc =append (_fcfdc ,_gdaeg .fontFile .String ());
};if _gdaeg ._bagcb !=nil {_fcfdc =append (_fcfdc ,_gdaeg ._bagcb .String ());};_fcfdc =append (_fcfdc ,_ad .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_gdaeg .FontFile3 !=nil ));return _ad .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_be .Join (_fcfdc ,"\u002c\u0020"));
};func _ddfba (_cdbb _adfb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_bef .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cdbb .String (),_cdbb );
_faaca :=NewPdfColorspaceSpecialPattern ();if _acag ,_ggdda :=_cdbb .(*_adfb .PdfIndirectObject );_ggdda {_faaca ._aeee =_acag ;};_cdbb =_adfb .TraceToDirectObject (_cdbb );if _acg ,_gafg :=_cdbb .(*_adfb .PdfObjectName );_gafg {if *_acg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_ad .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _faaca ,nil ;};_cebb ,_cbad :=_cdbb .(*_adfb .PdfObjectArray );if !_cbad {_bef .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cdbb );
return nil ,_ad .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _cebb .Len ()!=1&&_cebb .Len ()!=2{_bef .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_cebb );
return nil ,_ad .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cdbb =_cebb .Get (0);if _agee ,_efed :=_cdbb .(*_adfb .PdfObjectName );_efed {if *_agee !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bef .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_agee );
return nil ,_ad .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _cebb .Len ()> 1{_cdbb =_cebb .Get (1);_cdbb =_adfb .TraceToDirectObject (_cdbb );_acede ,_egbf :=NewPdfColorspaceFromPdfObject (_cdbb );if _egbf !=nil {return nil ,_egbf ;
};_faaca .UnderlyingCS =_acede ;};_bef .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_faaca .UnderlyingCS );
return _faaca ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fdbc *Permissions )GetContainingPdfObject ()_adfb .PdfObject {return _fdbc ._dbdcc };

// ReplacePage replaces the original page to a new page.
func (_gggf *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_eadb :=pageNum -1;for _aacc :=range _gggf ._gde {if _aacc ==_eadb {_cdaab :=page .Duplicate ();_dcgca (_cdaab );_gggf ._gde [_aacc ]=_cdaab ;};};};

// GetRevisionNumber returns the version of the current Pdf document
func (_dfec *PdfReader )GetRevisionNumber ()int {return _dfec ._aeea .GetRevisionNumber ()};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _adfb .PdfObject ;Name _adfb .PdfObject ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_dfb :=NewPdfAnnotation ();_edea :=&PdfAnnotationRedact {};_edea .PdfAnnotation =_dfb ;_edea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfb .SetContext (_edea );return _edea ;};func _ggeec (_eafba *XObjectImage )error {if _eafba .SMask ==nil {return nil ;
};_bdbggc ,_ebgfd :=_eafba .SMask .(*_adfb .PdfObjectStream );if !_ebgfd {_bef .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _adfb .ErrTypeError ;};_dbcgc :=_bdbggc .PdfObjectDictionary ;_dedgb :=_dbcgc .Get ("\u004d\u0061\u0074t\u0065");if _dedgb ==nil {return nil ;};_cdead ,_dbfb :=_gfadf (_dedgb .(*_adfb .PdfObjectArray ));if _dbfb !=nil {return _dbfb ;};_dcbg :=_adfb .MakeArrayFromFloats ([]float64 {_cdead });
_dbcgc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dcbg );return nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ebe :=NewPdfAnnotation ();_fdaa :=&PdfAnnotationCircle {};_fdaa .PdfAnnotation =_ebe ;_fdaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebe .SetContext (_fdaa );return _fdaa ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";
TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_acb *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfd :=vals [0];if _cfd < 0.0||_cfd > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfd );
return nil ,ErrColorOutOfRange ;};_bfeda :=NewPdfColorCalGray (_cfd );return _bfeda ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// SetLocation sets the `Location` field of the signature.
func (_fgdgcb *PdfSignature )SetLocation (location string ){_fgdgcb .Location =_adfb .MakeString (location );};

// ToPdfObject implements interface PdfModel.
func (_bda *PdfAnnotation3D )ToPdfObject ()_adfb .PdfObject {_bda .PdfAnnotation .ToPdfObject ();_adae :=_bda ._ged ;_eacc :=_adae .PdfObject .(*_adfb .PdfObjectDictionary );_eacc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0033\u0044"));
_eacc .SetIfNotNil ("\u0033\u0044\u0044",_bda .T3DD );_eacc .SetIfNotNil ("\u0033\u0044\u0056",_bda .T3DV );_eacc .SetIfNotNil ("\u0033\u0044\u0041",_bda .T3DA );_eacc .SetIfNotNil ("\u0033\u0044\u0049",_bda .T3DI );_eacc .SetIfNotNil ("\u0033\u0044\u0042",_bda .T3DB );
return _adae ;};

// ToPdfObject implements interface PdfModel.
func (_gdg *PdfAnnotationUnderline )ToPdfObject ()_adfb .PdfObject {_gdg .PdfAnnotation .ToPdfObject ();_gcfe :=_gdg ._ged ;_ggbge :=_gcfe .PdfObject .(*_adfb .PdfObjectDictionary );_gdg .PdfAnnotationMarkup .appendToPdfDictionary (_ggbge );_ggbge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ggbge .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdg .QuadPoints );return _gcfe ;};

// SetContext sets the sub annotation (context).
func (_bbb *PdfAnnotation )SetContext (ctx PdfModel ){_bbb ._acf =ctx };

// ToPdfObject returns the button field dictionary within an indirect object.
func (_feeb *PdfFieldButton )ToPdfObject ()_adfb .PdfObject {_feeb .PdfField .ToPdfObject ();_fdee :=_feeb ._dfgf ;_bfga :=_fdee .PdfObject .(*_adfb .PdfObjectDictionary );_bfga .Set ("\u0046\u0054",_adfb .MakeName ("\u0042\u0074\u006e"));if _feeb .Opt !=nil {_bfga .Set ("\u004f\u0070\u0074",_feeb .Opt );
};return _fdee ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_geb :=NewPdfAnnotation ();_afc :=&PdfAnnotationMovie {};_afc .PdfAnnotation =_geb ;_geb .SetContext (_afc );return _afc ;};func (_begg *PdfReader )newPdfAnnotationScreenFromDict (_afff *_adfb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ecfc :=PdfAnnotationScreen {};
_ecfc .T =_afff .Get ("\u0054");_ecfc .MK =_afff .Get ("\u004d\u004b");_ecfc .A =_afff .Get ("\u0041");_ecfc .AA =_afff .Get ("\u0041\u0041");return &_ecfc ,nil ;};func (_ggg *PdfReader )newPdfActionSoundFromDict (_cfgd *_adfb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_cfgd .Get ("\u0053\u006f\u0075n\u0064"),Volume :_cfgd .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_cfgd .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_cfgd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_cfgd .Get ("\u004d\u0069\u0078")},nil ;
};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_ebdg *_adfb .PdfIndirectObject ;};func _cacgd ()string {_gebbe .Lock ();defer _gebbe .Unlock ();if len (_bcdf )> 0{return _bcdf ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_fgfd *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_adfb .PdfObjectInteger ;BitsPerComponent *_adfb .PdfObjectInteger ;VerticesPerRow *_adfb .PdfObjectInteger ;Decode *_adfb .PdfObjectArray ;Function []PdfFunction ;};func (_ddddg *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _ddddg ._ebcbf };


// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bbgd ,_effe :=_bf .Open (filePath );if _effe !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_effe );
return nil ,_effe ;};defer _bbgd .Close ();return NewPdfFontFromTTF (_bbgd );};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_badd *PdfOutline )GetContainingPdfObject ()_adfb .PdfObject {return _badd ._fegcf };

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func (_agef *PdfReader )newPdfSignatureReferenceFromDict (_edcee *_adfb .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _bdcac ,_eacae :=_agef ._bcfbd .GetModelFromPrimitive (_edcee ).(*PdfSignatureReference );
_eacae {return _bdcac ,nil ;};_ddaag :=&PdfSignatureReference {_edfcf :_edcee ,Data :_edcee .Get ("\u0044\u0061\u0074\u0061")};var _cadcf bool ;_ddaag .Type ,_ =_adfb .GetName (_edcee .Get ("\u0054\u0079\u0070\u0065"));_ddaag .TransformMethod ,_cadcf =_adfb .GetName (_edcee .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_cadcf {_bef .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ddaag .TransformParams ,_ =_adfb .GetDict (_edcee .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_ddaag .DigestMethod ,_ =_adfb .GetName (_edcee .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _ddaag ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_fgceg PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fgceg ._gdcf .getFontDescriptor (),nil ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// ToPdfObject implements interface PdfModel.
func (_dcgaa *PdfTransformParamsDocMDP )ToPdfObject ()_adfb .PdfObject {_bdacb :=_adfb .MakeDict ();_bdacb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dcgaa .Type );_bdacb .SetIfNotNil ("\u0056",_dcgaa .V );_bdacb .SetIfNotNil ("\u0050",_dcgaa .P );return _bdacb ;
};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_aeaae ,_dcadf :=_bf .Open (filePath );if _dcadf !=nil {_bef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dcadf );
return nil ,_dcadf ;};defer _aeaae .Close ();return NewCompositePdfFontFromTTF (_aeaae );};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_adeb *PdfColorspaceICCBased )GetContainingPdfObject ()_adfb .PdfObject {return _adeb ._gebfd };

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_becae *PdfPage )SetContentStreams (cStreams []string ,encoder _adfb .StreamEncoder )error {if len (cStreams )==0{_becae .Contents =nil ;return nil ;};if encoder ==nil {encoder =_adfb .NewRawEncoder ();};var _dcefe []*_adfb .PdfObjectStream ;for _ ,_ecdfb :=range cStreams {_gdacg :=&_adfb .PdfObjectStream {};
_bdaca :=encoder .MakeStreamDict ();_ffbf ,_eede :=encoder .EncodeBytes ([]byte (_ecdfb ));if _eede !=nil {return _eede ;};_bdaca .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_adfb .MakeInteger (int64 (len (_ffbf ))));_gdacg .PdfObjectDictionary =_bdaca ;
_gdacg .Stream =_ffbf ;_dcefe =append (_dcefe ,_gdacg );};if len (_dcefe )==1{_becae .Contents =_dcefe [0];}else {_geccd :=_adfb .MakeArray ();for _ ,_dcfg :=range _dcefe {_geccd .Append (_dcfg );};_becae .Contents =_geccd ;};return nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_fabd *PdfColorspaceCalGray )ToPdfObject ()_adfb .PdfObject {_ffd :=&_adfb .PdfObjectArray {};_ffd .Append (_adfb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_gdae :=_adfb .MakeDict ();if _fabd .WhitePoint !=nil {_gdae .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_adfb .MakeArray (_adfb .MakeFloat (_fabd .WhitePoint [0]),_adfb .MakeFloat (_fabd .WhitePoint [1]),_adfb .MakeFloat (_fabd .WhitePoint [2])));
}else {_bef .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _fabd .BlackPoint !=nil {_gdae .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_adfb .MakeArray (_adfb .MakeFloat (_fabd .BlackPoint [0]),_adfb .MakeFloat (_fabd .BlackPoint [1]),_adfb .MakeFloat (_fabd .BlackPoint [2])));
};_gdae .Set ("\u0047\u0061\u006dm\u0061",_adfb .MakeFloat (_fabd .Gamma ));_ffd .Append (_gdae );if _fabd ._aagc !=nil {_fabd ._aagc .PdfObject =_ffd ;return _fabd ._aagc ;};return _ffd ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ecgce *PdfWriter )AddPage (page *PdfPage )error {const _efdaa ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_dcgca (page );_fdcbb :=page .ToPdfObject ();_bef .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_bef .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_fdcbb );_fbgec ,_dbgc :=_adfb .GetIndirect (_fdcbb );if !_dbgc {return _cfe .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_bef .Log .Trace ("\u0025\u0073",_fbgec );_bef .Log .Trace ("\u0025\u0073",_fbgec .PdfObject );_baad ,_dbgc :=_adfb .GetDict (_fbgec .PdfObject );if !_dbgc {return _cfe .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cbcec ,_dbgc :=_adfb .GetName (_baad .Get ("\u0054\u0079\u0070\u0065"));if !_dbgc {return _ad .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_baad .Get ("\u0054\u0079\u0070\u0065"));
};if _cbcec .String ()!="\u0050\u0061\u0067\u0065"{return _cfe .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_aagacg :=[]_adfb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_gdcdb ,_ecgac :=_adfb .GetIndirect (_baad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bef .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_baad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_ecgac );
for _ecgac {_bef .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gdcdb );_gaadd ,_ebcdb :=_adfb .GetDict (_gdcdb .PdfObject );if !_ebcdb {return _cfe .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_fecece :=range _aagacg {_bef .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fecece );if _baad .Get (_fecece )!=nil {_bef .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _ecggdc :=_gaadd .Get (_fecece );_ecggdc !=nil {_bef .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fecece );_baad .Set (_fecece ,_ecggdc );};};_gdcdb ,_ecgac =_adfb .GetIndirect (_gaadd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_bef .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gaadd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bef .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_baad .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecgce ._gdfab );_fbgec .PdfObject =_baad ;_dfaac ,_dbgc :=_adfb .GetDict (_ecgce ._gdfab .PdfObject );if !_dbgc {return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_abfga ,_dbgc :=_adfb .GetArray (_dfaac .Get ("\u004b\u0069\u0064\u0073"));if !_dbgc {return _cfe .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_abfga .Append (_fbgec );_ecgce ._egee [_baad ]=struct{}{};_eeeg ,_dbgc :=_adfb .GetInt (_dfaac .Get ("\u0043\u006f\u0075n\u0074"));if !_dbgc {return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_eeeg =*_eeeg +1;if page ._bdbgg ==nil {_dggg :=_ag .Track (_ecgce ._fbgdg ,_efdaa );if _dggg !=nil {return _dggg ;};}else {_bbfcc :=_ag .Track (page ._bdbgg ._bcdge ,_efdaa );if _bbfcc !=nil {return _bbfcc ;};};_ecgce .addObject (_fbgec );_gfgad :=_ecgce .addObjects (_baad );
if _gfgad !=nil {return _gfgad ;};return nil ;};func (_bcbb *LTV )getCRLs (_edfb []*_adf .Certificate )([][]byte ,error ){_dceeb :=make ([][]byte ,0,len (_edfb ));for _ ,_gcddb :=range _edfb {for _ ,_eeca :=range _gcddb .CRLDistributionPoints {if _bcbb .CertClient .IsCA (_gcddb ){continue ;
};_abfad ,_deeg :=_bcbb .CRLClient .MakeRequest (_eeca ,_gcddb );if _deeg !=nil {_bef .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_deeg );continue ;
};_dceeb =append (_dceeb ,_abfad );};};return _dceeb ,nil ;};func (_dgac *PdfReader )newPdfAnnotationSquareFromDict (_gcbb *_adfb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gece :=PdfAnnotationSquare {};_dgec ,_gebe :=_dgac .newPdfAnnotationMarkupFromDict (_gcbb );
if _gebe !=nil {return nil ,_gebe ;};_gece .PdfAnnotationMarkup =_dgec ;_gece .BS =_gcbb .Get ("\u0042\u0053");_gece .IC =_gcbb .Get ("\u0049\u0043");_gece .BE =_gcbb .Get ("\u0042\u0045");_gece .RD =_gcbb .Get ("\u0052\u0044");return &_gece ,nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _adfb .PdfObject ;Volume _adfb .PdfObject ;Synchronous _adfb .PdfObject ;Repeat _adfb .PdfObject ;Mix _adfb .PdfObject ;};func _gdfded (_aaacd string )(string ,error ){var _aadced _ae .Buffer ;_aadced .WriteString (_aaacd );
_gfbc :=make ([]byte ,8+16);_aged :=_c .Now ().UTC ().UnixNano ();_bg .BigEndian .PutUint64 (_gfbc ,uint64 (_aged ));_ ,_bccad :=_e .Read (_gfbc [8:]);if _bccad !=nil {return "",_bccad ;};_aadced .WriteString (_aa .EncodeToString (_gfbc ));return _aadced .String (),nil ;
};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_fccg *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_bbfcd ,_gfga :=color .(*PdfColorPattern );if !_gfga {_bef .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _bbfcd .Color ==nil {return color ,nil ;};if _fccg .UnderlyingCS ==nil {return nil ,_cfe .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};
return _fccg .UnderlyingCS .ColorToRGB (_bbfcd .Color );};func (_ddga *PdfWriter )writeObjectsInStreams (_fdcc map[_adfb .PdfObject ]bool )error {for _ ,_bcgfdf :=range _ddga ._fcefd {if _caaeb :=_fdcc [_bcgfdf ];_caaeb {continue ;};_ccca :=int64 (0);switch _fcdgd :=_bcgfdf .(type ){case *_adfb .PdfIndirectObject :_ccca =_fcdgd .ObjectNumber ;
case *_adfb .PdfObjectStream :_ccca =_fcdgd .ObjectNumber ;case *_adfb .PdfObjectStreams :_ccca =_fcdgd .ObjectNumber ;default:_bef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_bcgfdf );
return ErrTypeCheck ;};if _ddga ._bfagb !=nil &&_bcgfdf !=_ddga ._bgbdb {_begba :=_ddga ._bfagb .Encrypt (_bcgfdf ,_ccca ,0);if _begba !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_begba );
return _begba ;};};_ddga .writeObject (int (_ccca ),_bcgfdf );};return nil ;};

// HasExtGState checks if ExtGState name is available.
func (_aedcc *PdfPage )HasExtGState (name _adfb .PdfObjectName )bool {if _aedcc .Resources ==nil {return false ;};if _aedcc .Resources .ExtGState ==nil {return false ;};_gabed ,_eega :=_adfb .TraceToDirectObject (_aedcc .Resources .ExtGState ).(*_adfb .PdfObjectDictionary );
if !_eega {_bef .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_adfb .TraceToDirectObject (_aedcc .Resources .ExtGState ));
return false ;};_ecdfd :=_gabed .Get (name );_gaebf :=_ecdfd !=nil ;return _gaebf ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _adfb .PdfObject ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_fdgf :=PdfColorDeviceRGB {r ,g ,b };return &_fdgf ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_egab *PdfFieldButton )SetType (btype ButtonType ){_eedff :=uint32 (0);if _egab .Ff !=nil {_eedff =uint32 (*_egab .Ff );};switch btype {case ButtonTypePush :_eedff |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_eedff |=FieldFlagRadio .Mask ();
};_egab .Ff =_adfb .MakeInteger (int64 (_eedff ));};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_dffc *PdfFont )ToUnicode ()string {if _dffc .baseFields ()._gdgf ==nil {return "";};return _dffc .baseFields ()._gdgf .Name ();};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_befaf []byte ;_cdcd []float64 ;};func (_febge *pdfFontType0 )subsetRegistered ()error {_affc ,_eecfa :=_febge .DescendantFont ._gdcf .(*pdfCIDFontType2 );
if !_eecfa {_bef .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_febge .DescendantFont );return nil ;};if _affc ==nil {return nil ;
};if _affc ._ebcbf ==nil {_bef .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _febge ._bcdga ==nil {_bef .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_egfed ,_eecfa :=_adfb .GetStream (_affc ._ebcbf .FontFile2 );if !_eecfa {_bef .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _cfe .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cbdf ,_aabca :=_adfb .DecodeStream (_egfed );if _aabca !=nil {_bef .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_aabca );
return _aabca ;};_ggbab ,_aabca :=_dbc .Parse (_ae .NewReader (_cbdf ));if _aabca !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_egfed .Stream ));
return _aabca ;};var _dffa []rune ;var _febb *_dbc .Font ;switch _fdcge :=_febge ._bcdga .(type ){case *_ba .TrueTypeFontEncoder :_dffa =_fdcge .RegisteredRunes ();_febb ,_aabca =_ggbab .SubsetKeepRunes (_dffa );if _aabca !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aabca );
return _aabca ;};_fdcge .SubsetRegistered ();case *_ba .IdentityEncoder :_dffa =_fdcge .RegisteredRunes ();_ddfe :=make ([]_dbc .GlyphIndex ,len (_dffa ));for _ddec ,_ggdbf :=range _dffa {_ddfe [_ddec ]=_dbc .GlyphIndex (_ggdbf );};_febb ,_aabca =_ggbab .SubsetKeepIndices (_ddfe );
if _aabca !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aabca );return _aabca ;};case _ba .SimpleEncoder :_ebgad :=_fdcge .Charcodes ();for _ ,_bffdb :=range _ebgad {_fcceg ,_ccdc :=_fdcge .CharcodeToRune (_bffdb );if !_ccdc {_bef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_bffdb );
continue ;};_dffa =append (_dffa ,_fcceg );};default:return _ad .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_febge ._bcdga );
};var _gdefd _ae .Buffer ;_aabca =_febb .Write (&_gdefd );if _aabca !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aabca );return _aabca ;};if _febge ._gdgf !=nil {_abffb :=make (map[_bfa .CharCode ]rune ,len (_dffa ));for _ ,_fgbgf :=range _dffa {_bfabc ,_degg :=_febge ._bcdga .RuneToCharcode (_fgbgf );
if !_degg {continue ;};_abffb [_bfa .CharCode (_bfabc )]=_fgbgf ;};_febge ._gdgf =_bfa .NewToUnicodeCMap (_abffb );};_egfed ,_aabca =_adfb .MakeStream (_gdefd .Bytes (),_adfb .NewFlateEncoder ());if _aabca !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aabca );
return _aabca ;};_egfed .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_adfb .MakeInteger (int64 (_gdefd .Len ())));if _aacg ,_gcbe :=_adfb .GetStream (_affc ._ebcbf .FontFile2 );_gcbe {*_aacg =*_egfed ;}else {_affc ._ebcbf .FontFile2 =_egfed ;};_dcada :=_facf ();
if len (_febge ._gbed )> 0{_febge ._gbed =_bffbc (_febge ._gbed ,_dcada );};if len (_affc ._gbed )> 0{_affc ._gbed =_bffbc (_affc ._gbed ,_dcada );};if len (_febge ._abdd )> 0{_febge ._abdd =_bffbc (_febge ._abdd ,_dcada );};if _affc ._ebcbf !=nil {_bade ,_dgcab :=_adfb .GetName (_affc ._ebcbf .FontName );
if _dgcab &&len (_bade .String ())> 0{_dfbge :=_bffbc (_bade .String (),_dcada );_affc ._ebcbf .FontName =_adfb .MakeName (_dfbge );};};return nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _adfb .PdfObject ;LE _adfb .PdfObject ;BS _adfb .PdfObject ;IC _adfb .PdfObject ;BE _adfb .PdfObject ;IT _adfb .PdfObject ;Measure _adfb .PdfObject ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_dgdbd *PdfWriter )SetCatalogMetadata (meta _adfb .PdfObject )error {if meta ==nil {_dgdbd ._bcdaf .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_bebbf ,_deaaa :=_adfb .GetStream (meta );if !_deaaa {return _cfe .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_dgdbd .addObject (_bebbf );_dgdbd ._bcdaf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bebbf );return nil ;};func (_ddef *PdfWriter )writeTrailer (_caefab int ){_ddef .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _ebfdc :=0;
_ebfdc <=_caefab ;{for ;_ebfdc <=_caefab ;_ebfdc ++{_dabdb ,_egbdac :=_ddef ._aaead [_ebfdc ];if _egbdac &&(!_ddef ._fbggb ||_ddef ._fbggb &&(_dabdb .Type ==1&&_dabdb .Offset >=_ddef ._begea ||_dabdb .Type ==0)){break ;};};var _bbced int ;for _bbced =_ebfdc +1;
_bbced <=_caefab ;_bbced ++{_cbded ,_aecc :=_ddef ._aaead [_bbced ];if _aecc &&(!_ddef ._fbggb ||_ddef ._fbggb &&(_cbded .Type ==1&&_cbded .Offset > _ddef ._begea )){continue ;};break ;};_dbafc :=_ad .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_ebfdc ,_bbced -_ebfdc );
_ddef .writeString (_dbafc );for _aaae :=_ebfdc ;_aaae < _bbced ;_aaae ++{_fedfa :=_ddef ._aaead [_aaae ];switch _fedfa .Type {case 0:_dbafc =_ad .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_ddef .writeString (_dbafc );
case 1:_dbafc =_ad .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_fedfa .Offset ,0);_ddef .writeString (_dbafc );};};_ebfdc =_bbced +1;};_cdfbe :=_adfb .MakeDict ();_cdfbe .Set ("\u0049\u006e\u0066\u006f",_ddef ._bcfdf );
_cdfbe .Set ("\u0052\u006f\u006f\u0074",_ddef ._cfcab );_cdfbe .Set ("\u0053\u0069\u007a\u0065",_adfb .MakeInteger (int64 (_caefab +1)));if _ddef ._fbggb &&_ddef ._cgcded > 0{_cdfbe .Set ("\u0050\u0072\u0065\u0076",_adfb .MakeInteger (_ddef ._cgcded ));
};if _ddef ._bfagb !=nil {_cdfbe .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ddef ._bgbdb );};if _ddef ._dafea ==nil &&_ddef ._cgccef !=""&&_ddef ._bbaba !=""{_ddef ._dafea =_adfb .MakeArray (_adfb .MakeHexString (_ddef ._cgccef ),_adfb .MakeHexString (_ddef ._bbaba ));
};if _ddef ._dafea !=nil {_cdfbe .Set ("\u0049\u0044",_ddef ._dafea );_bef .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ddef ._dafea );};_ddef .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_ddef .writeString (_cdfbe .WriteString ());
_ddef .writeString ("\u000a");};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_adfb .PdfObjectString ;Q *_adfb .PdfObjectInteger ;DS *_adfb .PdfObjectString ;RV _adfb .PdfObject ;MaxLen *_adfb .PdfObjectInteger ;};func (_bbaa *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _bbaa ._aeea .GetCrypter ()!=nil &&!_bbaa ._aeea .IsAuthenticated (){return nil ,_ad .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cgfdfc :=_bbaa ._egeag ;_eagaa :=_cgfdfc .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _eagaa ==nil {return nil ,nil ;};_bef .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_fbecb :=_adfb .ResolveReference (_eagaa );
_bef .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_fbecb );if _accbfa :=_adfb .IsNullObject (_fbecb );_accbfa {_bef .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_abcgd ,_fcafd :=_fbecb .(*_adfb .PdfIndirectObject );if !_fcafd {if _ ,_bbaef :=_adfb .GetDict (_fbecb );!_bbaef {_bef .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_bef .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_abcgd =_adfb .MakeIndirectObject (_fbecb );};_gccge ,_fcafd :=_abcgd .PdfObject .(*_adfb .PdfObjectDictionary );if !_fcafd {return nil ,_cfe .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_bef .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_gccge );_cfbb ,_ ,_cffca :=_bbaa .buildOutlineTree (_abcgd ,nil ,nil ,nil );if _cffca !=nil {return nil ,_cffca ;};_bef .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_cfbb );
return _cfbb ,nil ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_deeea *PdfPageResources )HasXObjectByName (keyName _adfb .PdfObjectName )bool {_fcgg ,_ :=_deeea .GetXObjectByName (keyName );return _fcgg !=nil ;};func (_bfcf *PdfReader )newPdfAnnotationPopupFromDict (_fab *_adfb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_fdd :=PdfAnnotationPopup {};
_fdd .Parent =_fab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_fdd .Open =_fab .Get ("\u004f\u0070\u0065\u006e");return &_fdd ,nil ;};func (_ggee *PdfReader )resolveReference (_gfgda *_adfb .PdfObjectReference )(_adfb .PdfObject ,bool ,error ){_dgee ,_eefgc :=_ggee ._aeea .ObjCache [int (_gfgda .ObjectNumber )];
if !_eefgc {_bef .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gfgda );_eeeaa ,_dafce :=_ggee ._aeea .LookupByReference (*_gfgda );if _dafce !=nil {return nil ,false ,_dafce ;};_ggee ._aeea .ObjCache [int (_gfgda .ObjectNumber )]=_eeeaa ;
return _eeeaa ,false ,nil ;};return _dgee ,true ,nil ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_cfcbfg *PdfSignature ,_cabca Hasher ,_edbfc SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};func _effae (_eadbc *_adfb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dede :=&PdfFieldChoice {};_dede .Opt ,_ =_adfb .GetArray (_eadbc .Get ("\u004f\u0070\u0074"));
_dede .TI ,_ =_adfb .GetInt (_eadbc .Get ("\u0054\u0049"));_dede .I ,_ =_adfb .GetArray (_eadbc .Get ("\u0049"));return _dede ,nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_baa *PdfAppender )Write (w _gb .Writer )error {if _baa ._eagd {return _cfe .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_acdf :=NewPdfWriter ();_dfab ,_dgcd :=_adfb .GetDict (_acdf ._gdfab );if !_dgcd {return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_degc ,_dgcd :=_dfab .Get ("\u004b\u0069\u0064\u0073").(*_adfb .PdfObjectArray );if !_dgcd {return _cfe .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bgbfb ,_dgcd :=_dfab .Get ("\u0043\u006f\u0075n\u0074").(*_adfb .PdfObjectInteger );if !_dgcd {return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_gbcff :=_baa ._agd ._aeea ;_fede :=_gbcff .GetTrailer ();if _fede ==nil {return _cfe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_dbgb ,_dgcd :=_adfb .GetIndirect (_fede .Get ("\u0052\u006f\u006f\u0074"));
if !_dgcd {return _cfe .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_cbdd ,_dgcd :=_adfb .GetDict (_dbgb );if !_dgcd {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dbgb ,*_fede );
return _cfe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_beca :=range _cbdd .Keys (){if _acdf ._bcdaf .Get (_beca )==nil {_fcea :=_cbdd .Get (_beca );_acdf ._bcdaf .Set (_beca ,_fcea );};};if _baa ._ecb !=nil {_acdf ._bcdaf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_baa ._ecb .ToPdfObject ());
_baa .updateObjectsDeep (_baa ._ecb .ToPdfObject (),nil );};if _baa ._bba !=nil {_baa .updateObjectsDeep (_baa ._bba .ToPdfObject (),nil );_acdf ._bcdaf .Set ("\u0044\u0053\u0053",_baa ._bba .GetContainingPdfObject ());};if _baa ._eeeea !=nil {_acdf ._bcdaf .Set ("\u0050\u0065\u0072m\u0073",_baa ._eeeea .ToPdfObject ());
_baa .updateObjectsDeep (_baa ._eeeea .ToPdfObject (),nil );};if _acdf ._dbbecb .Major < 2{_acdf .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_acdf .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _begf ,_cddge :=_adfb .GetDict (_fede .Get ("\u0049\u006e\u0066\u006f"));
_cddge {if _gcaa ,_cgbg :=_adfb .GetDict (_acdf ._bcfdf );_cgbg {for _ ,_daag :=range _begf .Keys (){if _gcaa .Get (_daag )==nil {_gcaa .Set (_daag ,_begf .Get (_daag ));};};};};if _baa ._aacd !=nil {_acdf ._bcfdf =_adfb .MakeIndirectObject (_baa ._aacd .ToPdfObject ());
};_baa .addNewObject (_acdf ._bcfdf );_baa .addNewObject (_acdf ._cfcab );_ddbec :=false ;if len (_baa ._agd .PageList )!=len (_baa ._gde ){_ddbec =true ;}else {for _gdaab :=range _baa ._agd .PageList {switch {case _baa ._gde [_gdaab ]==_baa ._agd .PageList [_gdaab ]:case _baa ._gde [_gdaab ]==_baa .Reader .PageList [_gdaab ]:default:_ddbec =true ;
};if _ddbec {break ;};};};if _ddbec {_baa .updateObjectsDeep (_acdf ._gdfab ,nil );}else {_baa ._cgfd [_acdf ._gdfab ]=struct{}{};};_acdf ._gdfab .ObjectNumber =_baa .Reader ._cbba .ObjectNumber ;_baa ._bcd [_acdf ._gdfab ]=_baa .Reader ._cbba .ObjectNumber ;
_ebcfa :=[]_adfb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_decb :=range _baa ._gde {_cfee :=_decb .ToPdfObject ();
*_bgbfb =*_bgbfb +1;if _bcgd ,_agfb :=_cfee .(*_adfb .PdfIndirectObject );_agfb &&_bcgd .GetParser ()==_baa ._agd ._aeea {_degc .Append (&_bcgd .PdfObjectReference );continue ;};if _dea ,_aabc :=_adfb .GetDict (_cfee );_aabc {_caba ,_gbac :=_dea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_adfb .PdfIndirectObject );
for _gbac {_bef .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_caba );_caf ,_ccad :=_caba .PdfObject .(*_adfb .PdfObjectDictionary );if !_ccad {return _cfe .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cadb :=range _ebcfa {_bef .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cadb );if _dea .Get (_cadb )!=nil {_bef .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _ebd :=_caf .Get (_cadb );_ebd !=nil {_bef .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cadb );_dea .Set (_cadb ,_ebd );};};_caba ,_gbac =_caf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_adfb .PdfIndirectObject );
_bef .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_caf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dea .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_acdf ._gdfab );};_baa .updateObjectsDeep (_cfee ,nil );
_degc .Append (_cfee );};if _ ,_abbd :=_baa ._gbde .Seek (0,_gb .SeekStart );_abbd !=nil {return _abbd ;};_deffc :=make (map[SignatureHandler ]_gb .Writer );_dfbg :=_adfb .MakeArray ();for _ ,_ebfdb :=range _baa ._bfd {if _ecag ,_aaa :=_adfb .GetIndirect (_ebfdb );
_aaa {if _ccbf ,_gdfe :=_ecag .PdfObject .(*pdfSignDictionary );_gdfe {_dcca :=*_ccbf ._cegea ;var _cbbg error ;_deffc [_dcca ],_cbbg =_dcca .NewDigest (_ccbf ._fffga );if _cbbg !=nil {return _cbbg ;};_dfbg .Append (_adfb .MakeInteger (0xfffff),_adfb .MakeInteger (0xfffff));
};};};if _dfbg .Len ()> 0{_dfbg .Append (_adfb .MakeInteger (0xfffff),_adfb .MakeInteger (0xfffff));};for _ ,_gebea :=range _baa ._bfd {if _cbee ,_decf :=_adfb .GetIndirect (_gebea );_decf {if _ffeg ,_egbc :=_cbee .PdfObject .(*pdfSignDictionary );_egbc {_ffeg .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dfbg );
};};};_gaca :=len (_deffc )> 0;var _gcbd _gb .Reader =_baa ._gbde ;if _gaca {_aecb :=make ([]_gb .Writer ,0,len (_deffc ));for _ ,_dafa :=range _deffc {_aecb =append (_aecb ,_dafa );};_gcbd =_gb .TeeReader (_baa ._gbde ,_gb .MultiWriter (_aecb ...));};
_ceaf ,_cdbc :=_gb .Copy (w ,_gcbd );if _cdbc !=nil {return _cdbc ;};if len (_baa ._bfd )==0{return nil ;};_acdf ._acabcf =_ceaf ;_acdf .ObjNumOffset =_baa ._ggef ;_acdf ._fbggb =true ;_acdf ._abedb =_baa ._aafa ;_acdf ._cgcded =_baa ._cfba ;_acdf ._begea =_baa ._bad ;
_acdf ._dbbecb =_baa ._agd .PdfVersion ();_acdf ._cgbb =_baa ._bcd ;_acdf ._bfagb =_baa ._aeaea .GetCrypter ();_acdf ._bgbdb =_baa ._aeaea .GetEncryptObj ();_aagfd :=_baa ._aeaea .GetXrefType ();if _aagfd !=nil {_eab :=*_aagfd ==_adfb .XrefTypeObjectStream ;
_acdf ._eebgd =&_eab ;};_acdf ._bfgf =map[_adfb .PdfObject ]struct{}{};_acdf ._fcefd =[]_adfb .PdfObject {};for _ ,_abab :=range _baa ._bfd {if _ ,_ddeg :=_baa ._cgfd [_abab ];_ddeg {continue ;};_acdf .addObject (_abab );};_fad :=w ;if _gaca {_fad =_ae .NewBuffer (nil );
};if _baa ._bbdg !=""&&_acdf ._bfagb ==nil {_acdf .Encrypt ([]byte (_baa ._bbdg ),[]byte (_baa ._bbdg ),_baa ._aggb );};if _cbcg :=_fede .Get ("\u0049\u0044");_cbcg !=nil {if _gaec ,_eebge :=_adfb .GetArray (_cbcg );_eebge {_acdf ._dafea =_gaec ;};};if _dbe :=_acdf .Write (_fad );
_dbe !=nil {return _dbe ;};if _gaca {_afcd :=_fad .(*_ae .Buffer ).Bytes ();_ccccb :=_adfb .MakeArray ();var _abec []*pdfSignDictionary ;var _eecg int64 ;for _ ,_cfag :=range _acdf ._fcefd {if _ffcd ,_deca :=_adfb .GetIndirect (_cfag );_deca {if _ebca ,_efaae :=_ffcd .PdfObject .(*pdfSignDictionary );
_efaae {_abec =append (_abec ,_ebca );_gdee :=_ebca ._daeba +int64 (_ebca ._bdfcfb );_ccccb .Append (_adfb .MakeInteger (_eecg ),_adfb .MakeInteger (_gdee -_eecg ));_eecg =_ebca ._daeba +int64 (_ebca ._cdagg );};};};_ccccb .Append (_adfb .MakeInteger (_eecg ),_adfb .MakeInteger (_ceaf +int64 (len (_afcd ))-_eecg ));
_bccc :=[]byte (_ccccb .WriteString ());for _ ,_dcg :=range _abec {_ebfg :=int (_dcg ._daeba -_ceaf );for _gdfcd :=_dcg ._agcg ;_gdfcd < _dcg ._dgbgf ;_gdfcd ++{_afcd [_ebfg +_gdfcd ]=' ';};_beefa :=_afcd [_ebfg +_dcg ._agcg :_ebfg +_dcg ._dgbgf ];copy (_beefa ,_bccc );
};var _fagg int ;for _ ,_abcb :=range _abec {_daagd :=int (_abcb ._daeba -_ceaf );_gdgb :=_afcd [_fagg :_daagd +_abcb ._bdfcfb ];_aaab :=*_abcb ._cegea ;_deffc [_aaab ].Write (_gdgb );_fagg =_daagd +_abcb ._cdagg ;};for _ ,_abcf :=range _abec {_ceaea :=_afcd [_fagg :];
_fdfe :=*_abcf ._cegea ;_deffc [_fdfe ].Write (_ceaea );};for _ ,_fgge :=range _abec {_acfg :=int (_fgge ._daeba -_ceaf );_cdge :=*_fgge ._cegea ;_dade :=_deffc [_cdge ];if _dagg :=_cdge .Sign (_fgge ._fffga ,_dade );_dagg !=nil {return _dagg ;};_fgge ._fffga .ByteRange =_ccccb ;
_badb :=[]byte (_fgge ._fffga .Contents .WriteString ());for _gdcg :=_fgge ._agcg ;_gdcg < _fgge ._dgbgf ;_gdcg ++{_afcd [_acfg +_gdcg ]=' ';};for _eea :=_fgge ._bdfcfb ;_eea < _fgge ._cdagg ;_eea ++{_afcd [_acfg +_eea ]=' ';};_aafad :=_afcd [_acfg +_fgge ._agcg :_acfg +_fgge ._dgbgf ];
copy (_aafad ,_bccc );_aafad =_afcd [_acfg +_fgge ._bdfcfb :_acfg +_fgge ._cdagg ];copy (_aafad ,_badb );};_fdgd :=_ae .NewBuffer (_afcd );_ ,_cdbc =_gb .Copy (w ,_fdgd );if _cdbc !=nil {return _cdbc ;};};_baa ._eagd =true ;return nil ;};func _baffe (_ccgaa string )map[string ]string {_fade :=_bedb .Split (_ccgaa ,-1);
_bbeae :=map[string ]string {};for _ ,_gcdbf :=range _fade {_cbge :=_ccebd .FindStringSubmatch (_gcdbf );if _cbge ==nil {continue ;};_afgbc ,_dffad :=_cbge [1],_cbge [2];_bbeae [_afgbc ]=_dffad ;};return _bbeae ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_deb :=NewPdfAction ();_ef :=&PdfActionGoTo {};_ef .PdfAction =_deb ;_deb .SetContext (_ef );return _ef ;};

// GetPdfInfo returns the PDF info dictionary.
func (_cebbe *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_cabfbd ,_cgfdfa :=_cebbe .GetTrailer ();if _cgfdfa !=nil {return nil ,_cgfdfa ;};var _eaffb *_adfb .PdfObjectDictionary ;_bgbace :=_cabfbd .Get ("\u0049\u006e\u0066\u006f");switch _gggcb :=_bgbace .(type ){case *_adfb .PdfObjectReference :_begcd :=_gggcb ;
_bgbace ,_cgfdfa =_cebbe .GetIndirectObjectByNumber (int (_begcd .ObjectNumber ));_bgbace =_adfb .TraceToDirectObject (_bgbace );if _cgfdfa !=nil {return nil ,_cgfdfa ;};_eaffb ,_ =_bgbace .(*_adfb .PdfObjectDictionary );case *_adfb .PdfObjectDictionary :_eaffb =_gggcb ;
};if _eaffb ==nil {return nil ,_cfe .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_ffcae ,_cgfdfa :=NewPdfInfoFromObject (_eaffb );if _cgfdfa !=nil {return nil ,_cgfdfa ;
};return _ffcae ,nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_acba *PdfField )GetContext ()PdfModel {return _acba ._bafd };

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bffe :=NewPdfAnnotation ();_efga :=&PdfAnnotationSound {};_efga .PdfAnnotation =_bffe ;_efga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bffe .SetContext (_efga );return _efga ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_bgefg *Image )GetParamsDict ()*_adfb .PdfObjectDictionary {_fegae :=_adfb .MakeDict ();_fegae .Set ("\u0057\u0069\u0064t\u0068",_adfb .MakeInteger (_bgefg .Width ));_fegae .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_adfb .MakeInteger (_bgefg .Height ));
_fegae .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_adfb .MakeInteger (int64 (_bgefg .ColorComponents )));_fegae .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_adfb .MakeInteger (_bgefg .BitsPerComponent ));
return _fegae ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_egg :=&PdfAppender {_gbde :reader ._ddafc ,Reader :reader ,_aeaea :reader ._aeea ,_bgfg :reader ._aegfa };_feaf ,_fcbe :=_egg ._gbde .Seek (0,_gb .SeekEnd );
if _fcbe !=nil {return nil ,_fcbe ;};_egg ._bad =_feaf ;if _ ,_fcbe =_egg ._gbde .Seek (0,_gb .SeekStart );_fcbe !=nil {return nil ,_fcbe ;};_egg ._agd ,_fcbe =NewPdfReaderWithOpts (_egg ._gbde ,opts );if _fcbe !=nil {return nil ,_fcbe ;};for _ ,_ecefe :=range _egg .Reader .GetObjectNums (){if _egg ._ggef < _ecefe {_egg ._ggef =_ecefe ;
};};_egg ._aafa =_egg ._aeaea .GetXrefTable ();_egg ._cfba =_egg ._aeaea .GetXrefOffset ();_egg ._gde =append (_egg ._gde ,_egg ._agd .PageList ...);_egg ._gaf =make (map[_adfb .PdfObject ]struct{});_egg ._bcd =make (map[_adfb .PdfObject ]int64 );_egg ._cgfd =make (map[_adfb .PdfObject ]struct{});
_egg ._ecb =_egg ._agd .AcroForm ;_egg ._bba =_egg ._agd .DSS ;if opts !=nil {_egg ._bbdg =opts .Password ;};if encryptOptions !=nil {_egg ._aggb =encryptOptions ;};return _egg ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _adfb .PdfObject ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _gb .ReadSeeker )(*CompliancePdfReader ,error ){const _daaf ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_bedcb ,_bebe :=_dcffa (rs ,&ReaderOpts {ComplianceMode :true },false ,_daaf );
if _bebe !=nil {return nil ,_bebe ;};return &CompliancePdfReader {PdfReader :_bedcb },nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_gecb :=NewPdfAction ();_fdb :=&PdfActionMovie {};_fdb .PdfAction =_gecb ;_gecb .SetContext (_fdb );return _fdb ;};func (_gfdfb *PdfWriter )writeOutputIntents ()error {if len (_gfdfb ._gaffc )==0{return nil ;};
_adabb :=make ([]_adfb .PdfObject ,len (_gfdfb ._gaffc ));for _addb ,_gbcdb :=range _gfdfb ._gaffc {_ggebd :=_gbcdb .ToPdfObject ();_adabb [_addb ]=_adfb .MakeIndirectObject (_ggebd );};_edbafe :=_adfb .MakeIndirectObject (_adfb .MakeArray (_adabb ...));
_gfdfb ._bcdaf .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_edbafe );if _dbdb :=_gfdfb .addObjects (_edbafe );_dbdb !=nil {return _dbdb ;};return nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_gbad :=&PdfColorspaceLab {};_gbad .BlackPoint =[]float64 {0.0,0.0,0.0};_gbad .Range =[]float64 {-100,100,-100,100};return _gbad ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_gcef *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _gcef ._befdc .(*PdfTilingPattern );};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_gbde _gb .ReadSeeker ;_aeaea *_adfb .PdfParser ;_agd *PdfReader ;Reader *PdfReader ;_gde []*PdfPage ;_ecb *PdfAcroForm ;_bba *DSS ;_eeeea *Permissions ;_aafa _adfb .XrefTable ;_cfba int64 ;_ggef int ;_bfd []_adfb .PdfObject ;_gaf map[_adfb .PdfObject ]struct{};
_bcd map[_adfb .PdfObject ]int64 ;_cgfd map[_adfb .PdfObject ]struct{};_bgfg map[_adfb .PdfObject ]struct{};_bad int64 ;_eagd bool ;_bbdg string ;_aggb *EncryptOptions ;_aacd *PdfInfo ;};

// ToPdfObject implements interface PdfModel.
func (_efcd *PdfBorderStyle )ToPdfObject ()_adfb .PdfObject {_febf :=_adfb .MakeDict ();if _efcd ._ecef !=nil {if _dfbf ,_bfe :=_efcd ._ecef .(*_adfb .PdfIndirectObject );_bfe {_dfbf .PdfObject =_febf ;};};_febf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _efcd .W !=nil {_febf .Set ("\u0057",_adfb .MakeFloat (*_efcd .W ));};if _efcd .S !=nil {_febf .Set ("\u0053",_adfb .MakeName (_efcd .S .GetPdfName ()));};if _efcd .D !=nil {_febf .Set ("\u0044",_adfb .MakeArrayFromIntegers (*_efcd .D ));};if _efcd ._ecef !=nil {return _efcd ._ecef ;
};return _febf ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_fcffg *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_eegfb ,_cfbg :=color .(*PdfColorDeviceRGB );if !_cfbg {_bef .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _eegfb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_agbf *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgdcg ,_cddca :=_adfb .GetNumbersAsFloat (objects );
if _cddca !=nil {return nil ,_cddca ;};return _agbf .ColorFromFloats (_bgdcg );};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fefga *Image )Resample (targetBitsPerComponent int64 ){if _fefga .BitsPerComponent ==targetBitsPerComponent {return ;};_gfeea :=_fefga .GetSamples ();if targetBitsPerComponent < _fefga .BitsPerComponent {_ceff :=_fefga .BitsPerComponent -targetBitsPerComponent ;
for _cgafg :=range _gfeea {_gfeea [_cgafg ]>>=uint (_ceff );};}else if targetBitsPerComponent > _fefga .BitsPerComponent {_ddcaa :=targetBitsPerComponent -_fefga .BitsPerComponent ;for _babga :=range _gfeea {_gfeea [_babga ]<<=uint (_ddcaa );};};_fefga .BitsPerComponent =targetBitsPerComponent ;
if _fefga .BitsPerComponent < 8{_fefga .resampleLowBits (_gfeea );return ;};_gadg :=_afe .BytesPerLine (int (_fefga .Width ),int (_fefga .BitsPerComponent ),_fefga .ColorComponents );_bgbfd :=make ([]byte ,_gadg *int (_fefga .Height ));var (_ffec ,_fbca ,_deba ,_eggff int ;
_gbace uint32 ;);for _deba =0;_deba < int (_fefga .Height );_deba ++{_ffec =_deba *_gadg ;_fbca =(_deba +1)*_gadg -1;_caca :=_fd .ResampleUint32 (_gfeea [_ffec :_fbca ],int (targetBitsPerComponent ),8);for _eggff ,_gbace =range _caca {_bgbfd [_eggff +_ffec ]=byte (_gbace );
};};_fefga .Data =_bgbfd ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _adfb .PdfObject ;Popup *PdfAnnotationPopup ;CA _adfb .PdfObject ;RC _adfb .PdfObject ;CreationDate _adfb .PdfObject ;IRT _adfb .PdfObject ;Subj _adfb .PdfObject ;RT _adfb .PdfObject ;IT _adfb .PdfObject ;ExData _adfb .PdfObject ;
};

// GetCerts returns the signature certificate chain.
func (_fcgddd *PdfSignature )GetCerts ()([]*_adf .Certificate ,error ){var _deebb []func ()([]*_adf .Certificate ,error );switch _abbae ,_ :=_adfb .GetNameVal (_fcgddd .SubFilter );_abbae {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_deebb =append (_deebb ,_fcgddd .extractChainFromPKCS7 ,_fcgddd .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_deebb =append (_deebb ,_fcgddd .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_deebb =append (_deebb ,_fcgddd .extractChainFromPKCS7 );
default:return nil ,_ad .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_abbae );};for _ ,_ecfac :=range _deebb {_baded ,_bgfba :=_ecfac ();if _bgfba !=nil {return nil ,_bgfba ;
};if len (_baded )> 0{return _baded ,nil ;};};return nil ,ErrSignNoCertificates ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_gbbda *PdfReader )GetCatalogMarkInfo ()(_adfb .PdfObject ,bool ){if _gbbda ._egeag ==nil {return nil ,false ;};_cccdd :=_gbbda ._egeag .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _cccdd ,_cccdd !=nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject implements interface PdfModel.
func (_gg *PdfAction )ToPdfObject ()_adfb .PdfObject {_dbd :=_gg ._ca ;_dgd :=_dbd .PdfObject .(*_adfb .PdfObjectDictionary );_dgd .Clear ();_dgd .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_dgd .SetIfNotNil ("\u0053",_gg .S );
_dgd .SetIfNotNil ("\u004e\u0065\u0078\u0074",_gg .Next );return _dbd ;};func (_dcgac *PdfReader )loadAnnotations (_ggdf _adfb .PdfObject )([]*PdfAnnotation ,error ){_gcdaf ,_fdeaae :=_adfb .GetArray (_ggdf );if !_fdeaae {return nil ,_ad .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _ceeca []*PdfAnnotation ;for _ ,_adfdf :=range _gcdaf .Elements (){_adfdf =_adfb .ResolveReference (_adfdf );if _ ,_afgfd :=_adfdf .(*_adfb .PdfObjectNull );_afgfd {continue ;};_cafgf ,_gebgb :=_adfdf .(*_adfb .PdfObjectDictionary );_ebccag ,_fdecf :=_adfdf .(*_adfb .PdfIndirectObject );
if _gebgb {_ebccag =&_adfb .PdfIndirectObject {};_ebccag .PdfObject =_cafgf ;}else {if !_fdecf {return nil ,_ad .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_cedca ,_adggg :=_dcgac .newPdfAnnotationFromIndirectObject (_ebccag );if _adggg !=nil {return nil ,_adggg ;};switch _dedgd :=_cedca .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_efce :=range _dcgac .AcroForm .AllFields (){if _efce ._dfgf ==_dedgd .Parent {_dedgd ._bbea =_efce ;
break ;};};};if _cedca !=nil {_ceeca =append (_ceeca ,_cedca );};};return _ceeca ,nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _adfb .PdfObject ;B _adfb .PdfObject ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_bdd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cgaf pdfCIDFontType0 )GetCharMetrics (code _ba .CharCode )(_ga .CharMetrics ,bool ){_begcb :=_cgaf ._adfc ;if _aaba ,_ggafa :=_cgaf ._dfddd [code ];_ggafa {_begcb =_aaba ;};return _ga .CharMetrics {Wx :_begcb },true ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bbcbb pdfFontType0 )GetCharMetrics (code _ba .CharCode )(_ga .CharMetrics ,bool ){if _bbcbb .DescendantFont ==nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bbcbb );
return _ga .CharMetrics {},false ;};return _bbcbb .DescendantFont .GetCharMetrics (code );};func _gdeb (_gcbbg _adfb .PdfObject ,_gcff *fontCommon )(*_bfa .CMap ,error ){_aega ,_bffaa :=_adfb .GetStream (_gcbbg );if !_bffaa {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_gcbbg );
return nil ,_adfb .ErrTypeError ;};_afedd ,_dcffe :=_adfb .DecodeStream (_aega );if _dcffe !=nil {return nil ,_dcffe ;};_fgcc ,_dcffe :=_bfa .LoadCmapFromData (_afedd ,!_gcff .isCIDFont ());if _dcffe !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_aega .ObjectNumber ,_dcffe );
};return _fgcc ,_dcffe ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bdbce pdfCIDFontType2 )GetCharMetrics (code _ba .CharCode )(_ga .CharMetrics ,bool ){if _bcfd ,_fccd :=_bdbce ._bdfe [code ];_fccd {return _ga .CharMetrics {Wx :_bcfd },true ;};_cfbgf :=rune (code );_gadf ,_ffeae :=_bdbce ._gccea [_cfbgf ];if !_ffeae {_gadf =int (_bdbce ._dcccf );
};return _ga .CharMetrics {Wx :float64 (_gadf )},true ;};func _gede (_acfd _adfb .PdfObject )(*PdfColorspaceICCBased ,error ){_aead :=&PdfColorspaceICCBased {};if _eagg ,_cbed :=_acfd .(*_adfb .PdfIndirectObject );_cbed {_aead ._dffd =_eagg ;};_acfd =_adfb .TraceToDirectObject (_acfd );
_efee ,_fbgc :=_acfd .(*_adfb .PdfObjectArray );if !_fbgc {return nil ,_ad .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _efee .Len ()!=2{return nil ,_ad .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_acfd =_adfb .TraceToDirectObject (_efee .Get (0));_gbgc ,_fbgc :=_acfd .(*_adfb .PdfObjectName );if !_fbgc {return nil ,_ad .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_gbgc !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_ad .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_acfd =_efee .Get (1);
_ccgf ,_fbgc :=_adfb .GetStream (_acfd );if !_fbgc {_bef .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_acfd );
return nil ,_ad .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fggbf :=_ccgf .PdfObjectDictionary ;_fgea ,_fbgc :=_fggbf .Get ("\u004e").(*_adfb .PdfObjectInteger );
if !_fbgc {return nil ,_ad .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fgea !=1&&*_fgea !=3&&*_fgea !=4{return nil ,_ad .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_aead .N =int (*_fgea );if _fadd :=_fggbf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_fadd !=nil {_gdeee ,_cbbe :=NewPdfColorspaceFromPdfObject (_fadd );if _cbbe !=nil {return nil ,_cbbe ;};_aead .Alternate =_gdeee ;};if _beac :=_fggbf .Get ("\u0052\u0061\u006eg\u0065");
_beac !=nil {_beac =_adfb .TraceToDirectObject (_beac );_aace ,_edde :=_beac .(*_adfb .PdfObjectArray );if !_edde {return nil ,_ad .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _aace .Len ()!=2*_aead .N {return nil ,_ad .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_fdcd ,_ccbb :=_aace .GetAsFloat64Slice ();if _ccbb !=nil {return nil ,_ccbb ;};_aead .Range =_fdcd ;}else {_aead .Range =make ([]float64 ,2*_aead .N );for _decfd :=0;_decfd < _aead .N ;_decfd ++{_aead .Range [2*_decfd ]=0.0;_aead .Range [2*_decfd +1]=1.0;
};};if _deef :=_fggbf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_deef !=nil {_cddd ,_ffgba :=_deef .(*_adfb .PdfObjectStream );if !_ffgba {return nil ,_ad .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_aead .Metadata =_cddd ;};_cbgg ,_abca :=_adfb .DecodeStream (_ccgf );if _abca !=nil {return nil ,_abca ;};_aead .Data =_cbgg ;_aead ._gebfd =_ccgf ;return _aead ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _adfb .PdfObject ;FS _adfb .PdfObject ;F _adfb .PdfObject ;UF _adfb .PdfObject ;DOS _adfb .PdfObject ;Mac _adfb .PdfObject ;Unix _adfb .PdfObject ;ID _adfb .PdfObject ;V _adfb .PdfObject ;EF _adfb .PdfObject ;RF _adfb .PdfObject ;
Desc _adfb .PdfObject ;CI _adfb .PdfObject ;_ggeb _adfb .PdfObject ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_aeea *_adfb .PdfParser ;_gdgdc _adfb .PdfObject ;_cbba *_adfb .PdfIndirectObject ;_efgdb *_adfb .PdfObjectDictionary ;_fccad []*_adfb .PdfIndirectObject ;PageList []*PdfPage ;_cgage int ;_egeag *_adfb .PdfObjectDictionary ;_fdcgb *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_bfced *Permissions ;_edee map[*PdfReader ]*PdfReader ;_cbdg []*PdfReader ;_bcfbd *modelManager ;_ggdgc bool ;_aegfa map[_adfb .PdfObject ]struct{};_ddafc _gb .ReadSeeker ;_bcdge string ;_bedgf bool ;_bccd *ReaderOpts ;
_bggca bool ;};func (_dff *PdfReader )newPdfAnnotation3DFromDict (_bdbd *_adfb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_daec :=PdfAnnotation3D {};_daec .T3DD =_bdbd .Get ("\u0033\u0044\u0044");_daec .T3DV =_bdbd .Get ("\u0033\u0044\u0056");_daec .T3DA =_bdbd .Get ("\u0033\u0044\u0041");
_daec .T3DI =_bdbd .Get ("\u0033\u0044\u0049");_daec .T3DB =_bdbd .Get ("\u0033\u0044\u0042");return &_daec ,nil ;};func (_efe *PdfReader )newPdfAnnotationPolyLineFromDict (_dcde *_adfb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_beff :=PdfAnnotationPolyLine {};
_cgf ,_fgfaa :=_efe .newPdfAnnotationMarkupFromDict (_dcde );if _fgfaa !=nil {return nil ,_fgfaa ;};_beff .PdfAnnotationMarkup =_cgf ;_beff .Vertices =_dcde .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_beff .LE =_dcde .Get ("\u004c\u0045");
_beff .BS =_dcde .Get ("\u0042\u0053");_beff .IC =_dcde .Get ("\u0049\u0043");_beff .BE =_dcde .Get ("\u0042\u0045");_beff .IT =_dcde .Get ("\u0049\u0054");_beff .Measure =_dcde .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_beff ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_fdafd :=&PdfPageResourcesColorspaces {};_fdafd .Names =[]string {};_fdafd .Colorspaces =map[string ]PdfColorspace {};_fdafd ._daccf =&_adfb .PdfIndirectObject {};return _fdafd ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_gfef :=NewPdfAnnotation ();_afdd :=&PdfAnnotationWatermark {};_afdd .PdfAnnotation =_gfef ;_gfef .SetContext (_afdd );return _afdd ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_bebba *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_cbcaa ,_gfebd :=_adfb .GetDict (_bebba ._bcdaf .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_gfebd {_cbcaa =_adfb .MakeDict ();_bebba ._bcdaf .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_cbcaa );
};_fcece ,_gfebd :=_adfb .GetDict (_cbcaa .Get (_adfb .PdfObjectName (extName )));if !_gfebd {_fcece =_adfb .MakeDict ();_cbcaa .Set (_adfb .PdfObjectName (extName ),_fcece );};if _bfaac ,_ :=_adfb .GetNameVal (_fcece .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_bfaac !=baseVersion {_fcece .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_adfb .MakeName (baseVersion ));};if _dbgddf ,_ :=_adfb .GetIntVal (_fcece .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_dbgddf !=extLevel {_fcece .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_adfb .MakeInteger (int64 (extLevel )));};};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_cggee *PdfAppender )SetDocInfo (info *PdfInfo ){_cggee ._aacd =info };func (_affee fontCommon )isCIDFont ()bool {if _affee ._bbbdc ==""{_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_affee );
};_ebde :=false ;switch _affee ._bbbdc {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_ebde =true ;};_bef .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_ebde ,_affee );
return _ebde ;};func (_ddbf *PdfReader )newPdfAnnotationRedactFromDict (_gbgd *_adfb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fbdf :=PdfAnnotationRedact {};_dedb ,_ggbg :=_ddbf .newPdfAnnotationMarkupFromDict (_gbgd );if _ggbg !=nil {return nil ,_ggbg ;
};_fbdf .PdfAnnotationMarkup =_dedb ;_fbdf .QuadPoints =_gbgd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fbdf .IC =_gbgd .Get ("\u0049\u0043");_fbdf .RO =_gbgd .Get ("\u0052\u004f");_fbdf .OverlayText =_gbgd .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_fbdf .Repeat =_gbgd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fbdf .DA =_gbgd .Get ("\u0044\u0041");_fbdf .Q =_gbgd .Get ("\u0051");return &_fbdf ,nil ;};func (_gbfgf *PdfWriter )getPdfVersion ()string {return _ad .Sprintf ("\u0025\u0064\u002e%\u0064",_gbfgf ._dbbecb .Major ,_gbfgf ._dbbecb .Minor );
};func (_egd *PdfReader )newPdfActionJavaScriptFromDict (_fcce *_adfb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_fcce .Get ("\u004a\u0053")},nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_eaac *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_efcdf ,_bbdf :=color .(*PdfColorCalGray );if !_bbdf {_bef .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_efcdf .Val ();X :=_eaac .WhitePoint [0]*_dc .Pow (ANorm ,_eaac .Gamma );Y :=_eaac .WhitePoint [1]*_dc .Pow (ANorm ,_eaac .Gamma );
Z :=_eaac .WhitePoint [2]*_dc .Pow (ANorm ,_eaac .Gamma );_dca :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ecda :=-0.969256*X +1.875992*Y +0.041556*Z ;_faba :=0.055648*X +-0.204043*Y +1.057311*Z ;_dca =_dc .Min (_dc .Max (_dca ,0),1.0);_ecda =_dc .Min (_dc .Max (_ecda ,0),1.0);
_faba =_dc .Min (_dc .Max (_faba ,0),1.0);return NewPdfColorDeviceRGB (_dca ,_ecda ,_faba ),nil ;};func (_cegedb *PdfWriter )copyObject (_gcbfb _adfb .PdfObject ,_cfccb map[_adfb .PdfObject ]_adfb .PdfObject ,_gaac map[_adfb .PdfObject ]struct{},_bgcfe bool )_adfb .PdfObject {_cdgbae :=!_cegedb ._fbggb &&_gaac !=nil ;
if _eabac ,_cfbeb :=_cfccb [_gcbfb ];_cfbeb {if _cdgbae &&!_bgcfe {delete (_gaac ,_gcbfb );};return _eabac ;};if _gcbfb ==nil {_agebb :=_adfb .MakeNull ();return _agebb ;};_bbafe :=_gcbfb ;switch _fdfcc :=_gcbfb .(type ){case *_adfb .PdfObjectArray :_becd :=_adfb .MakeArray ();
_bbafe =_becd ;_cfccb [_gcbfb ]=_bbafe ;for _ ,_dgce :=range _fdfcc .Elements (){_becd .Append (_cegedb .copyObject (_dgce ,_cfccb ,_gaac ,_bgcfe ));};case *_adfb .PdfObjectStreams :_bedbe :=&_adfb .PdfObjectStreams {PdfObjectReference :_fdfcc .PdfObjectReference };
_bbafe =_bedbe ;_cfccb [_gcbfb ]=_bbafe ;for _ ,_gccff :=range _fdfcc .Elements (){_bedbe .Append (_cegedb .copyObject (_gccff ,_cfccb ,_gaac ,_bgcfe ));};case *_adfb .PdfObjectStream :_gcbbd :=&_adfb .PdfObjectStream {Stream :_fdfcc .Stream ,PdfObjectReference :_fdfcc .PdfObjectReference };
_bbafe =_gcbbd ;_cfccb [_gcbfb ]=_bbafe ;_gcbbd .PdfObjectDictionary =_cegedb .copyObject (_fdfcc .PdfObjectDictionary ,_cfccb ,_gaac ,_bgcfe ).(*_adfb .PdfObjectDictionary );case *_adfb .PdfObjectDictionary :var _gcceag bool ;if _cdgbae &&!_bgcfe {if _bafg ,_ :=_adfb .GetNameVal (_fdfcc .Get ("\u0054\u0079\u0070\u0065"));
_bafg =="\u0050\u0061\u0067\u0065"{_ ,_acdfc :=_cegedb ._egee [_fdfcc ];_bgcfe =!_acdfc ;_gcceag =_bgcfe ;};};_fdeba :=_adfb .MakeDict ();_bbafe =_fdeba ;_cfccb [_gcbfb ]=_bbafe ;for _ ,_gfafg :=range _fdfcc .Keys (){_fdeba .Set (_gfafg ,_cegedb .copyObject (_fdfcc .Get (_gfafg ),_cfccb ,_gaac ,_bgcfe ));
};if _gcceag {_bbafe =_adfb .MakeNull ();_bgcfe =false ;};case *_adfb .PdfIndirectObject :_deefg :=&_adfb .PdfIndirectObject {PdfObjectReference :_fdfcc .PdfObjectReference };_bbafe =_deefg ;_cfccb [_gcbfb ]=_bbafe ;_deefg .PdfObject =_cegedb .copyObject (_fdfcc .PdfObject ,_cfccb ,_gaac ,_bgcfe );
case *_adfb .PdfObjectString :_efaeb :=*_fdfcc ;_bbafe =&_efaeb ;_cfccb [_gcbfb ]=_bbafe ;case *_adfb .PdfObjectName :_caefa :=*_fdfcc ;_bbafe =&_caefa ;_cfccb [_gcbfb ]=_bbafe ;case *_adfb .PdfObjectNull :_bbafe =_adfb .MakeNull ();_cfccb [_gcbfb ]=_bbafe ;
case *_adfb .PdfObjectInteger :_gadee :=*_fdfcc ;_bbafe =&_gadee ;_cfccb [_gcbfb ]=_bbafe ;case *_adfb .PdfObjectReference :_fegcb :=*_fdfcc ;_bbafe =&_fegcb ;_cfccb [_gcbfb ]=_bbafe ;case *_adfb .PdfObjectFloat :_edafe :=*_fdfcc ;_bbafe =&_edafe ;_cfccb [_gcbfb ]=_bbafe ;
case *_adfb .PdfObjectBool :_bacea :=*_fdfcc ;_bbafe =&_bacea ;_cfccb [_gcbfb ]=_bbafe ;case *pdfSignDictionary :_gbfbc :=&pdfSignDictionary {PdfObjectDictionary :_adfb .MakeDict (),_cegea :_fdfcc ._cegea ,_fffga :_fdfcc ._fffga };_bbafe =_gbfbc ;_cfccb [_gcbfb ]=_bbafe ;
for _ ,_dgdad :=range _fdfcc .Keys (){_gbfbc .Set (_dgdad ,_cegedb .copyObject (_fdfcc .Get (_dgdad ),_cfccb ,_gaac ,_bgcfe ));};default:_bef .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gcbfb );
};if _cdgbae &&_bgcfe {_gaac [_gcbfb ]=struct{}{};};return _bbafe ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_dbcda :=PdfColorCalRGB {a ,b ,c };return &_dbcda ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_dedbf *_adfb .PdfObjectDictionary ;_dadee *_adfb .PdfIndirectObject ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};type pdfSignDictionary struct{*_adfb .PdfObjectDictionary ;_cegea *SignatureHandler ;_fffga *PdfSignature ;_daeba int64 ;_bdfcfb int ;_cdagg int ;_agcg int ;_dgbgf int ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbfc *PdfColorspaceDeviceRGB )ToPdfObject ()_adfb .PdfObject {return _adfb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_fdab *XObjectForm )GetContainingPdfObject ()_adfb .PdfObject {return _fdab ._ddcaaa };

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_bddbce DefaultImageHandler )NewImageFromGoImage (goimg _ade .Image )(*Image ,error ){_bfgbc ,_fcdfb :=_afe .FromGoImage (goimg );if _fcdfb !=nil {return nil ,_fcdfb ;};_cbaf :=_ebfdg (_bfgbc .Base ());return &_cbaf ,nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_bdde *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _bdde ._aeea .GetRevisionNumber ()==0{return nil ,_cfe .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _cdcdc ,_gffb :=_bdde ._edee [_bdde ];_gffb {return _cdcdc ,nil ;};_ddgdc ,_gdbe :=_bdde ._aeea .GetPreviousRevisionReadSeeker ();if _gdbe !=nil {return nil ,_gdbe ;};_fbgde ,_gdbe :=_dcffa (_ddgdc ,_bdde ._bccd ,_bdde ._bggca ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _gdbe !=nil {return nil ,_gdbe ;};_bdde ._cbdg [_bdde ._aeea .GetRevisionNumber ()-1]=_fbgde ;_bdde ._edee [_bdde ]=_fbgde ;_fbgde ._edee =_bdde ._edee ;return _fbgde ,nil ;};

// RemovePage removes a page by number.
func (_efaad *PdfAppender )RemovePage (pageNum int ){_bgfgg :=pageNum -1;_efaad ._gde =append (_efaad ._gde [0:_bgfgg ],_efaad ._gde [pageNum :]...);};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bcbgb *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bcbgb .Base .GetNumComponents ();_fgca :=int (vals [0])*N ;
if _fgca < 0||(_fgca +N -1)>=len (_bcbgb ._edbc ){_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgca );return nil ,ErrColorOutOfRange ;};_fcdf :=_bcbgb ._edbc [_fgca :_fgca +N ];
var _aacb []float64 ;for _ ,_gdfec :=range _fcdf {_aacb =append (_aacb ,float64 (_gdfec )/255.0);};_fgbc ,_dcgg :=_bcbgb .Base .ColorFromFloats (_aacb );if _dcgg !=nil {return nil ,_dcgg ;};return _fgbc ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_df .PSProgram ;_egfg *_df .PSExecutor ;_bbcbaa []byte ;_bfaga *_adfb .PdfObjectStream ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_faacb *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _adfb .GetNumberAsFloat (_faacb .CapHeight );};

// ColorToRGB converts gray -> rgb for a single color component.
func (_gbcd *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbfg ,_dddg :=color .(*PdfColorDeviceGray );if !_dddg {_bef .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_cbfg ),float64 (*_cbfg ),float64 (*_cbfg )),nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_adfb .PdfObjectArray ;_adgd *Image ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_adfb .PdfObjectName ;P *_adfb .PdfObjectInteger ;V *_adfb .PdfObjectName ;};

// SetAlpha sets the alpha layer for the image.
func (_aeffc *Image )SetAlpha (alpha []byte ){_aeffc ._befaf =alpha };

// AllFields returns a flattened list of all fields in the form.
func (_cedd *PdfAcroForm )AllFields ()[]*PdfField {if _cedd ==nil {return nil ;};var _affa []*PdfField ;if _cedd .Fields !=nil {for _ ,_adbgc :=range *_cedd .Fields {_affa =append (_affa ,_bgdcd (_adbgc )...);};};return _affa ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_afef *BorderStyle )GetPdfName ()string {switch *_afef {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_geafd *PdfPageResources )GetXObjectFormByName (keyName _adfb .PdfObjectName )(*XObjectForm ,error ){_bcfce ,_dcace :=_geafd .GetXObjectByName (keyName );if _bcfce ==nil {return nil ,nil ;};if _dcace !=XObjectTypeForm {return nil ,_cfe .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_afdce ,_geddg :=NewXObjectFormFromStream (_bcfce );if _geddg !=nil {return nil ,_geddg ;};return _afdce ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_geba *PdfAnnotationInk )ToPdfObject ()_adfb .PdfObject {_geba .PdfAnnotation .ToPdfObject ();_cgecf :=_geba ._ged ;_bgcdg :=_cgecf .PdfObject .(*_adfb .PdfObjectDictionary );_geba .PdfAnnotationMarkup .appendToPdfDictionary (_bgcdg );_bgcdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0049\u006e\u006b"));
_bgcdg .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_geba .InkList );_bgcdg .SetIfNotNil ("\u0042\u0053",_geba .BS );return _cgecf ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_cfcbf *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_faed *PdfSignature ,_badba Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_eeefg *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_gefga *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_bddg *PdfSignature ,_gebbg Hasher )error ;};

// ToPdfObject implements interface PdfModel.
func (_cdbf *PdfAnnotationSound )ToPdfObject ()_adfb .PdfObject {_cdbf .PdfAnnotation .ToPdfObject ();_gacgd :=_cdbf ._ged ;_caae :=_gacgd .PdfObject .(*_adfb .PdfObjectDictionary );_cdbf .PdfAnnotationMarkup .appendToPdfDictionary (_caae );_caae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0053\u006f\u0075n\u0064"));
_caae .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_cdbf .Sound );_caae .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cdbf .Name );return _gacgd ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_efad *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _befgd []*PdfField ;if _efad .AcroForm !=nil {_befgd =_efad .AcroForm .AllFields ();};_cega :=make (map[*PdfField ]struct{},len (_befgd ));for _ ,_edbdc :=range _befgd {_cega [_edbdc ]=struct{}{};
};for _ ,_bfgdb :=range _efad .PageList {_geed ,_eeaggb :=_bfgdb .GetAnnotations ();if _eeaggb !=nil {return false ,_eeaggb ;};for _ ,_abgbe :=range _geed {_gfca ,_gcgcb :=_abgbe .GetContext ().(*PdfAnnotationWidget );if !_gcgcb {continue ;};_dcbec :=_gfca .Field ();
if _dcbec ==nil {return true ,nil ;};if _ ,_dfacb :=_cega [_dcbec ];!_dfacb {return true ,nil ;};};};return false ,nil ;};func (_dgfbe *PdfSignature )extractChainFromPKCS7 ()([]*_adf .Certificate ,error ){_gbaccb ,_cfdad :=_ce .Parse (_dgfbe .Contents .Bytes ());
if _cfdad !=nil {return nil ,_cfdad ;};return _gbaccb .Certificates ,nil ;};func _fccff ()string {_gebbe .Lock ();defer _gebbe .Unlock ();_aaffc :=_ag .GetLicenseKey ();if len (_ebdag )> 0&&(_aaffc .IsLicensed ()||_cecdb ){return _ebdag ;};return _ad .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_feaa (),_aaffc .TypeToString ());
};func (_fgdb *PdfReader )newPdfActionFromIndirectObject (_fbe *_adfb .PdfIndirectObject )(*PdfAction ,error ){_afg ,_dfe :=_fbe .PdfObject .(*_adfb .PdfObjectDictionary );if !_dfe {return nil ,_ad .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_fgdb ._bcfbd .GetModelFromPrimitive (_afg );model !=nil {_eff ,_ccd :=model .(*PdfAction );if !_ccd {return nil ,_ad .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _eff ,nil ;};_eg :=&PdfAction {};_eg ._ca =_fbe ;_fgdb ._bcfbd .Register (_afg ,_eg );if _affd :=_afg .Get ("\u0054\u0079\u0070\u0065");_affd !=nil {_abf ,_gaaa :=_affd .(*_adfb .PdfObjectName );if !_gaaa {_bef .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_affd );
}else {if *_abf !="\u0041\u0063\u0074\u0069\u006f\u006e"{_bef .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_abf );
};_eg .Type =_abf ;};};if _bdga :=_afg .Get ("\u004e\u0065\u0078\u0074");_bdga !=nil {_eg .Next =_bdga ;};if _adgg :=_afg .Get ("\u0053");_adgg !=nil {_eg .S =_adgg ;};_bed ,_gdd :=_eg .S .(*_adfb .PdfObjectName );if !_gdd {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eg .S );
return nil ,_ad .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eg .S );};_eef :=PdfActionType (_bed .String ());
switch _eef {case ActionTypeGoTo :_aea ,_fac :=_fgdb .newPdfActionGotoFromDict (_afg );if _fac !=nil {return nil ,_fac ;};_aea .PdfAction =_eg ;_eg ._beg =_aea ;return _eg ,nil ;case ActionTypeGoToR :_cab ,_aeaa :=_fgdb .newPdfActionGotoRFromDict (_afg );
if _aeaa !=nil {return nil ,_aeaa ;};_cab .PdfAction =_eg ;_eg ._beg =_cab ;return _eg ,nil ;case ActionTypeGoToE :_fed ,_cfb :=_fgdb .newPdfActionGotoEFromDict (_afg );if _cfb !=nil {return nil ,_cfb ;};_fed .PdfAction =_eg ;_eg ._beg =_fed ;return _eg ,nil ;
case ActionTypeLaunch :_egf ,_eag :=_fgdb .newPdfActionLaunchFromDict (_afg );if _eag !=nil {return nil ,_eag ;};_egf .PdfAction =_eg ;_eg ._beg =_egf ;return _eg ,nil ;case ActionTypeThread :_fdg ,_fgf :=_fgdb .newPdfActionThreadFromDict (_afg );if _fgf !=nil {return nil ,_fgf ;
};_fdg .PdfAction =_eg ;_eg ._beg =_fdg ;return _eg ,nil ;case ActionTypeURI :_aec ,_ffae :=_fgdb .newPdfActionURIFromDict (_afg );if _ffae !=nil {return nil ,_ffae ;};_aec .PdfAction =_eg ;_eg ._beg =_aec ;return _eg ,nil ;case ActionTypeSound :_gea ,_gcb :=_fgdb .newPdfActionSoundFromDict (_afg );
if _gcb !=nil {return nil ,_gcb ;};_gea .PdfAction =_eg ;_eg ._beg =_gea ;return _eg ,nil ;case ActionTypeMovie :_gbcf ,_bedc :=_fgdb .newPdfActionMovieFromDict (_afg );if _bedc !=nil {return nil ,_bedc ;};_gbcf .PdfAction =_eg ;_eg ._beg =_gbcf ;return _eg ,nil ;
case ActionTypeHide :_dabg ,_cabe :=_fgdb .newPdfActionHideFromDict (_afg );if _cabe !=nil {return nil ,_cabe ;};_dabg .PdfAction =_eg ;_eg ._beg =_dabg ;return _eg ,nil ;case ActionTypeNamed :_dge ,_fcf :=_fgdb .newPdfActionNamedFromDict (_afg );if _fcf !=nil {return nil ,_fcf ;
};_dge .PdfAction =_eg ;_eg ._beg =_dge ;return _eg ,nil ;case ActionTypeSubmitForm :_ceaa ,_gaae :=_fgdb .newPdfActionSubmitFormFromDict (_afg );if _gaae !=nil {return nil ,_gaae ;};_ceaa .PdfAction =_eg ;_eg ._beg =_ceaa ;return _eg ,nil ;case ActionTypeResetForm :_cdb ,_eec :=_fgdb .newPdfActionResetFormFromDict (_afg );
if _eec !=nil {return nil ,_eec ;};_cdb .PdfAction =_eg ;_eg ._beg =_cdb ;return _eg ,nil ;case ActionTypeImportData :_gee ,_gacg :=_fgdb .newPdfActionImportDataFromDict (_afg );if _gacg !=nil {return nil ,_gacg ;};_gee .PdfAction =_eg ;_eg ._beg =_gee ;
return _eg ,nil ;case ActionTypeSetOCGState :_bgd ,_fbd :=_fgdb .newPdfActionSetOCGStateFromDict (_afg );if _fbd !=nil {return nil ,_fbd ;};_bgd .PdfAction =_eg ;_eg ._beg =_bgd ;return _eg ,nil ;case ActionTypeRendition :_bff ,_dcf :=_fgdb .newPdfActionRenditionFromDict (_afg );
if _dcf !=nil {return nil ,_dcf ;};_bff .PdfAction =_eg ;_eg ._beg =_bff ;return _eg ,nil ;case ActionTypeTrans :_bdb ,_facc :=_fgdb .newPdfActionTransFromDict (_afg );if _facc !=nil {return nil ,_facc ;};_bdb .PdfAction =_eg ;_eg ._beg =_bdb ;return _eg ,nil ;
case ActionTypeGoTo3DView :_eefe ,_bgca :=_fgdb .newPdfActionGoTo3DViewFromDict (_afg );if _bgca !=nil {return nil ,_bgca ;};_eefe .PdfAction =_eg ;_eg ._beg =_eefe ;return _eg ,nil ;case ActionTypeJavaScript :_dcff ,_edc :=_fgdb .newPdfActionJavaScriptFromDict (_afg );
if _edc !=nil {return nil ,_edc ;};_dcff .PdfAction =_eg ;_eg ._beg =_dcff ;return _eg ,nil ;};_bef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_eef );
return nil ,nil ;};func (_eebbd *pdfFontSimple )updateStandard14Font (){_ceefb ,_cbgge :=_eebbd .Encoder ().(_ba .SimpleEncoder );if !_cbgge {_bef .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_eebbd .Encoder (),_eebbd );
return ;};_dccg :=_ceefb .Charcodes ();_eebbd ._babf =make (map[_ba .CharCode ]float64 ,len (_dccg ));for _ ,_cgee :=range _dccg {_ccabb ,_ :=_ceefb .CharcodeToRune (_cgee );_ccag ,_ :=_eebbd ._gcbae .Read (_ccabb );_eebbd ._babf [_cgee ]=_ccag .Wx ;};
};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_effbc *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_cgbge :=func (_aegee float64 )float64 {if _aegee >=6.0/29{return _aegee *_aegee *_aegee ;};return 108.0/841*(_aegee -4/29);};_gfbd :=img ._cdcd ;if len (_gfbd )!=6{_bef .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_gfbd =_effbc .DecodeArray ();};_aefd :=_fd .NewReader (img .getBase ());_befd :=_afe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._befaf ,img ._cdcd );_dgcb :=_fd .NewWriter (_befd );_agdd :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;
_abad :=make ([]uint32 ,3);var (_becc error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fbaa ,_gebee ,_abef float64 ;);for {_becc =_aefd .ReadSamples (_abad );if _becc ==_gb .EOF {break ;}else if _becc !=nil {return img ,_becc ;};Ls =float64 (_abad [0])/_agdd ;As =float64 (_abad [1])/_agdd ;
Bs =float64 (_abad [2])/_agdd ;Ls =_afe .LinearInterpolate (Ls ,0.0,1.0,_gfbd [0],_gfbd [1]);As =_afe .LinearInterpolate (As ,0.0,1.0,_gfbd [2],_gfbd [3]);Bs =_afe .LinearInterpolate (Bs ,0.0,1.0,_gfbd [4],_gfbd [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_effbc .WhitePoint [0]*_cgbge (L );Y =_effbc .WhitePoint [1]*_cgbge (M );Z =_effbc .WhitePoint [2]*_cgbge (N );_fbaa =3.240479*X +-1.537150*Y +-0.498535*Z ;_gebee =-0.969256*X +1.875992*Y +0.041556*Z ;_abef =0.055648*X +-0.204043*Y +1.057311*Z ;
_fbaa =_dc .Min (_dc .Max (_fbaa ,0),1.0);_gebee =_dc .Min (_dc .Max (_gebee ,0),1.0);_abef =_dc .Min (_dc .Max (_abef ,0),1.0);_abad [0]=uint32 (_fbaa *_agdd );_abad [1]=uint32 (_gebee *_agdd );_abad [2]=uint32 (_abef *_agdd );if _becc =_dgcb .WriteSamples (_abad );
_becc !=nil {return img ,_becc ;};};return _ebfdg (&_befd ),nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_bbeaad :=appender .Reader .DSS ;if _bbeaad ==nil {_bbeaad =NewDSS ();};if _cgdcg :=_bbeaad .generateHashMaps ();_cgdcg !=nil {return nil ,_cgdcg ;};return &LTV {CertClient :_ccg .NewCertClient (),OCSPClient :_ccg .NewOCSPClient (),CRLClient :_ccg .NewCRLClient (),SkipExisting :true ,_bfdea :appender ,_gacgc :_bbeaad },nil ;
};func _gdgg (_bcage *PdfField ,_adad _adfb .PdfObject ){for _ ,_fcafe :=range _bcage .Annotations {_fcafe .AS =_adad ;_fcafe .ToPdfObject ();};};

// ToPdfObject implements interface PdfModel.
func (_bege *PdfAnnotationSquare )ToPdfObject ()_adfb .PdfObject {_bege .PdfAnnotation .ToPdfObject ();_bffb :=_bege ._ged ;_gagc :=_bffb .PdfObject .(*_adfb .PdfObjectDictionary );if _bege .PdfAnnotationMarkup !=nil {_bege .PdfAnnotationMarkup .appendToPdfDictionary (_gagc );
};_gagc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_gagc .SetIfNotNil ("\u0042\u0053",_bege .BS );_gagc .SetIfNotNil ("\u0049\u0043",_bege .IC );_gagc .SetIfNotNil ("\u0042\u0045",_bege .BE );
_gagc .SetIfNotNil ("\u0052\u0044",_bege .RD );return _bffb ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_aegfa :map[_adfb .PdfObject ]struct{}{},_bcfbd :_faee (),_aeea :_adfb .NewParserFromString (txt )};};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _adfb .PdfObject ;MK _adfb .PdfObject ;A _adfb .PdfObject ;AA _adfb .PdfObject ;};func (_dabeg *LTV )getCerts (_edgc []*_adf .Certificate )([][]byte ,error ){_abcee :=make ([][]byte ,0,len (_edgc ));for _ ,_aggee :=range _edgc {_abcee =append (_abcee ,_aggee .Raw );
};return _abcee ,nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_ebcfd *DSS )GetContainingPdfObject ()_adfb .PdfObject {return _ebcfd ._dcac };var (CourierName =_ga .CourierName ;CourierBoldName =_ga .CourierBoldName ;CourierObliqueName =_ga .CourierObliqueName ;CourierBoldObliqueName =_ga .CourierBoldObliqueName ;
HelveticaName =_ga .HelveticaName ;HelveticaBoldName =_ga .HelveticaBoldName ;HelveticaObliqueName =_ga .HelveticaObliqueName ;HelveticaBoldObliqueName =_ga .HelveticaBoldObliqueName ;SymbolName =_ga .SymbolName ;ZapfDingbatsName =_ga .ZapfDingbatsName ;
TimesRomanName =_ga .TimesRomanName ;TimesBoldName =_ga .TimesBoldName ;TimesItalicName =_ga .TimesItalicName ;TimesBoldItalicName =_ga .TimesBoldItalicName ;);

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _adfb .PdfObject ;H _adfb .PdfObject ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _gb .ReadSeeker )(*PdfFont ,error ){const _egcga =_ba .CharCode (32);const _fccc =_ba .CharCode (255);_cfbf ,_aefg :=_dg .ReadAll (r );if _aefg !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_aefg );
return nil ,_aefg ;};_dggda ,_aefg :=_ga .TtfParse (_ae .NewReader (_cfbf ));if _aefg !=nil {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_aefg );
return nil ,_aefg ;};_cbbcg :=&pdfFontSimple {_babf :make (map[_ba .CharCode ]float64 ),fontCommon :fontCommon {_bbbdc :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_cbbcg ._ddabe =_ba .NewWinAnsiEncoder ();_cbbcg ._gbed =_dggda .PostScriptName ;
_cbbcg .FirstChar =_adfb .MakeInteger (int64 (_egcga ));_cbbcg .LastChar =_adfb .MakeInteger (int64 (_fccc ));_gbeb :=1000.0/float64 (_dggda .UnitsPerEm );if len (_dggda .Widths )<=0{return nil ,_cfe .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cafaf :=_gbeb *float64 (_dggda .Widths [0]);_bbga :=make ([]float64 ,0,_fccc -_egcga +1);for _cegc :=_egcga ;_cegc <=_fccc ;_cegc ++{_daeag ,_ecae :=_cbbcg .Encoder ().CharcodeToRune (_cegc );if !_ecae {_bef .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_cegc );
_bbga =append (_bbga ,_cafaf );continue ;};_bfedg ,_fegc :=_dggda .Chars [_daeag ];if !_fegc {_bef .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_bbga =append (_bbga ,_cafaf );continue ;
};_afdda :=_gbeb *float64 (_dggda .Widths [_bfedg ]);_bbga =append (_bbga ,_afdda );};_cbbcg .Widths =_adfb .MakeIndirectObject (_adfb .MakeArrayFromFloats (_bbga ));if len (_bbga )< int (_fccc -_egcga +1){_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_bbga ),255-32+1);
return nil ,_adfb .ErrRangeError ;};for _ffeab :=_egcga ;_ffeab <=_fccc ;_ffeab ++{_cbbcg ._babf [_ffeab ]=_bbga [_ffeab -_egcga ];};_cbbcg .Encoding =_adfb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");
_facac :=&PdfFontDescriptor {};_facac .FontName =_adfb .MakeName (_dggda .PostScriptName );_facac .Ascent =_adfb .MakeFloat (_gbeb *float64 (_dggda .TypoAscender ));_facac .Descent =_adfb .MakeFloat (_gbeb *float64 (_dggda .TypoDescender ));_facac .CapHeight =_adfb .MakeFloat (_gbeb *float64 (_dggda .CapHeight ));
_facac .FontBBox =_adfb .MakeArrayFromFloats ([]float64 {_gbeb *float64 (_dggda .Xmin ),_gbeb *float64 (_dggda .Ymin ),_gbeb *float64 (_dggda .Xmax ),_gbeb *float64 (_dggda .Ymax )});_facac .ItalicAngle =_adfb .MakeFloat (_dggda .ItalicAngle );_facac .MissingWidth =_adfb .MakeFloat (_gbeb *float64 (_dggda .Widths [0]));
_aebag ,_aefg :=_adfb .MakeStream (_cfbf ,_adfb .NewFlateEncoder ());if _aefg !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aefg );
return nil ,_aefg ;};_aebag .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_adfb .MakeInteger (int64 (len (_cfbf ))));_facac .FontFile2 =_aebag ;if _dggda .Bold {_facac .StemV =_adfb .MakeInteger (120);}else {_facac .StemV =_adfb .MakeInteger (70);
};_dfacg :=_fcgaa ;if _dggda .IsFixedPitch {_dfacg |=_dggc ;};if _dggda .ItalicAngle !=0{_dfacg |=_fgcgb ;};_facac .Flags =_adfb .MakeInteger (int64 (_dfacg ));_cbbcg ._ebcbf =_facac ;_dggf :=&PdfFont {_gdcf :_cbbcg };return _dggf ,nil ;};

// IsSimple returns true if `font` is a simple font.
func (_dbfff *PdfFont )IsSimple ()bool {_ ,_afac :=_dbfff ._gdcf .(*pdfFontSimple );return _afac };

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_dadef *PdfPageResources )GetContainingPdfObject ()_adfb .PdfObject {return _dadef ._bccfgb };

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_adfb .PdfObjectArray ;Matrix *_adfb .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_gbc *PdfActionSetOCGState )ToPdfObject ()_adfb .PdfObject {_gbc .PdfAction .ToPdfObject ();_fgd :=_gbc ._ca ;_ecec :=_fgd .PdfObject .(*_adfb .PdfObjectDictionary );_ecec .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeSetOCGState )));
_ecec .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gbc .State );_ecec .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_gbc .PreserveRB );return _fgd ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_aggea *PdfFont )GetCharMetrics (code _ba .CharCode )(CharMetrics ,bool ){var _daecd _ga .CharMetrics ;switch _ddca :=_aggea ._gdcf .(type ){case *pdfFontSimple :if _bfade ,_dcgd :=_ddca .GetCharMetrics (code );_dcgd {return _bfade ,_dcgd ;};case *pdfFontType0 :if _geaee ,_gcccb :=_ddca .GetCharMetrics (code );
_gcccb {return _geaee ,_gcccb ;};case *pdfCIDFontType0 :if _faccg ,_dddc :=_ddca .GetCharMetrics (code );_dddc {return _faccg ,_dddc ;};case *pdfCIDFontType2 :if _abgc ,_bgeddf :=_ddca .GetCharMetrics (code );_bgeddf {return _abgc ,_bgeddf ;};case *pdfFontType3 :if _egbgc ,_baaca :=_ddca .GetCharMetrics (code );
_baaca {return _egbgc ,_baaca ;};default:_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_aggea ._gdcf );
return _daecd ,false ;};if _egeb ,_aedgc :=_aggea .GetFontDescriptor ();_aedgc ==nil &&_egeb !=nil {return _ga .CharMetrics {Wx :_egeb ._fafc },true ;};_bef .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_aggea );
return _daecd ,false ;};func (_egcgc *PdfAcroForm )fill (_aadab FieldValueProvider ,_egcba FieldAppearanceGenerator )error {if _egcgc ==nil {return nil ;};_cdcgc ,_fefa :=_aadab .FieldValues ();if _fefa !=nil {return _fefa ;};for _ ,_bgaca :=range _egcgc .AllFields (){_geebd :=_bgaca .PartialName ();
_bcfbf ,_gddea :=_cdcgc [_geebd ];if !_gddea {if _bfbfb ,_dcgbg :=_bgaca .FullName ();_dcgbg ==nil {_bcfbf ,_gddea =_cdcgc [_bfbfb ];};};if !_gddea {_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_geebd );
continue ;};if _bafdg :=_aecgc (_bgaca ,_bcfbf );_bafdg !=nil {return _bafdg ;};if _egcba ==nil {continue ;};for _ ,_deffb :=range _bgaca .Annotations {_acddd ,_faccd :=_egcba .GenerateAppearanceDict (_egcgc ,_bgaca ,_deffb );if _faccd !=nil {return _faccd ;
};_deffb .AP =_acddd ;_deffb .ToPdfObject ();};};return nil ;};

// GetBorderWidth returns the border style's width.
func (_fgef *PdfBorderStyle )GetBorderWidth ()float64 {if _fgef .W ==nil {return 1;};return *_fgef .W ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _adfb .StreamEncoder )(*XObjectImage ,error ){_bdcda :=NewXObjectImage ();return UpdateXObjectImageFromImage (_bdcda ,img ,cs ,encoder );};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fcdd *PdfField )Flags ()FieldFlag {var _cfaff FieldFlag ;_bddb ,_dcdce :=_fcdd .inherit (func (_ddgd *PdfField )bool {if _ddgd .Ff !=nil {_cfaff =FieldFlag (*_ddgd .Ff );return true ;};return false ;});if _dcdce !=nil {_bef .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_dcdce );
};if !_bddb {_bef .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _cfaff ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_dcbbc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_eggc *PdfColorCalRGB )GetNumComponents ()int {return 3};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _adfb .PdfObject ;RichMediaContent _adfb .PdfObject ;};func _fecg (_dded _adfb .PdfObject )(*PdfFunctionType2 ,error ){_agccf :=&PdfFunctionType2 {};var _aggaa *_adfb .PdfObjectDictionary ;
if _egbgcd ,_ffcgg :=_dded .(*_adfb .PdfIndirectObject );_ffcgg {_acgg ,_dcfdf :=_egbgcd .PdfObject .(*_adfb .PdfObjectDictionary );if !_dcfdf {return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_agccf ._cfcdc =_egbgcd ;_aggaa =_acgg ;}else if _eaff ,_bbdgad :=_dded .(*_adfb .PdfObjectDictionary );_bbdgad {_aggaa =_eaff ;}else {return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};
_bef .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_aggaa .String ());_bedef ,_dcdbc :=_adfb .TraceToDirectObject (_aggaa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_adfb .PdfObjectArray );if !_dcdbc {_bef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bedef .Len ()< 0||_bedef .Len ()%2!=0{_bef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_edfdc ,_fafcc :=_bedef .ToFloat64Array ();if _fafcc !=nil {return nil ,_fafcc ;};_agccf .Domain =_edfdc ;_bedef ,_dcdbc =_adfb .TraceToDirectObject (_aggaa .Get ("\u0052\u0061\u006eg\u0065")).(*_adfb .PdfObjectArray );
if _dcdbc {if _bedef .Len ()< 0||_bedef .Len ()%2!=0{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gebdd ,_dfbaa :=_bedef .ToFloat64Array ();if _dfbaa !=nil {return nil ,_dfbaa ;};_agccf .Range =_gebdd ;
};_bedef ,_dcdbc =_adfb .TraceToDirectObject (_aggaa .Get ("\u0043\u0030")).(*_adfb .PdfObjectArray );if _dcdbc {_acgf ,_adbaf :=_bedef .ToFloat64Array ();if _adbaf !=nil {return nil ,_adbaf ;};_agccf .C0 =_acgf ;};_bedef ,_dcdbc =_adfb .TraceToDirectObject (_aggaa .Get ("\u0043\u0031")).(*_adfb .PdfObjectArray );
if _dcdbc {_acge ,_dcba :=_bedef .ToFloat64Array ();if _dcba !=nil {return nil ,_dcba ;};_agccf .C1 =_acge ;};if len (_agccf .C0 )!=len (_agccf .C1 ){_bef .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_adfb .ErrRangeError ;};N ,_fafcc :=_adfb .GetNumberAsFloat (_adfb .TraceToDirectObject (_aggaa .Get ("\u004e")));if _fafcc !=nil {_bef .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_aggaa .String ());
return nil ,_fafcc ;};_agccf .N =N ;return _agccf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fdcgbb *PdfSignature )ToPdfObject ()_adfb .PdfObject {_faddb :=_fdcgbb ._gbebc ;var _gfce *_adfb .PdfObjectDictionary ;if _bgcgbf ,_gcagg :=_faddb .PdfObject .(*pdfSignDictionary );_gcagg {_gfce =_bgcgbf .PdfObjectDictionary ;}else {_gfce =_faddb .PdfObject .(*_adfb .PdfObjectDictionary );
};_gfce .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fdcgbb .Type );_gfce .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_fdcgbb .Filter );_gfce .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_fdcgbb .SubFilter );_gfce .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fdcgbb .ByteRange );
_gfce .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fdcgbb .Contents );_gfce .SetIfNotNil ("\u0043\u0065\u0072\u0074",_fdcgbb .Cert );_gfce .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fdcgbb .Name );_gfce .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_fdcgbb .Reason );
_gfce .SetIfNotNil ("\u004d",_fdcgbb .M );_gfce .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_fdcgbb .Reference );_gfce .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_fdcgbb .Changes );_gfce .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_fdcgbb .ContactInfo );
return _faddb ;};

// B returns the value of the blue component of the color.
func (_abed *PdfColorDeviceRGB )B ()float64 {return _abed [2]};type fontFile struct{_aebf string ;_fabda string ;_aeaeg _ba .SimpleEncoder ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_geddd *PdfShadingType4 )ToPdfObject ()_adfb .PdfObject {_geddd .PdfShading .ToPdfObject ();_ebbgd ,_fdbgd :=_geddd .getShadingDict ();if _fdbgd !=nil {_bef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _geddd .BitsPerCoordinate !=nil {_ebbgd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_geddd .BitsPerCoordinate );};if _geddd .BitsPerComponent !=nil {_ebbgd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_geddd .BitsPerComponent );
};if _geddd .BitsPerFlag !=nil {_ebbgd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_geddd .BitsPerFlag );};if _geddd .Decode !=nil {_ebbgd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_geddd .Decode );};if _geddd .Function !=nil {if len (_geddd .Function )==1{_ebbgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_geddd .Function [0].ToPdfObject ());
}else {_debea :=_adfb .MakeArray ();for _ ,_gade :=range _geddd .Function {_debea .Append (_gade .ToPdfObject ());};_ebbgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_debea );};};return _geddd ._egbfe ;};

// GetOutlineTree returns the outline tree.
func (_dbdgc *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _dbdgc ._fdcgb };

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_edge *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_cfe .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_effad ,_cac :=_afe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._befaf ,img ._cdcd );if _cac !=nil {return img ,_cac ;};_edda ,_cac :=_afe .NRGBAConverter .Convert (_effad );if _cac !=nil {return img ,_cac ;
};_ebfgc :=_ebfdg (_edda .Base ());_bef .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_bef .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_bef .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ebfgc .Data );
_bef .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ebfgc );return _ebfgc ,nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_cgeb *PdfAcroForm ,_bcebg *PdfField ,_affe *PdfAnnotationWidget )(*_adfb .PdfObjectDictionary ,error );};

// ColorToRGB converts an Indexed color to an RGB color.
func (_gefbc *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gefbc .Base ==nil {return nil ,_cfe .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gefbc .Base .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_eeg *PdfAnnotationStrikeOut )ToPdfObject ()_adfb .PdfObject {_eeg .PdfAnnotation .ToPdfObject ();_efgg :=_eeg ._ged ;_ceg :=_efgg .PdfObject .(*_adfb .PdfObjectDictionary );_eeg .PdfAnnotationMarkup .appendToPdfDictionary (_ceg );_ceg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_ceg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eeg .QuadPoints );return _efgg ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _adfb .PdfObject ;Name _adfb .PdfObject ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _gb .ReadSeeker )(*PdfFont ,error ){_abcc ,_bgcgb :=_dg .ReadAll (r );if _bgcgb !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bgcgb );
return nil ,_bgcgb ;};_fdda ,_bgcgb :=_ga .TtfParse (_ae .NewReader (_abcc ));if _bgcgb !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bgcgb );
return nil ,_bgcgb ;};_afcgf :=&pdfCIDFontType2 {fontCommon :fontCommon {_bbbdc :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_adfb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_fdda .Widths )<=0{return nil ,_cfe .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_edfeb :=1000.0/float64 (_fdda .UnitsPerEm );_aecff :=_edfeb *float64 (_fdda .Widths [0]);_gcaca :=make (map[rune ]int );_dbbef :=make (map[_ga .GID ]int );_gadaa :=_ga .GID (len (_fdda .Widths ));for _baffg ,_fadc :=range _fdda .Chars {if _fadc > _gadaa -1{continue ;
};_becce :=int (_edfeb *float64 (_fdda .Widths [_fadc ]));_gcaca [_baffg ]=_becce ;_dbbef [_fadc ]=_becce ;};_afcgf ._gccea =_gcaca ;_afcgf .DW =_adfb .MakeInteger (int64 (_aecff ));_gdead :=_acdc (_dbbef ,uint16 (_gadaa ));_afcgf .W =_adfb .MakeIndirectObject (_gdead );
_eabc :=_adfb .MakeDict ();_eabc .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_adfb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_eabc .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_adfb .MakeString ("\u0041\u0064\u006fb\u0065"));
_eabc .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_adfb .MakeInteger (0));_afcgf .CIDSystemInfo =_eabc ;_fbgac :=&PdfFontDescriptor {FontName :_adfb .MakeName (_fdda .PostScriptName ),Ascent :_adfb .MakeFloat (_edfeb *float64 (_fdda .TypoAscender )),Descent :_adfb .MakeFloat (_edfeb *float64 (_fdda .TypoDescender )),CapHeight :_adfb .MakeFloat (_edfeb *float64 (_fdda .CapHeight )),FontBBox :_adfb .MakeArrayFromFloats ([]float64 {_edfeb *float64 (_fdda .Xmin ),_edfeb *float64 (_fdda .Ymin ),_edfeb *float64 (_fdda .Xmax ),_edfeb *float64 (_fdda .Ymax )}),ItalicAngle :_adfb .MakeFloat (_fdda .ItalicAngle ),MissingWidth :_adfb .MakeFloat (_aecff )};
_dbaa ,_bgcgb :=_adfb .MakeStream (_abcc ,_adfb .NewFlateEncoder ());if _bgcgb !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bgcgb );
return nil ,_bgcgb ;};_dbaa .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_adfb .MakeInteger (int64 (len (_abcc ))));_fbgac .FontFile2 =_dbaa ;if _fdda .Bold {_fbgac .StemV =_adfb .MakeInteger (120);}else {_fbgac .StemV =_adfb .MakeInteger (70);
};_ecfb :=_cabab ;if _fdda .IsFixedPitch {_ecfb |=_dggc ;};if _fdda .ItalicAngle !=0{_ecfb |=_fgcgb ;};_fbgac .Flags =_adfb .MakeInteger (int64 (_ecfb ));_afcgf ._gbed =_fdda .PostScriptName ;_afcgf ._ebcbf =_fbgac ;_ddaf :=pdfFontType0 {fontCommon :fontCommon {_bbbdc :"\u0054\u0079\u0070e\u0030",_gbed :_fdda .PostScriptName },DescendantFont :&PdfFont {_gdcf :_afcgf },Encoding :_adfb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bcdga :_fdda .NewEncoder ()};
if len (_fdda .Chars )> 0{_gdcab :=make (map[_bfa .CharCode ]rune ,len (_fdda .Chars ));for _gfea ,_acdda :=range _fdda .Chars {_eggca :=_bfa .CharCode (_acdda );if _eecc ,_eabbf :=_gdcab [_eggca ];!_eabbf ||(_eabbf &&_eecc > _gfea ){_gdcab [_eggca ]=_gfea ;
};};_ddaf ._gdgf =_bfa .NewToUnicodeCMap (_gdcab );};_agcb :=PdfFont {_gdcf :&_ddaf };return &_agcb ,nil ;};func (_afdbg *fontFile )loadFromSegments (_fecfb ,_ceba []byte )error {_bef .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_fecfb ),len (_ceba ));
_bdcdb :=_afdbg .parseASCIIPart (_fecfb );if _bdcdb !=nil {return _bdcdb ;};_bef .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_afdbg );if len (_ceba )==0{return nil ;};_bef .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_afdbg );
return nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_ddccd *PdfPageResources )GenerateXObjectName ()_adfb .PdfObjectName {_abdaf :=1;for {_ecdeg :=_adfb .MakeName (_ad .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_abdaf ));if !_ddccd .HasXObjectByName (*_ecdeg ){return *_ecdeg ;};_abdaf ++;};};


// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _adfb .PdfObjectName ;};func _gfadf (_agdf *_adfb .PdfObjectArray )(float64 ,error ){_fdeeg ,_fcbeb :=_agdf .ToFloat64Array ();if _fcbeb !=nil {_bef .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agdf ,_fcbeb );
};switch len (_fdeeg ){case 1:return _fdeeg [0],nil ;case 3:_bdfeg :=PdfColorspaceDeviceRGB {};_ccddd ,_ffdca :=_bdfeg .ColorFromFloats (_fdeeg );if _ffdca !=nil {return 0.0,_ffdca ;};return _ccddd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_acgfa :=PdfColorspaceDeviceCMYK {};
_afdbf ,_dbecb :=_acgfa .ColorFromFloats (_fdeeg );if _dbecb !=nil {return 0.0,_dbecb ;};_faeac ,_dbecb :=_acgfa .ColorToRGB (_afdbf .(*PdfColorDeviceCMYK ));if _dbecb !=nil {return 0.0,_dbecb ;};return _faeac .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_fcbeb =_cfe .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_bef .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agdf ,_fcbeb );
return 0.0,_fcbeb ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_caabc *Image )GetSamples ()[]uint32 {_bdedf :=_fd .ResampleBytes (_caabc .Data ,int (_caabc .BitsPerComponent ));if _caabc .BitsPerComponent < 8{_bdedf =_caabc .samplesTrimPadding (_bdedf );};_acagb :=int (_caabc .Width )*int (_caabc .Height )*_caabc .ColorComponents ;
if len (_bdedf )< _acagb {_bef .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_bdedf ),_acagb );
return _bdedf ;}else if len (_bdedf )> _acagb {_bef .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_bdedf ),_acagb );
_bdedf =_bdedf [:_acagb ];};return _bdedf ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_bbbbg *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _bbbbg ._fagca ==nil {_bbbbg .GetAnnotations ();};_bbbbg ._fagca =append (_bbbbg ._fagca ,annot );};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_bgge PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_adfb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_ebb []_adfb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_dggb []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_gfebc *PdfReader )GetNameDictionary ()(_adfb .PdfObject ,error ){_cafgfc :=_adfb .ResolveReference (_gfebc ._egeag .Get ("\u004e\u0061\u006de\u0073"));if _cafgfc ==nil {return nil ,nil ;};if !_gfebc ._ggdgc {_ecgd :=_gfebc .traverseObjectData (_cafgfc );
if _ecgd !=nil {return nil ,_ecgd ;};};return _cafgfc ,nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cbc :=NewPdfAnnotation ();_efcg :=&PdfAnnotationCaret {};_efcg .PdfAnnotation =_cbc ;_efcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbc .SetContext (_efcg );return _efcg ;};func _fdfcb (_gfed *_adfb .PdfObjectDictionary ,_bafc *fontCommon )(*pdfFontType0 ,error ){_ecbe ,_ccgda :=_adfb .GetArray (_gfed .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_ccgda {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_bafc );
return nil ,_adfb .ErrRangeError ;};if _ecbe .Len ()!=1{_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_ecbe .Len ());return nil ,_adfb .ErrRangeError ;
};_feac ,_gcae :=_geaf (_ecbe .Get (0),false );if _gcae !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_gcae ,_bafc );
return nil ,_gcae ;};_eddgc :=_ecggd (_bafc );_eddgc .DescendantFont =_feac ;_efag ,_ccgda :=_adfb .GetNameVal (_gfed .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ccgda {if _efag =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_efag =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_eddgc ._bcdga =_ba .NewIdentityTextEncoder (_efag );
}else if _bfa .IsPredefinedCMap (_efag ){_eddgc ._cagfdd ,_gcae =_bfa .LoadPredefinedCMap (_efag );if _gcae !=nil {_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_efag ,_gcae );
};}else {_bef .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_efag );};};if _fgege :=_feac .baseFields ()._gdgf ;_fgege !=nil {if _ebfe :=_fgege .Name ();_ebfe =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_ebfe =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_ebfe =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_ebfe =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_eddgc ._bcdga =_ba .NewCMapEncoder (_efag ,_eddgc ._cagfdd ,_fgege );
};};return _eddgc ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_adfb .PdfObjectString ;Author *_adfb .PdfObjectString ;Subject *_adfb .PdfObjectString ;Keywords *_adfb .PdfObjectString ;Creator *_adfb .PdfObjectString ;Producer *_adfb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_adfb .PdfObjectName ;_cgdf *_adfb .PdfObjectDictionary ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_gbdcb *PdfColorspaceDeviceN )ToPdfObject ()_adfb .PdfObject {_dffg :=_adfb .MakeArray (_adfb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_dffg .Append (_gbdcb .ColorantNames );_dffg .Append (_gbdcb .AlternateSpace .ToPdfObject ());_dffg .Append (_gbdcb .TintTransform .ToPdfObject ());
if _gbdcb .Attributes !=nil {_dffg .Append (_gbdcb .Attributes .ToPdfObject ());};if _gbdcb ._dacd !=nil {_gbdcb ._dacd .PdfObject =_dffg ;return _gbdcb ._dacd ;};return _dffg ;};func (_ceac *PdfReader )newPdfActionTransFromDict (_ffef *_adfb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ffef .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};func _ebbc (_bcfcf _adfb .PdfObject )(*PdfColorspaceLab ,error ){_eafg :=NewPdfColorspaceLab ();if _fdfag ,_bfbd :=_bcfcf .(*_adfb .PdfIndirectObject );_bfbd {_eafg ._ebdg =_fdfag ;};_bcfcf =_adfb .TraceToDirectObject (_bcfcf );_dgad ,_cbce :=_bcfcf .(*_adfb .PdfObjectArray );
if !_cbce {return nil ,_ad .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dgad .Len ()!=2{return nil ,_ad .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bcfcf =_adfb .TraceToDirectObject (_dgad .Get (0));_efbc ,_cbce :=_bcfcf .(*_adfb .PdfObjectName );if !_cbce {return nil ,_ad .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_efbc !="\u004c\u0061\u0062"{return nil ,_ad .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_bcfcf =_adfb .TraceToDirectObject (_dgad .Get (1));_dcda ,_cbce :=_bcfcf .(*_adfb .PdfObjectDictionary );
if !_cbce {return nil ,_ad .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_bcfcf =_dcda .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bcfcf =_adfb .TraceToDirectObject (_bcfcf );_fcgbd ,_cbce :=_bcfcf .(*_adfb .PdfObjectArray );if !_cbce {return nil ,_ad .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _fcgbd .Len ()!=3{return nil ,_ad .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gbadd ,_bcccc :=_fcgbd .GetAsFloat64Slice ();
if _bcccc !=nil {return nil ,_bcccc ;};_eafg .WhitePoint =_gbadd ;_bcfcf =_dcda .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bcfcf !=nil {_bcfcf =_adfb .TraceToDirectObject (_bcfcf );_gcfdd ,_bcef :=_bcfcf .(*_adfb .PdfObjectArray );
if !_bcef {return nil ,_ad .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _gcfdd .Len ()!=3{return nil ,_ad .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_daeg ,_fbgg :=_gcfdd .GetAsFloat64Slice ();if _fbgg !=nil {return nil ,_fbgg ;};_eafg .BlackPoint =_daeg ;};_bcfcf =_dcda .Get ("\u0052\u0061\u006eg\u0065");if _bcfcf !=nil {_bcfcf =_adfb .TraceToDirectObject (_bcfcf );_ebgac ,_gfaa :=_bcfcf .(*_adfb .PdfObjectArray );
if !_gfaa {_bef .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_ad .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ebgac .Len ()!=4{_bef .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_ad .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dfdd ,_gead :=_ebgac .GetAsFloat64Slice ();if _gead !=nil {return nil ,_gead ;};_eafg .Range =_dfdd ;};return _eafg ,nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_cfcfca :=&XObjectForm {};_cdagb :=&_adfb .PdfObjectStream {};_cdagb .PdfObjectDictionary =_adfb .MakeDict ();_cfcfca ._ddcaaa =_cdagb ;return _cfcfca ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_edfcf *_adfb .PdfObjectDictionary ;Type *_adfb .PdfObjectName ;TransformMethod *_adfb .PdfObjectName ;TransformParams _adfb .PdfObject ;Data _adfb .PdfObject ;DigestMethod *_adfb .PdfObjectName ;};var (ErrRequiredAttributeMissing =_cfe .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_gdbc =_cfe .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_cfe .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_cfe .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_daf .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_adfb .ErrNotSupported );ErrType1CFontNotSupported =_daf .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_adfb .ErrNotSupported );
ErrType3FontNotSupported =_daf .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_adfb .ErrNotSupported );
ErrTTCmapNotSupported =_daf .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_adfb .ErrNotSupported );
ErrSignNotEnoughSpace =_daf .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_daf .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func (_eed *PdfAppender )replaceObject (_gcdcf ,_eggg _adfb .PdfObject ){switch _gggb :=_gcdcf .(type ){case *_adfb .PdfIndirectObject :_eed ._bcd [_eggg ]=_gggb .ObjectNumber ;
case *_adfb .PdfObjectStream :_eed ._bcd [_eggg ]=_gggb .ObjectNumber ;};};

// SetOCProperties sets the optional content properties.
func (_aaace *PdfWriter )SetOCProperties (ocProperties _adfb .PdfObject )error {_gggda :=_aaace ._bcdaf ;if ocProperties !=nil {_bef .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_gggda .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _aaace .addObjects (ocProperties );};return nil ;};func (_gfbb *PdfReader )newPdfActionResetFormFromDict (_cff *_adfb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_cff .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cff .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_gebbe .Lock ();defer _gebbe .Unlock ();_cbag =keywords };

// GetSubFilter returns SubFilter value or empty string.
func (_ccfga *pdfSignDictionary )GetSubFilter ()string {_ebgega :=_ccfga .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _ebgega ==nil {return "";};if _begcc ,_cagff :=_adfb .GetNameVal (_ebgega );_cagff {return _begcc ;};return "";};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_egfbb :=map[rune ]int {};for _ ,_cabfb :=range text {_egfbb [_cabfb ]++;};return _egfbb ;};

// ToPdfObject implements interface PdfModel.
func (_fea *PdfAnnotationWatermark )ToPdfObject ()_adfb .PdfObject {_fea .PdfAnnotation .ToPdfObject ();_fgff :=_fea ._ged ;_eeec :=_fgff .PdfObject .(*_adfb .PdfObjectDictionary );_eeec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_eeec .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fea .FixedPrint );return _fgff ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_fcdab *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_daeb ,_ ,_ffde :=_fcdab .CharcodesToUnicodeWithStats (_fcdab .BytesToCharcodes (data ));_eafda :=_ba .ExpandLigatures (_daeb );return _eafda ,_ffc .RuneCountInString (_eafda ),_ffde ;
};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_gcdae *CompliancePdfReader )error ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_babe *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aedc ,_effd :=_adfb .GetNumbersAsFloat (objects );
if _effd !=nil {return nil ,_effd ;};return _babe .ColorFromFloats (_aedc );};func (_ggaf *PdfFont )baseFields ()*fontCommon {if _ggaf ._gdcf ==nil {_bef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _ggaf ._gdcf .baseFields ();};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_acfad *PdfPageResources )GetPatternByName (keyName _adfb .PdfObjectName )(*PdfPattern ,bool ){if _acfad .Pattern ==nil {return nil ,false ;};_afddd ,_ddcfc :=_adfb .TraceToDirectObject (_acfad .Pattern ).(*_adfb .PdfObjectDictionary );if !_ddcfc {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acfad .Pattern );
return nil ,false ;};if _begb :=_afddd .Get (keyName );_begb !=nil {_fdddf ,_gebgf :=_bfbg (_begb );if _gebgf !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gebgf );
return nil ,false ;};return _fdddf ,true ;};return nil ,false ;};func (_dbag *pdfCIDFontType2 )baseFields ()*fontCommon {return &_dbag .fontCommon };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_eadcf *PdfPageResources )SetColorspaceByName (keyName _adfb .PdfObjectName ,cs PdfColorspace )error {_agbbd ,_gbcda :=_eadcf .GetColorspaces ();if _gbcda !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gbcda );
return _gbcda ;};if _agbbd ==nil {_agbbd =NewPdfPageResourcesColorspaces ();_eadcf .SetColorSpace (_agbbd );};_agbbd .Set (keyName ,cs );return nil ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gcedb *PdfPage )ToPdfObject ()_adfb .PdfObject {_acfaf :=_gcedb ._gcgac ;_gcedb .GetPageDict ();return _acfaf ;};

// String returns the name of the colorspace (DeviceN).
func (_aefe *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_caaff *PdfOutlineTreeNode )GetContainingPdfObject ()_adfb .PdfObject {return _caaff .GetContext ().GetContainingPdfObject ();};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// SetPatternByName sets a pattern resource specified by keyName.
func (_dcaba *PdfPageResources )SetPatternByName (keyName _adfb .PdfObjectName ,pattern _adfb .PdfObject )error {if _dcaba .Pattern ==nil {_dcaba .Pattern =_adfb .MakeDict ();};_cefab ,_deabf :=_dcaba .Pattern .(*_adfb .PdfObjectDictionary );if !_deabf {return _adfb .ErrTypeError ;
};_cefab .Set (keyName ,pattern );return nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cfcfe FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cfcfe .Mask ()&^fl .Mask ())};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_geca *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _geca .RunesToCharcodeBytes ([]rune (str ));};

// GetContainingPdfObject implements model.PdfModel interface.
func (_bdeaf *PdfOutputIntent )GetContainingPdfObject ()_adfb .PdfObject {return _bdeaf ._becg };

// BaseFont returns the font's "BaseFont" field.
func (_eefg *PdfFont )BaseFont ()string {return _eefg .baseFields ()._gbed };

// ToInteger convert to an integer format.
func (_ecbc *PdfColorCalGray )ToInteger (bits int )uint32 {_cbgc :=_dc .Pow (2,float64 (bits ))-1;return uint32 (_cbgc *_ecbc .Val ());};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_fdce :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_fdce .N =N ;return _fdce ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_adadd *Outline )Insert (index uint ,item *OutlineItem ){_ccde :=uint (len (_adadd .Entries ));if index > _ccde {index =_ccde ;};_adadd .Entries =append (_adadd .Entries [:index ],append ([]*OutlineItem {item },_adadd .Entries [index :]...)...);};
func (_dcbd *fontFile )parseASCIIPart (_fgbebf []byte )error {if len (_fgbebf )< 2||string (_fgbebf [:2])!="\u0025\u0021"{return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_aeacd ,_badc ,_efgcg :=_fadbe (_fgbebf );if _efgcg !=nil {return _efgcg ;};_dbfdd :=_baffe (_aeacd );_dcbd ._aebf =_dbfdd ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dcbd ._aebf ==""{_bef .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _badc !=""{_faec ,_gfdf :=_daadf (_badc );if _gfdf !=nil {return _gfdf ;};_dcbfg ,_gfdf :=_ba .NewCustomSimpleTextEncoder (_faec ,nil );if _gfdf !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_gfdf );
return nil ;};_dcbd ._aeaeg =_dcbfg ;};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_cefac *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafa :=vals [0];if _cafa < 0.0||_cafa > 100.0{_bef .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_cafa );
return nil ,ErrColorOutOfRange ;};_bcfcb :=vals [1];_dfba :=float64 (-100);_aecg :=float64 (100);if len (_cefac .Range )> 1{_dfba =_cefac .Range [0];_aecg =_cefac .Range [1];};if _bcfcb < _dfba ||_bcfcb > _aecg {_bef .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bcfcb ,_dfba ,_aecg );
return nil ,ErrColorOutOfRange ;};_daacf :=vals [2];_fbeg :=float64 (-100);_efcb :=float64 (100);if len (_cefac .Range )> 3{_fbeg =_cefac .Range [2];_efcb =_cefac .Range [3];};if _daacf < _fbeg ||_daacf > _efcb {_bef .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_daacf ,_fbeg ,_efcb );
return nil ,ErrColorOutOfRange ;};_dcaa :=NewPdfColorLab (_cafa ,_bcfcb ,_daacf );return _dcaa ,nil ;};func _fgfdb (_dffcd _adfb .PdfObject )(*fontFile ,error ){_bef .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_dffcd );
_bgbfcg :=&fontFile {};_dffcd =_adfb .TraceToDirectObject (_dffcd );_gegd ,_cgfcb :=_dffcd .(*_adfb .PdfObjectStream );if !_cgfcb {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_dffcd );
return nil ,_adfb .ErrTypeError ;};_egggb :=_gegd .PdfObjectDictionary ;_gdcaa ,_cgaeg :=_adfb .DecodeStream (_gegd );if _cgaeg !=nil {return nil ,_cgaeg ;};_dfdgae ,_cgfcb :=_adfb .GetNameVal (_egggb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cgfcb {_bgbfcg ._fabda =_dfdgae ;
if _dfdgae =="\u0054\u0079\u0070\u0065\u0031\u0043"{_bef .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_effac ,_ :=_adfb .GetIntVal (_egggb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_cgcda ,_ :=_adfb .GetIntVal (_egggb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _effac > len (_gdcaa ){_effac =len (_gdcaa );
};if _effac +_cgcda > len (_gdcaa ){_cgcda =len (_gdcaa )-_effac ;};_dafad :=_gdcaa [:_effac ];var _bdfcf []byte ;if _cgcda > 0{_bdfcf =_gdcaa [_effac :_effac +_cgcda ];};if _effac > 0&&_cgcda > 0{_cfea :=_bgbfcg .loadFromSegments (_dafad ,_bdfcf );if _cfea !=nil {return nil ,_cfea ;
};};return _bgbfcg ,nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _adfb .PdfObject )(_adfb .PdfObjectName ,error ){var _fcge *_adfb .PdfObjectName ;var _bcff *_adfb .PdfObjectArray ;if _fbbgc ,_bfea :=obj .(*_adfb .PdfIndirectObject );_bfea {if _edga ,_ccgde :=_fbbgc .PdfObject .(*_adfb .PdfObjectArray );
_ccgde {_bcff =_edga ;}else if _cgff ,_ggga :=_fbbgc .PdfObject .(*_adfb .PdfObjectName );_ggga {_fcge =_cgff ;};}else if _ebef ,_eda :=obj .(*_adfb .PdfObjectArray );_eda {_bcff =_ebef ;}else if _baaf ,_dddb :=obj .(*_adfb .PdfObjectName );_dddb {_fcge =_baaf ;
};if _fcge !=nil {switch *_fcge {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fcge ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fcge ,nil ;
};};if _bcff !=nil &&_bcff .Len ()> 0{if _beged ,_gdgd :=_bcff .Get (0).(*_adfb .PdfObjectName );_gdgd {switch *_beged {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bcff .Len ()==1{return *_beged ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_beged ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_beged ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_beged ,nil ;};};};return "",nil ;};func (_ebeb *PdfWriter )addObjects (_adgga _adfb .PdfObject )error {_bef .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _aegeb ,_dbac :=_adgga .(*_adfb .PdfIndirectObject );_dbac {_bef .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_bef .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_adgga ,_aegeb );_bef .Log .Trace ("\u002d\u0020\u0025\u0073",_aegeb .PdfObject );
if _ebeb .addObject (_aegeb ){_ddgfg :=_ebeb .addObjects (_aegeb .PdfObject );if _ddgfg !=nil {return _ddgfg ;};};return nil ;};if _deegb ,_fgadb :=_adgga .(*_adfb .PdfObjectStream );_fgadb {_bef .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_bef .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_adgga ,_adgga );
if _ebeb .addObject (_deegb ){_gcfg :=_ebeb .addObjects (_deegb .PdfObjectDictionary );if _gcfg !=nil {return _gcfg ;};};return nil ;};if _gcegc ,_gddae :=_adgga .(*_adfb .PdfObjectDictionary );_gddae {_bef .Log .Trace ("\u0044\u0069\u0063\u0074");_bef .Log .Trace ("\u002d\u0020\u0025\u0073",_adgga );
for _ ,_egaa :=range _gcegc .Keys (){_cbadb :=_gcegc .Get (_egaa );if _eeedb ,_egbfc :=_cbadb .(*_adfb .PdfObjectReference );_egbfc {_cbadb =_eeedb .Resolve ();_gcegc .Set (_egaa ,_cbadb );};if _egaa !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _acbd :=_ebeb .addObjects (_cbadb );
_acbd !=nil {return _acbd ;};}else {if _ ,_afgfc :=_cbadb .(*_adfb .PdfObjectNull );_afgfc {continue ;};if _abae :=_ebeb .hasObject (_cbadb );!_abae {_bef .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_cbadb ,_cbadb ,_cbadb );
_ebeb ._caecc [_cbadb ]=append (_ebeb ._caecc [_cbadb ],_gcegc );};};};return nil ;};if _eafbb ,_dggcf :=_adgga .(*_adfb .PdfObjectArray );_dggcf {_bef .Log .Trace ("\u0041\u0072\u0072a\u0079");_bef .Log .Trace ("\u002d\u0020\u0025\u0073",_adgga );if _eafbb ==nil {return _cfe .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _bgcac ,_dbdeg :=range _eafbb .Elements (){if _bgacff ,_bbbbe :=_dbdeg .(*_adfb .PdfObjectReference );_bbbbe {_dbdeg =_bgacff .Resolve ();_eafbb .Set (_bgcac ,_dbdeg );};if _gbcegd :=_ebeb .addObjects (_dbdeg );_gbcegd !=nil {return _gbcegd ;};};
return nil ;};if _ ,_gfcd :=_adgga .(*_adfb .PdfObjectReference );_gfcd {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_adgga );
return _cfe .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_edgee *XObjectForm )SetContentStream (content []byte ,encoder _adfb .StreamEncoder )error {_fdba :=content ;if encoder ==nil {if _edgee .Filter !=nil {encoder =_edgee .Filter ;}else {encoder =_adfb .NewRawEncoder ();};};_ecbfa ,_ecbdf :=encoder .EncodeBytes (_fdba );
if _ecbdf !=nil {return _ecbdf ;};_fdba =_ecbfa ;_edgee .Stream =_fdba ;_edgee .Filter =encoder ;return nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_facaa *PdfPageResources )HasExtGState (keyName _adfb .PdfObjectName )bool {_ ,_fbbd :=_facaa .GetFontByName (keyName );return _fbbd ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;
BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_cdef :=PdfColorCalGray (grayVal );return &_cdef ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _gb .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _ebbbab ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dcffa (rs ,opts ,true ,_ebbbab );
};var _ pdfFont =(*pdfFontType3 )(nil );

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_befdc PdfModel ;_fcgcb _adfb .PdfObject ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_eaa :=NewPdfAnnotation ();_cce :=&PdfAnnotationSquare {};_cce .PdfAnnotation =_eaa ;_cce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaa .SetContext (_cce );return _cce ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dage *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject returns the PDF representation of the function.
func (_degf *PdfFunctionType3 )ToPdfObject ()_adfb .PdfObject {_ggdec :=_adfb .MakeDict ();_ggdec .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_adfb .MakeInteger (3));_gdcbf :=&_adfb .PdfObjectArray {};for _ ,_abdeb :=range _degf .Domain {_gdcbf .Append (_adfb .MakeFloat (_abdeb ));
};_ggdec .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gdcbf );if _degf .Range !=nil {_edfgf :=&_adfb .PdfObjectArray {};for _ ,_eggced :=range _degf .Range {_edfgf .Append (_adfb .MakeFloat (_eggced ));};_ggdec .Set ("\u0052\u0061\u006eg\u0065",_edfgf );
};if _degf .Functions !=nil {_cfgc :=&_adfb .PdfObjectArray {};for _ ,_fgfaac :=range _degf .Functions {_cfgc .Append (_fgfaac .ToPdfObject ());};_ggdec .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_cfgc );};if _degf .Bounds !=nil {_eedbe :=&_adfb .PdfObjectArray {};
for _ ,_afdbcg :=range _degf .Bounds {_eedbe .Append (_adfb .MakeFloat (_afdbcg ));};_ggdec .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_eedbe );};if _degf .Encode !=nil {_ecacd :=&_adfb .PdfObjectArray {};for _ ,_eecfd :=range _degf .Encode {_ecacd .Append (_adfb .MakeFloat (_eecfd ));
};_ggdec .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_ecacd );};if _degf ._edbaf !=nil {_degf ._edbaf .PdfObject =_ggdec ;return _degf ._edbaf ;};return _ggdec ;};func (_bbc *PdfReader )newPdfActionURIFromDict (_dbce *_adfb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_dbce .Get ("\u0055\u0052\u0049"),IsMap :_dbce .Get ("\u0049\u0073\u004da\u0070")},nil ;
};func (_gcba *PdfReader )newPdfActionGotoEFromDict (_gbag *_adfb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_adfa ,_ffga :=_fda (_gbag .Get ("\u0046"));if _ffga !=nil {return nil ,_ffga ;};return &PdfActionGoToE {D :_gbag .Get ("\u0044"),NewWindow :_gbag .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_gbag .Get ("\u0054"),F :_adfa },nil ;
};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _adfb .PdfObject ;IC _adfb .PdfObject ;BE _adfb .PdfObject ;RD _adfb .PdfObject ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_dcac *_adfb .PdfIndirectObject ;Certs []*_adfb .PdfObjectStream ;OCSPs []*_adfb .PdfObjectStream ;CRLs []*_adfb .PdfObjectStream ;VRI map[string ]*VRI ;_ccgfb map[string ]*_adfb .PdfObjectStream ;_defe map[string ]*_adfb .PdfObjectStream ;
_dcafc map[string ]*_adfb .PdfObjectStream ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_bggda *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_daef :=&PdfColorPattern {};_feeg ,_dfeg :=objects [len (objects )-1].(*_adfb .PdfObjectName );if !_dfeg {_bef .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_daef .PatternName =*_feeg ;if len (objects )> 1{_ggceg :=objects [0:len (objects )-1];if _bggda .UnderlyingCS ==nil {_bef .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_cfe .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_caff ,_edag :=_bggda .UnderlyingCS .ColorFromPdfObjects (_ggceg );if _edag !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_edag );
return nil ,_edag ;};_daef .Color =_caff ;};return _daef ,nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_dgfbd *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_gcab :=_fd .NewReader (img .getBase ());_fgbe :=_afe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._befaf ,img ._cdcd );
_eagcf :=_fd .NewWriter (_fgbe );_aacf :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_ebggb :=_dgfbd .GetNumComponents ();_cebbb :=make ([]uint32 ,_ebggb );_cfgb :=make ([]float64 ,_ebggb );for {_gefa :=_gcab .ReadSamples (_cebbb );if _gefa ==_gb .EOF {break ;
}else if _gefa !=nil {return img ,_gefa ;};for _fdfagf :=0;_fdfagf < _ebggb ;_fdfagf ++{_geab :=float64 (_cebbb [_fdfagf ])/_aacf ;_cfgb [_fdfagf ]=_geab ;};_bebb ,_gefa :=_dgfbd .TintTransform .Evaluate (_cfgb );if _gefa !=nil {return img ,_gefa ;};for _ ,_efeg :=range _bebb {_efeg =_dc .Min (_dc .Max (0,_efeg ),1.0);
if _gefa =_eagcf .WriteSample (uint32 (_efeg *_aacf ));_gefa !=nil {return img ,_gefa ;};};};return _dgfbd .AlternateSpace .ImageToRGB (_ebfdg (&_fgbe ));};

// ToPdfObject returns a PDF object representation of the outline.
func (_ccdaa *Outline )ToPdfObject ()_adfb .PdfObject {return _ccdaa .ToPdfOutline ().ToPdfObject ()};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_fbgda *PdfReader )Decrypt (password []byte )(bool ,error ){_fddaff ,_egfbd :=_fbgda ._aeea .Decrypt (password );if _egfbd !=nil {return false ,_egfbd ;};if !_fddaff {return false ,nil ;};_egfbd =_fbgda .loadStructure ();if _egfbd !=nil {_bef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_egfbd );
return false ,_egfbd ;};return true ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_ebfab []byte ;_ceeg []uint32 ;_bagb *_adfb .PdfObjectStream ;};

// Encoder returns the font's text encoder.
func (_baage *PdfFont )Encoder ()_ba .TextEncoder {_ecbae :=_baage .actualFont ();if _ecbae ==nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_baage ._gdcf );
return nil ;};return _ecbae .Encoder ();};

// ToPdfObject returns the PDF representation of the function.
func (_cefea *PdfFunctionType4 )ToPdfObject ()_adfb .PdfObject {_egceg :=_cefea ._bfaga ;if _egceg ==nil {_cefea ._bfaga =&_adfb .PdfObjectStream {};_egceg =_cefea ._bfaga ;};_cgga :=_adfb .MakeDict ();_cgga .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_adfb .MakeInteger (4));
_cefee :=&_adfb .PdfObjectArray {};for _ ,_dddbg :=range _cefea .Domain {_cefee .Append (_adfb .MakeFloat (_dddbg ));};_cgga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cefee );_ggeae :=&_adfb .PdfObjectArray {};for _ ,_aceef :=range _cefea .Range {_ggeae .Append (_adfb .MakeFloat (_aceef ));
};_cgga .Set ("\u0052\u0061\u006eg\u0065",_ggeae );if _cefea ._bbcbaa ==nil &&_cefea .Program !=nil {_cefea ._bbcbaa =[]byte (_cefea .Program .String ());};_cgga .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_adfb .MakeInteger (int64 (len (_cefea ._bbcbaa ))));
_egceg .Stream =_cefea ._bbcbaa ;_egceg .PdfObjectDictionary =_cgga ;return _egceg ;};func (_efcf *pdfFontType0 )bytesToCharcodes (_gdccg []byte )([]_ba .CharCode ,bool ){if _efcf ._cagfdd ==nil {return nil ,false ;};_aafc ,_eeae :=_efcf ._cagfdd .BytesToCharcodes (_gdccg );
if !_eeae {return nil ,false ;};_fbbc :=make ([]_ba .CharCode ,len (_aafc ));for _dfgc ,_aceab :=range _aafc {_fbbc [_dfgc ]=_ba .CharCode (_aceab );};return _fbbc ,true ;};

// C returns the value of the C component of the color.
func (_cfbgd *PdfColorCalRGB )C ()float64 {return _cfbgd [2]};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cda :=NewPdfAnnotation ();_bgeb :=&PdfAnnotationPolygon {};_bgeb .PdfAnnotation =_cda ;_bgeb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cda .SetContext (_bgeb );return _bgeb ;};

// ParserMetadata gets the parser  metadata.
func (_gdef *CompliancePdfReader )ParserMetadata ()_adfb .ParserMetadata {if _gdef ._caad ==(_adfb .ParserMetadata {}){_gdef ._caad ,_ =_gdef ._aeea .ParserMetadata ();};return _gdef ._caad ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_fadb *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ba .CharCode )(_ggagb []rune ,_edcg ,_fgeg int ){_eggce ,_edcg ,_fgeg :=_fadb .CharcodesToStrings (charcodes );return []rune (_be .Join (_eggce ,"")),_edcg ,_fgeg ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_geaa *PdfFont )CharcodesToStrings (charcodes []_ba .CharCode )([]string ,int ,int ){_geee :=_geaa .baseFields ();_abfae :=make ([]string ,0,len (charcodes ));_caec :=0;_cacf :=_geaa .Encoder ();_gcbfd :=_geee ._gdgf !=nil &&_geaa .IsSimple ()&&_geaa .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_be .Contains (_geee ._gdgf .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_gcbfd &&_cacf !=nil {switch _acbaa :=_cacf .(type ){case _ba .SimpleEncoder :_ecbd :=_acbaa .BaseName ();if _ ,_caaea :=_edgb [_ecbd ];_caaea {for _ ,_deefb :=range charcodes {if _cefe ,_gdcfc :=_cacf .CharcodeToRune (_deefb );_gdcfc {_abfae =append (_abfae ,string (_cefe ));
}else {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_deefb ,charcodes ,_geee .isCIDFont (),_geaa ,_cacf );
_caec ++;_abfae =append (_abfae ,_bfa .MissingCodeString );};};return _abfae ,len (_abfae ),_caec ;};};};for _ ,_gcbab :=range charcodes {if _geee ._gdgf !=nil {if _fdfde ,_ecga :=_geee ._gdgf .CharcodeToUnicode (_bfa .CharCode (_gcbab ));_ecga {_abfae =append (_abfae ,_fdfde );
continue ;};};if _cacf !=nil {if _eedb ,_bfad :=_cacf .CharcodeToRune (_gcbab );_bfad {_abfae =append (_abfae ,string (_eedb ));continue ;};};_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gcbab ,charcodes ,_geee .isCIDFont (),_geaa ,_cacf );
_caec ++;_abfae =append (_abfae ,_bfa .MissingCodeString );};if _caec !=0{_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_caec ,_geaa );
};return _abfae ,len (_abfae ),_caec ;};func _eaefe (_ffaca _adfb .PdfObject )(*PdfShading ,error ){_bfeg :=&PdfShading {};var _fabaa *_adfb .PdfObjectDictionary ;if _gbecb ,_fgbdc :=_adfb .GetIndirect (_ffaca );_fgbdc {_bfeg ._egbfe =_gbecb ;_gccgg ,_cdgec :=_gbecb .PdfObject .(*_adfb .PdfObjectDictionary );
if !_cdgec {_bef .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_adfb .ErrTypeError ;};_fabaa =_gccgg ;}else if _dccce ,_ageca :=_adfb .GetStream (_ffaca );
_ageca {_bfeg ._egbfe =_dccce ;_fabaa =_dccce .PdfObjectDictionary ;}else if _gdfeg ,_cbeab :=_adfb .GetDict (_ffaca );_cbeab {_bfeg ._egbfe =_gdfeg ;_fabaa =_gdfeg ;}else {_bef .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_ffaca );
return nil ,_adfb .ErrTypeError ;};if _fabaa ==nil {_bef .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_cfe .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_ffaca =_fabaa .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ffaca ==nil {_bef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ffaca =_adfb .TraceToDirectObject (_ffaca );_dadc ,_ggbdf :=_ffaca .(*_adfb .PdfObjectInteger );if !_ggbdf {_bef .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ffaca );
return nil ,_adfb .ErrTypeError ;};if *_dadc < 1||*_dadc > 7{_bef .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_dadc );
return nil ,_adfb .ErrTypeError ;};_bfeg .ShadingType =_dadc ;_ffaca =_fabaa .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _ffaca ==nil {_bef .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_egfede ,_ccdcg :=NewPdfColorspaceFromPdfObject (_ffaca );if _ccdcg !=nil {_bef .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ccdcg );
return nil ,_ccdcg ;};_bfeg .ColorSpace =_egfede ;_ffaca =_fabaa .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _ffaca !=nil {_ffaca =_adfb .TraceToDirectObject (_ffaca );_gabc ,_ecggge :=_ffaca .(*_adfb .PdfObjectArray );if !_ecggge {_bef .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ffaca );
return nil ,_adfb .ErrTypeError ;};_bfeg .Background =_gabc ;};_ffaca =_fabaa .Get ("\u0042\u0042\u006f\u0078");if _ffaca !=nil {_ffaca =_adfb .TraceToDirectObject (_ffaca );_ecdgg ,_dgaf :=_ffaca .(*_adfb .PdfObjectArray );if !_dgaf {_bef .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ffaca );
return nil ,_adfb .ErrTypeError ;};_egef ,_degae :=NewPdfRectangle (*_ecdgg );if _degae !=nil {_bef .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_degae );return nil ,_degae ;};_bfeg .BBox =_egef ;};_ffaca =_fabaa .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _ffaca !=nil {_ffaca =_adfb .TraceToDirectObject (_ffaca );_ddff ,_eaag :=_ffaca .(*_adfb .PdfObjectBool );if !_eaag {_bef .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffaca );
return nil ,_adfb .ErrTypeError ;};_bfeg .AntiAlias =_ddff ;};switch *_dadc {case 1:_agafb ,_afcab :=_dbdda (_fabaa );if _afcab !=nil {return nil ,_afcab ;};_agafb .PdfShading =_bfeg ;_bfeg ._fcedf =_agafb ;return _bfeg ,nil ;case 2:_ecgc ,_dbagf :=_beabf (_fabaa );
if _dbagf !=nil {return nil ,_dbagf ;};_ecgc .PdfShading =_bfeg ;_bfeg ._fcedf =_ecgc ;return _bfeg ,nil ;case 3:_gfaba ,_gbef :=_cdabg (_fabaa );if _gbef !=nil {return nil ,_gbef ;};_gfaba .PdfShading =_bfeg ;_bfeg ._fcedf =_gfaba ;return _bfeg ,nil ;
case 4:_dgfaf ,_fcef :=_efgb (_fabaa );if _fcef !=nil {return nil ,_fcef ;};_dgfaf .PdfShading =_bfeg ;_bfeg ._fcedf =_dgfaf ;return _bfeg ,nil ;case 5:_dcce ,_dabaa :=_degfd (_fabaa );if _dabaa !=nil {return nil ,_dabaa ;};_dcce .PdfShading =_bfeg ;_bfeg ._fcedf =_dcce ;
return _bfeg ,nil ;case 6:_acdgb ,_bfgac :=_ebedg (_fabaa );if _bfgac !=nil {return nil ,_bfgac ;};_acdgb .PdfShading =_bfeg ;_bfeg ._fcedf =_acdgb ;return _bfeg ,nil ;case 7:_fdfba ,_ecceb :=_ccdea (_fabaa );if _ecceb !=nil {return nil ,_ecceb ;};_fdfba .PdfShading =_bfeg ;
_bfeg ._fcedf =_fdfba ;return _bfeg ,nil ;};return nil ,_cfe .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _adfb .PdfObject )(*PdfInfo ,error ){var _aacbc PdfInfo ;_bcfa ,_edbe :=obj .(*_adfb .PdfObjectDictionary );if !_edbe {return nil ,_ad .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_aaag :=range _bcfa .Keys (){switch _aaag {case "\u0054\u0069\u0074l\u0065":_aacbc .Title ,_ =_adfb .GetString (_bcfa .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_aacbc .Author ,_ =_adfb .GetString (_bcfa .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_aacbc .Subject ,_ =_adfb .GetString (_bcfa .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_aacbc .Keywords ,_ =_adfb .GetString (_bcfa .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_aacbc .Creator ,_ =_adfb .GetString (_bcfa .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_aacbc .Producer ,_ =_adfb .GetString (_bcfa .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_aacbc .Trapped ,_ =_adfb .GetName (_bcfa .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _abdc ,_gaecb :=_adfb .GetString (_bcfa .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_gaecb &&_abdc .String ()!=""{_bfedf ,_dffb :=NewPdfDate (_abdc .String ());if _dffb !=nil {return nil ,_ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_dffb );
};_aacbc .CreationDate =&_bfedf ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _deebe ,_cfgda :=_adfb .GetString (_bcfa .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_cfgda &&_deebe .String ()!=""{_eeaf ,_febd :=NewPdfDate (_deebe .String ());if _febd !=nil {return nil ,_ad .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_febd );
};_aacbc .ModifiedDate =&_eeaf ;};default:_bbggg ,_ :=_adfb .GetString (_bcfa .Get (_aaag ));if _aacbc ._cgdf ==nil {_aacbc ._cgdf =_adfb .MakeDict ();};_aacbc ._cgdf .Set (_aaag ,_bbggg );};};return &_aacbc ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gdcabb *PdfRectangle )Normalize (){if _gdcabb .Llx > _gdcabb .Urx {_gdcabb .Llx ,_gdcabb .Urx =_gdcabb .Urx ,_gdcabb .Llx ;};if _gdcabb .Lly > _gdcabb .Ury {_gdcabb .Lly ,_gdcabb .Ury =_gdcabb .Ury ,_gdcabb .Lly ;};};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_cdfb :=PdfColorLab {l ,a ,b };return &_cdfb };func (_abcbc *pdfFontType3 )baseFields ()*fontCommon {return &_abcbc .fontCommon };

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bcccg *PdfPageResources )GetXObjectByName (keyName _adfb .PdfObjectName )(*_adfb .PdfObjectStream ,XObjectType ){if _bcccg .XObject ==nil {return nil ,XObjectTypeUndefined ;};_afgd ,_cbbef :=_adfb .TraceToDirectObject (_bcccg .XObject ).(*_adfb .PdfObjectDictionary );
if !_cbbef {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adfb .TraceToDirectObject (_bcccg .XObject ));
return nil ,XObjectTypeUndefined ;};if _febde :=_afgd .Get (keyName );_febde !=nil {_dged ,_cdedg :=_adfb .GetStream (_febde );if !_cdedg {_bef .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_febde );
return nil ,XObjectTypeUndefined ;};_gcfc :=_dged .PdfObjectDictionary ;_afcde ,_cdedg :=_adfb .TraceToDirectObject (_gcfc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_adfb .PdfObjectName );if !_cdedg {_bef .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_gcfc .String ());
return nil ,XObjectTypeUndefined ;};if *_afcde =="\u0049\u006d\u0061g\u0065"{return _dged ,XObjectTypeImage ;}else if *_afcde =="\u0046\u006f\u0072\u006d"{return _dged ,XObjectTypeForm ;}else if *_afcde =="\u0050\u0053"{return _dged ,XObjectTypePS ;}else {_bef .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_afcde );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};func (_ggaeb *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _ggaeb ._aeea .GetCrypter ()!=nil &&!_ggaeb ._aeea .IsAuthenticated (){return nil ,_ad .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fbabe :=_ggaeb ._egeag ;_gacfg :=_fbabe .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gacfg ==nil {return nil ,nil ;};_dfdb ,_ :=_adfb .GetIndirect (_gacfg );_gacfg =_adfb .TraceToDirectObject (_gacfg );if _adfb .IsNullObject (_gacfg ){_bef .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_fcbgd ,_dege :=_adfb .GetDict (_gacfg );if !_dege {_bef .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gacfg );_bef .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_ad .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gacfg );};_bef .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_bef .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_ggaeb ._ggdgc {_cgdca :=_ggaeb .traverseObjectData (_fcbgd );
if _cgdca !=nil {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_cgdca );
return nil ,_cgdca ;};};_cadcd ,_eccde :=_ggaeb .newPdfAcroFormFromDict (_dfdb ,_fcbgd );if _eccde !=nil {return nil ,_eccde ;};return _cadcd ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dbea *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaaf :=vals [0];if _aaaf < 0.0||_aaaf > 1.0{_bef .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _aaaf < 0.0{_aaaf =0.0;}else if _aaaf > 1.0{_aaaf =1.0;};return NewPdfColorDeviceGray (_aaaf ),nil ;};func (_egcbg *PdfWriter )writeAcroFormFields ()error {if _egcbg ._bfeb ==nil {return nil ;};_bef .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_fbce :=_egcbg ._bfeb .ToPdfObject ();_bef .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fbce );_egcbg ._bcdaf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fbce );_degfe :=_egcbg .addObjects (_fbce );
if _degfe !=nil {return _degfe ;};return nil ;};func (_dggbc *PdfReader )newPdfOutlineItemFromIndirectObject (_fbgcc *_adfb .PdfIndirectObject )(*PdfOutlineItem ,error ){_baafb ,_cedc :=_fbgcc .PdfObject .(*_adfb .PdfObjectDictionary );if !_cedc {return nil ,_ad .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgcged :=NewPdfOutlineItem ();_dbdde :=_baafb .Get ("\u0054\u0069\u0074l\u0065");if _dbdde ==nil {return nil ,_ad .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_ecfd ,_ccdeg :=_adfb .GetString (_dbdde );if !_ccdeg {return nil ,_ad .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_dbdde );};_bgcged .Title =_ecfd ;if _aebef :=_baafb .Get ("\u0043\u006f\u0075n\u0074");
_aebef !=nil {_dgdgcd ,_cccf :=_aebef .(*_adfb .PdfObjectInteger );if !_cccf {return nil ,_ad .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_aebef );};_eccae :=int64 (*_dgdgcd );
_bgcged .Count =&_eccae ;};if _bgcf :=_baafb .Get ("\u0044\u0065\u0073\u0074");_bgcf !=nil {_bgcged .Dest =_adfb .ResolveReference (_bgcf );if !_dggbc ._ggdgc {_fcgbb :=_dggbc .traverseObjectData (_bgcged .Dest );if _fcgbb !=nil {return nil ,_fcgbb ;};
};};if _eegdd :=_baafb .Get ("\u0041");_eegdd !=nil {_bgcged .A =_adfb .ResolveReference (_eegdd );if !_dggbc ._ggdgc {_cfab :=_dggbc .traverseObjectData (_bgcged .A );if _cfab !=nil {return nil ,_cfab ;};};};if _ecdbc :=_baafb .Get ("\u0053\u0045");_ecdbc !=nil {_bgcged .SE =nil ;
};if _agdc :=_baafb .Get ("\u0043");_agdc !=nil {_bgcged .C =_adfb .ResolveReference (_agdc );};if _gebfc :=_baafb .Get ("\u0046");_gebfc !=nil {_bgcged .F =_adfb .ResolveReference (_gebfc );};return _bgcged ,nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _adfb .PdfObject ;};var _ceafa =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bagf *PdfColorspaceLab )DecodeArray ()[]float64 {_cafd :=[]float64 {0,100};if _bagf .Range !=nil &&len (_bagf .Range )==4{_cafd =append (_cafd ,_bagf .Range ...);}else {_cafd =append (_cafd ,-100,100,-100,100);};return _cafd ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_aeef *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _efab (_eggga _adfb .PdfObject )(string ,error ){_eggga =_adfb .TraceToDirectObject (_eggga );switch _bgeffc :=_eggga .(type ){case *_adfb .PdfObjectString :return _bgeffc .Str (),nil ;
case *_adfb .PdfObjectStream :_dabf ,_gbcbc :=_adfb .DecodeStream (_bgeffc );if _gbcbc !=nil {return "",_gbcbc ;};return string (_dabf ),nil ;};return "",_ad .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_eggga );
};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_aagc *_adfb .PdfIndirectObject ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_ccaee *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_gdcfe :=_ccaee .GetContentStreamObjs ();wrapContents =wrapContents &&len (_gdcfe )> 0;_feec :=_adfb .NewFlateEncoder ();_adggc :=_adfb .MakeArray ();if wrapContents {_bdbe ,_fgdaf :=_adfb .MakeStream ([]byte ("\u0071\u000a"),_feec );
if _fgdaf !=nil {return _fgdaf ;};_adggc .Append (_bdbe );};_adggc .Append (_gdcfe ...);if wrapContents {_ffad ,_abgec :=_adfb .MakeStream ([]byte ("\u000a\u0051\u000a"),_feec );if _abgec !=nil {return _abgec ;};_adggc .Append (_ffad );};_bfedfg ,_cfdga :=_adfb .MakeStream (cs ,_feec );
if _cfdga !=nil {return _cfdga ;};_adggc .Append (_bfedfg );_ccaee .Contents =_adggc ;return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_deab *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgfb :=vals [0];if _dgfb < 0.0||_dgfb > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgfb );
return nil ,ErrColorOutOfRange ;};_adde :=vals [1];if _adde < 0.0||_adde > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgfb );return nil ,ErrColorOutOfRange ;
};_ebgg :=vals [2];if _ebgg < 0.0||_ebgg > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgfb );return nil ,ErrColorOutOfRange ;};_gacb :=NewPdfColorDeviceRGB (_dgfb ,_adde ,_ebgg );
return _gacb ,nil ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _adfb .PdfObject )(*PdfOutputIntent ,error ){_afdee :=&PdfOutputIntent {};if _dgge :=_afdee .ParsePdfObject (object );_dgge !=nil {return nil ,_dgge ;};return _afdee ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dgbac pdfCIDFontType2 )GetRuneMetrics (r rune )(_ga .CharMetrics ,bool ){_cfbed ,_cdfd :=_dgbac ._gccea [r ];if !_cdfd {_dafb ,_eddcf :=_adfb .GetInt (_dgbac .DW );if !_eddcf {return _ga .CharMetrics {},false ;};_cfbed =int (*_dafb );};return _ga .CharMetrics {Wx :float64 (_cfbed )},true ;
};func _degfd (_dagbb *_adfb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_ecdd :=PdfShadingType5 {};_fcdg :=_dagbb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _fcdg ==nil {_bef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cgdg ,_gcagb :=_fcdg .(*_adfb .PdfObjectInteger );if !_gcagb {_bef .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcdg );
return nil ,_adfb .ErrTypeError ;};_ecdd .BitsPerCoordinate =_cgdg ;_fcdg =_dagbb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fcdg ==nil {_bef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cgdg ,_gcagb =_fcdg .(*_adfb .PdfObjectInteger );if !_gcagb {_bef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fcdg );
return nil ,_adfb .ErrTypeError ;};_ecdd .BitsPerComponent =_cgdg ;_fcdg =_dagbb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _fcdg ==nil {_bef .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_cgdg ,_gcagb =_fcdg .(*_adfb .PdfObjectInteger );if !_gcagb {_bef .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fcdg );
return nil ,_adfb .ErrTypeError ;};_ecdd .VerticesPerRow =_cgdg ;_fcdg =_dagbb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fcdg ==nil {_bef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gdacf ,_gcagb :=_fcdg .(*_adfb .PdfObjectArray );if !_gcagb {_bef .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcdg );
return nil ,_adfb .ErrTypeError ;};_ecdd .Decode =_gdacf ;if _gebga :=_dagbb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gebga !=nil {_ecdd .Function =[]PdfFunction {};if _dfaaff ,_cbfb :=_gebga .(*_adfb .PdfObjectArray );_cbfb {for _ ,_cgabd :=range _dfaaff .Elements (){_ebag ,_febfga :=_ebba (_cgabd );
if _febfga !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_febfga );return nil ,_febfga ;};_ecdd .Function =append (_ecdd .Function ,_ebag );
};}else {_bgcgf ,_egfga :=_ebba (_gebga );if _egfga !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egfga );return nil ,_egfga ;
};_ecdd .Function =append (_ecdd .Function ,_bgcgf );};};return &_ecdd ,nil ;};func _edbcd ()string {_gebbe .Lock ();defer _gebbe .Unlock ();return _gdbde };

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdfb pdfFontSimple )GetRuneMetrics (r rune )(_ga .CharMetrics ,bool ){if _fdfb ._gcbae !=nil {_cgffc ,_fceb :=_fdfb ._gcbae .Read (r );if _fceb {return _cgffc ,true ;};};_edbga :=_fdfb .Encoder ();if _edbga ==nil {_bef .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fdfb );
return _ga .CharMetrics {},false ;};_gagea ,_daacc :=_edbga .RuneToCharcode (r );if !_daacc {if r !=' '{_bef .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fdfb );
};return _ga .CharMetrics {},false ;};_aaec ,_fbbe :=_fdfb .GetCharMetrics (_gagea );return _aaec ,_fbbe ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_egede *PdfShadingType6 )ToPdfObject ()_adfb .PdfObject {_egede .PdfShading .ToPdfObject ();_dbgf ,_bggeb :=_egede .getShadingDict ();if _bggeb !=nil {_bef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _egede .BitsPerCoordinate !=nil {_dbgf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_egede .BitsPerCoordinate );};if _egede .BitsPerComponent !=nil {_dbgf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_egede .BitsPerComponent );
};if _egede .BitsPerFlag !=nil {_dbgf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_egede .BitsPerFlag );};if _egede .Decode !=nil {_dbgf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_egede .Decode );};if _egede .Function !=nil {if len (_egede .Function )==1{_dbgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egede .Function [0].ToPdfObject ());
}else {_fgeeb :=_adfb .MakeArray ();for _ ,_gafdb :=range _egede .Function {_fgeeb .Append (_gafdb .ToPdfObject ());};_dbgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgeeb );};};return _egede ._egbfe ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_agaf *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _adfb .GetNumberAsFloat (_agaf .Descent );};func _fadbe (_fadcg []byte )(_aebae ,_facd string ,_bddbc error ){_bef .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_fadcg ));
_fdfabd :=_abacfc .FindIndex (_fadcg );if _fdfabd ==nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_adfb .ErrTypeError ;};_fbdfb :=_fdfabd [1];_eeagg :=_be .Index (string (_fadcg [_fbdfb :]),_gddgg );if _eeagg < 0{_aebae =string (_fadcg [_fbdfb :]);return _aebae ,"",nil ;};_eafe :=_fbdfb +_eeagg ;_aebae =string (_fadcg [_fbdfb :_eafe ]);
_fbbba :=_eafe ;_eeagg =_be .Index (string (_fadcg [_fbbba :]),_dffgc );if _eeagg < 0{_bef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bddbc );
return "","",_adfb .ErrTypeError ;};_accdg :=_fbbba +_eeagg ;_facd =string (_fadcg [_fbbba :_accdg ]);return _aebae ,_facd ,nil ;};func _ebfdg (_accbf *_afe .ImageBase )(_cfacb Image ){_cfacb .Width =int64 (_accbf .Width );_cfacb .Height =int64 (_accbf .Height );
_cfacb .BitsPerComponent =int64 (_accbf .BitsPerComponent );_cfacb .ColorComponents =_accbf .ColorComponents ;_cfacb .Data =_accbf .Data ;_cfacb ._cdcd =_accbf .Decode ;_cfacb ._befaf =_accbf .Alpha ;return _cfacb ;};

// ToPdfObject implements interface PdfModel.
func (_ece *PdfActionSubmitForm )ToPdfObject ()_adfb .PdfObject {_ece .PdfAction .ToPdfObject ();_edf :=_ece ._ca ;_bfb :=_edf .PdfObject .(*_adfb .PdfObjectDictionary );_bfb .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeSubmitForm )));if _ece .F !=nil {_bfb .Set ("\u0046",_ece .F .ToPdfObject ());
};_bfb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ece .Fields );_bfb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ece .Flags );return _edf ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_gdccf *PdfAcroForm )GetContainingPdfObject ()_adfb .PdfObject {return _gdccf ._geacd };

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_fccgf *XObjectImage )GetContainingPdfObject ()_adfb .PdfObject {return _fccgf ._efgf };var _ pdfFont =(*pdfCIDFontType0 )(nil );

// String returns a string representation of what flags are set.
func (_fdea FieldFlag )String ()string {_fbfe :="";if _fdea ==FieldFlagClear {_fbfe ="\u0043\u006c\u0065a\u0072";return _fbfe ;};if _fdea &FieldFlagReadOnly > 0{_fbfe +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _fdea &FieldFlagRequired > 0{_fbfe +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _fdea &FieldFlagNoExport > 0{_fbfe +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _fdea &FieldFlagNoToggleToOff > 0{_fbfe +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _fdea &FieldFlagRadio > 0{_fbfe +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _fdea &FieldFlagPushbutton > 0{_fbfe +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _fdea &FieldFlagRadiosInUnision > 0{_fbfe +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _fdea &FieldFlagMultiline > 0{_fbfe +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _fdea &FieldFlagPassword > 0{_fbfe +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _fdea &FieldFlagFileSelect > 0{_fbfe +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _fdea &FieldFlagDoNotScroll > 0{_fbfe +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _fdea &FieldFlagComb > 0{_fbfe +="\u007c\u0043\u006fm\u0062";};if _fdea &FieldFlagRichText > 0{_fbfe +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _fdea &FieldFlagDoNotSpellCheck > 0{_fbfe +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _fdea &FieldFlagCombo > 0{_fbfe +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _fdea &FieldFlagEdit > 0{_fbfe +="\u007c\u0045\u0064i\u0074";};if _fdea &FieldFlagSort > 0{_fbfe +="\u007c\u0053\u006fr\u0074";};if _fdea &FieldFlagMultiSelect > 0{_fbfe +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _fdea &FieldFlagCommitOnSelChange > 0{_fbfe +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _be .Trim (_fbfe ,"\u007c");};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_fdddc *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _ccacc []_ba .TextEncoder ;var _efffe _ba .CMapEncoder ;if _cbcc :=_fdddc .baseFields ()._gdgf ;_cbcc !=nil {_efffe =_ba .NewCMapEncoder ("",nil ,_cbcc );};_fecec :=_fdddc .Encoder ();
if _fecec !=nil {switch _gbbc :=_fecec .(type ){case _ba .SimpleEncoder :_gbgg :=_gbbc .BaseName ();if _ ,_eaca :=_edgb [_gbgg ];_eaca {_ccacc =append (_ccacc ,_fecec );};};};if len (_ccacc )==0{if _fdddc .baseFields ()._gdgf !=nil {_ccacc =append (_ccacc ,_efffe );
};if _fecec !=nil {_ccacc =append (_ccacc ,_fecec );};};var _acfbg _ae .Buffer ;var _bagac int ;for _ ,_gce :=range data {var _gfbaaf bool ;for _ ,_eead :=range _ccacc {if _dbfd :=_eead .Encode (string (_gce ));len (_dbfd )> 0{_acfbg .Write (_dbfd );_gfbaaf =true ;
break ;};};if !_gfbaaf {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_gce );
_bagac ++;};};if _bagac !=0{_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_bagac ,_fdddc ,_ccacc );
};return _acfbg .Bytes (),_bagac ;};func _fda (_eac _adfb .PdfObject )(*PdfFilespec ,error ){if _eac ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_eac );};

// Register registers (caches) a model to primitive object relationship.
func (_dfbfc *modelManager )Register (primitive _adfb .PdfObject ,model PdfModel ){_dfbfc ._cbeca [model ]=primitive ;_dfbfc ._bccgd [primitive ]=model ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_dcgfa :=Permissions {};_dcgfa .DocMDP =docMdp ;_bffba :=_adfb .MakeDict ();_bffba .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_dcgfa ._dbdcc =_bffba ;return &_dcgfa ;};var _ pdfFont =(*pdfFontSimple )(nil );
func (_facgb *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};type pdfFontType3 struct{fontCommon ;_acadb *_adfb .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _adfb .PdfObject ;Encoding _adfb .PdfObject ;FontBBox _adfb .PdfObject ;FontMatrix _adfb .PdfObject ;FirstChar _adfb .PdfObject ;LastChar _adfb .PdfObject ;Widths _adfb .PdfObject ;Resources _adfb .PdfObject ;_fgfb map[_ba .CharCode ]float64 ;
_bcbgf _ba .TextEncoder ;};func (_eacea SignatureValidationResult )String ()string {var _cfgbc _ae .Buffer ;_cfgbc .WriteString (_ad .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_eacea .Name ));if _eacea .Date ._adaae > 0{_cfgbc .WriteString (_ad .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_eacea .Date .ToGoTime ().String ()));
}else {_cfgbc .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_eacea .Reason )> 0{_cfgbc .WriteString (_ad .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_eacea .Reason ));
}else {_cfgbc .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_eacea .Location )> 0{_cfgbc .WriteString (_ad .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_eacea .Location ));
}else {_cfgbc .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_eacea .ContactInfo )> 0{_cfgbc .WriteString (_ad .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_eacea .ContactInfo ));
}else {_cfgbc .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_cfgbc .WriteString (_ad .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_eacea .Fields )));
if _eacea .IsSigned {_cfgbc .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_cfgbc .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _eacea .IsVerified {_cfgbc .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_cfgbc .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _eacea .IsTrusted {_cfgbc .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_cfgbc .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_eacea .GeneralizedTime .IsZero (){_cfgbc .WriteString (_ad .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_eacea .GeneralizedTime .String ()));};if _eacea .DiffResults !=nil {_cfgbc .WriteString (_ad .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_eacea .DiffResults .IsPermitted ()));
if len (_eacea .DiffResults .Warnings )> 0{_cfgbc .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_gdgbf :=range _eacea .DiffResults .Warnings {_cfgbc .WriteString (_ad .Sprintf ("\u0009\u0025\u0073\u000a",_gdgbf ));
};};if len (_eacea .DiffResults .Errors )> 0{_cfgbc .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_gcdea :=range _eacea .DiffResults .Errors {_cfgbc .WriteString (_ad .Sprintf ("\u0009\u0025\u0073\u000a",_gcdea ));
};};};return _cfgbc .String ();};func (_ebdea *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _ebdea ._ebcbf };

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_geacd :_adfb .MakeIndirectObject (_adfb .MakeDict ())};};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_dbffd *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _dbffd ._dcegf !=nil {return _dbffd ._dcegf ,nil ;};if _dbffd .ColorSpace ==nil {return nil ,nil ;};_bdge ,_ddccc :=_ccge (_dbffd .ColorSpace );if _ddccc !=nil {return nil ,_ddccc ;
};_dbffd ._dcegf =_bdge ;return _dbffd ._dcegf ,nil ;};func _daaee (_fdgb *_adfb .PdfObjectDictionary ,_beefg *fontCommon ,_eebb _ba .TextEncoder )(*pdfFontSimple ,error ){_afba :=_ggdef (_beefg );_afba ._dcef =_eebb ;if _eebb ==nil {_gcdb :=_fdgb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _gcdb ==nil {_gcdb =_adfb .MakeInteger (0);};_afba .FirstChar =_gcdb ;_gfbda ,_ebfa :=_adfb .GetIntVal (_gcdb );if !_ebfa {_bef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gcdb );
return nil ,_adfb .ErrTypeError ;};_fggbg :=_ba .CharCode (_gfbda );_gcdb =_fdgb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gcdb ==nil {_gcdb =_adfb .MakeInteger (255);};_afba .LastChar =_gcdb ;_gfbda ,_ebfa =_adfb .GetIntVal (_gcdb );
if !_ebfa {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gcdb );return nil ,_adfb .ErrTypeError ;
};_acdg :=_ba .CharCode (_gfbda );_afba ._babf =make (map[_ba .CharCode ]float64 );_gcdb =_fdgb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gcdb !=nil {_afba .Widths =_gcdb ;_cfdec ,_dfcdd :=_adfb .GetArray (_gcdb );if !_dfcdd {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gcdb );
return nil ,_adfb .ErrTypeError ;};_ecbbc ,_gfac :=_cfdec .ToFloat64Array ();if _gfac !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gfac ;};if len (_ecbbc )!=int (_acdg -_fggbg +1){_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_acdg -_fggbg +1,len (_ecbbc ));
return nil ,_adfb .ErrRangeError ;};for _accd ,_edbcb :=range _ecbbc {_afba ._babf [_fggbg +_ba .CharCode (_accd )]=_edbcb ;};};};_afba .Encoding =_adfb .TraceToDirectObject (_fdgb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _afba ,nil ;
};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_cfcfc *LTV )Enable (sig *PdfSignature ,extraCerts []*_adf .Certificate )error {if _fcbg :=_cfcfc .validateSig (sig );_fcbg !=nil {return _fcbg ;};_ddgfc ,_adbc :=_cfcfc .generateVRIKey (sig );if _adbc !=nil {return _adbc ;};if _ ,_eebdd :=_cfcfc ._gacgc .VRI [_ddgfc ];
_eebdd &&_cfcfc .SkipExisting {return nil ;};_eddgg ,_adbc :=sig .GetCerts ();if _adbc !=nil {return _adbc ;};return _cfcfc .enable (_eddgg ,extraCerts ,_ddgfc );};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_gebbe .Lock ();defer _gebbe .Unlock ();_bcdf =creator };

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_adfb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// WriteToFile writes the output PDF to file.
func (_cfcc *PdfWriter )WriteToFile (outputFilePath string )error {_aface ,_aedba :=_bf .Create (outputFilePath );if _aedba !=nil {return _aedba ;};defer _aface .Close ();return _cfcc .Write (_aface );};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _adfb .PdfObject ;LE _adfb .PdfObject ;BS _adfb .PdfObject ;IC _adfb .PdfObject ;BE _adfb .PdfObject ;IT _adfb .PdfObject ;Measure _adfb .PdfObject ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_gfada *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_cbabf :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_gebaa ,_efeca :=_gfada .GetNumPages ();if _efeca !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efeca );
return nil ,_efeca ;};for _bdgdc :=1;_bdgdc <=_gebaa ;_bdgdc ++{_cbae ,_cbeaa :=_gfada .GetPage (_bdgdc );if _cbeaa !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbeaa );return nil ,_cbeaa ;};if opts .PageProcessCallback !=nil {_cbeaa =opts .PageProcessCallback (_bdgdc ,_cbae );
if _cbeaa !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbeaa );return nil ,_cbeaa ;};}else if opts .PageCallback !=nil {opts .PageCallback (_bdgdc ,_cbae );};_cbeaa =_cbabf .AddPage (_cbae );if _cbeaa !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbeaa );
return nil ,_cbeaa ;};};_cbabf ._dbbecb =_gfada .PdfVersion ();if !opts .SkipInfo {_gceee ,_dbfab :=_gfada .GetPdfInfo ();if _dbfab !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfab );}else {_cbabf ._bcfdf .PdfObject =_gceee .ToPdfObject ();
};};if !opts .SkipMetadata {if _gdacgc :=_gfada ._egeag .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gdacgc !=nil {if _gdeaf :=_cbabf .SetCatalogMetadata (_gdacgc );_gdeaf !=nil {return nil ,_gdeaf ;};};};if !opts .SkipAcroForm {_eegfe :=_cbabf .SetForms (_gfada .AcroForm );
if _eegfe !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eegfe );return nil ,_eegfe ;};};if !opts .SkipOutlines {_cbabf .AddOutlineTree (_gfada .GetOutlineTree ());};if !opts .SkipOCProperties {_bcfdg ,_dgbad :=_gfada .GetOCProperties ();
if _dgbad !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgbad );}else {_dgbad =_cbabf .SetOCProperties (_bcfdg );if _dgbad !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgbad );};};};if !opts .SkipPageLabels {_caaef ,_dgbde :=_gfada .GetPageLabels ();
if _dgbde !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgbde );}else {_dgbde =_cbabf .SetPageLabels (_caaef );if _dgbde !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgbde );};};};if !opts .SkipNamedDests {_cceda ,_gceff :=_gfada .GetNamedDestinations ();
if _gceff !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gceff );}else {_gceff =_cbabf .SetNamedDestinations (_cceda );if _gceff !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gceff );};};};if !opts .SkipNameDictionary {_ebeed ,_bbabc :=_gfada .GetNameDictionary ();
if _bbabc !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbabc );}else {_bbabc =_cbabf .SetNameDictionary (_ebeed );if _bbabc !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbabc );};};};if !opts .SkipRotation &&_gfada .Rotate !=nil {if _gdgac :=_cbabf .SetRotation (*_gfada .Rotate );
_gdgac !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdgac );};};return &_cbabf ,nil ;};func (_bdecd *PdfWriter )addObject (_cbfbc _adfb .PdfObject )bool {_efcea :=_bdecd .hasObject (_cbfbc );if !_efcea {_bddc :=_adfb .ResolveReferencesDeep (_cbfbc ,_bdecd ._ecdcgg );
if _bddc !=nil {_bef .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_bddc );};_bdecd ._fcefd =append (_bdecd ._fcefd ,_cbfbc );_bdecd ._bfgf [_cbfbc ]=struct{}{};return true ;};return false ;
};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ga .CharMetrics ;

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_cfeef *PdfFont )CharcodesToUnicode (charcodes []_ba .CharCode )[]rune {_bcaf ,_ ,_ :=_cfeef .CharcodesToUnicodeWithStats (charcodes );return _bcaf ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_gceg *PdfPageResourcesColorspaces )Set (key _adfb .PdfObjectName ,val PdfColorspace ){if _ ,_bbgf :=_gceg .Colorspaces [string (key )];!_bbgf {_gceg .Names =append (_gceg .Names ,string (key ));};_gceg .Colorspaces [string (key )]=val ;};

// String returns a human readable description of `fontfile`.
func (_agca *fontFile )String ()string {_efgaf :="\u005b\u004e\u006f\u006e\u0065\u005d";if _agca ._aeaeg !=nil {_efgaf =_agca ._aeaeg .String ();};return _ad .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_agca ._aebf ,_efgaf );
};var (_abacfc =_db .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_ccebd =_db .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_ebfaf =_db .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_gddgg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_dffgc ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_bceca ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_ggag *PdfReader )newPdfAnnotationCaretFromDict (_ggdd *_adfb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_ecaf :=PdfAnnotationCaret {};_fec ,_cgbd :=_ggag .newPdfAnnotationMarkupFromDict (_ggdd );if _cgbd !=nil {return nil ,_cgbd ;};_ecaf .PdfAnnotationMarkup =_fec ;
_ecaf .RD =_ggdd .Get ("\u0052\u0044");_ecaf .Sy =_ggdd .Get ("\u0053\u0079");return &_ecaf ,nil ;};func (_edgbb *PdfWriter )copyObjects (){_aecfa :=make (map[_adfb .PdfObject ]_adfb .PdfObject );_bbaac :=make ([]_adfb .PdfObject ,0,len (_edgbb ._fcefd ));
_cafb :=make (map[_adfb .PdfObject ]struct{},len (_edgbb ._fcefd ));_badce :=make (map[_adfb .PdfObject ]struct{});for _ ,_afdeb :=range _edgbb ._fcefd {_eeeeab :=_edgbb .copyObject (_afdeb ,_aecfa ,_badce ,false );if _ ,_egeef :=_badce [_afdeb ];_egeef {continue ;
};_bbaac =append (_bbaac ,_eeeeab );_cafb [_eeeeab ]=struct{}{};};_edgbb ._fcefd =_bbaac ;_edgbb ._bfgf =_cafb ;_edgbb ._bcfdf =_edgbb .copyObject (_edgbb ._bcfdf ,_aecfa ,nil ,false ).(*_adfb .PdfIndirectObject );_edgbb ._cfcab =_edgbb .copyObject (_edgbb ._cfcab ,_aecfa ,nil ,false ).(*_adfb .PdfIndirectObject );
if _edgbb ._bgbdb !=nil {_edgbb ._bgbdb =_edgbb .copyObject (_edgbb ._bgbdb ,_aecfa ,nil ,false ).(*_adfb .PdfIndirectObject );};if _edgbb ._fbggb {_acbgc :=make (map[_adfb .PdfObject ]int64 );for _gdbfe ,_cecdd :=range _edgbb ._cgbb {if _cagda ,_caaefc :=_aecfa [_gdbfe ];
_caaefc {_acbgc [_cagda ]=_cecdd ;}else {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_edgbb ._cgbb =_acbgc ;};};func (_afebg *LTV )enable (_gdeae ,_dfaf []*_adf .Certificate ,_ffdb string )error {_bggec ,_gcada ,_caccca :=_afebg .buildCertChain (_gdeae ,_dfaf );if _caccca !=nil {return _caccca ;};_eeddb ,_caccca :=_afebg .getCerts (_bggec );
if _caccca !=nil {return _caccca ;};var _aebc ,_ebbe [][]byte ;if _afebg .OCSPClient !=nil {_aebc ,_caccca =_afebg .getOCSPs (_bggec ,_gcada );if _caccca !=nil {return _caccca ;};};if _afebg .CRLClient !=nil {_ebbe ,_caccca =_afebg .getCRLs (_bggec );if _caccca !=nil {return _caccca ;
};};_aacgc :=_afebg ._gacgc ;_ffgaf ,_caccca :=_aacgc .addCerts (_eeddb );if _caccca !=nil {return _caccca ;};_cbegc ,_caccca :=_aacgc .addOCSPs (_aebc );if _caccca !=nil {return _caccca ;};_defdc ,_caccca :=_aacgc .addCRLs (_ebbe );if _caccca !=nil {return _caccca ;
};if _ffdb !=""{_aacgc .VRI [_ffdb ]=&VRI {Cert :_ffgaf ,OCSP :_cbegc ,CRL :_defdc };};_afebg ._bfdea .SetDSS (_aacgc );return nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// SetAnnotations sets the annotations list.
func (_geaaa *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_geaaa ._fagca =annotations };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_efcdd *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deea ,_dce :=_adfb .GetNumbersAsFloat (objects );
if _dce !=nil {return nil ,_dce ;};return _efcdd .ColorFromFloats (_deea );};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func _caeg (_edeb *_adfb .PdfObjectStream )(*PdfFunctionType0 ,error ){_agaaa :=&PdfFunctionType0 {};_agaaa ._bagb =_edeb ;_gffd :=_edeb .PdfObjectDictionary ;_bcae ,_caefb :=_adfb .TraceToDirectObject (_gffd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_adfb .PdfObjectArray );
if !_caefb {_bef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bcae .Len ()< 0||_bcae .Len ()%2!=0{_bef .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_agaaa .NumInputs =_bcae .Len ()/2;_eadc ,_aabda :=_bcae .ToFloat64Array ();if _aabda !=nil {return nil ,_aabda ;};_agaaa .Domain =_eadc ;_bcae ,_caefb =_adfb .TraceToDirectObject (_gffd .Get ("\u0052\u0061\u006eg\u0065")).(*_adfb .PdfObjectArray );if !_caefb {_bef .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bcae .Len ()< 0||_bcae .Len ()%2!=0{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_agaaa .NumOutputs =_bcae .Len ()/2;_aggba ,_aabda :=_bcae .ToFloat64Array ();if _aabda !=nil {return nil ,_aabda ;};_agaaa .Range =_aggba ;_bcae ,_caefb =_adfb .TraceToDirectObject (_gffd .Get ("\u0053\u0069\u007a\u0065")).(*_adfb .PdfObjectArray );
if !_caefb {_bef .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_daccg ,_aabda :=_bcae .ToIntegerArray ();if _aabda !=nil {return nil ,_aabda ;};if len (_daccg )!=_agaaa .NumInputs {_bef .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agaaa .Size =_daccg ;_adgaa ,_caefb :=_adfb .TraceToDirectObject (_gffd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_adfb .PdfObjectInteger );
if !_caefb {_bef .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_adgaa !=1&&*_adgaa !=2&&*_adgaa !=4&&*_adgaa !=8&&*_adgaa !=12&&*_adgaa !=16&&*_adgaa !=24&&*_adgaa !=32{_bef .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_adgaa );
return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agaaa .BitsPerSample =int (*_adgaa );_agaaa .Order =1;_adgde ,_caefb :=_adfb .TraceToDirectObject (_gffd .Get ("\u004f\u0072\u0064e\u0072")).(*_adfb .PdfObjectInteger );
if _caefb {if *_adgde !=1&&*_adgde !=3{_bef .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_adgde );return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agaaa .Order =int (*_adgde );
};_bcae ,_caefb =_adfb .TraceToDirectObject (_gffd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_adfb .PdfObjectArray );if _caefb {_gccaa ,_gaged :=_bcae .ToFloat64Array ();if _gaged !=nil {return nil ,_gaged ;};_agaaa .Encode =_gccaa ;};_bcae ,_caefb =_adfb .TraceToDirectObject (_gffd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_adfb .PdfObjectArray );
if _caefb {_eeecd ,_fafe :=_bcae .ToFloat64Array ();if _fafe !=nil {return nil ,_fafe ;};_agaaa .Decode =_eeecd ;};_cbcfbe ,_aabda :=_adfb .DecodeStream (_edeb );if _aabda !=nil {return nil ,_aabda ;};_agaaa ._ebfab =_cbcfbe ;return _agaaa ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fgc *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eebfg ,_edgaa :=_adfb .GetNumbersAsFloat (objects );
if _edgaa !=nil {return nil ,_edgaa ;};return _fgc .ColorFromFloats (_eebfg );};func (_gfbbf *PdfWriter )setDocInfo (_cfgde _adfb .PdfObject ){if _gfbbf .hasObject (_gfbbf ._bcfdf ){delete (_gfbbf ._bfgf ,_gfbbf ._bcfdf );delete (_gfbbf ._ecdcgg ,_gfbbf ._bcfdf );
for _aegaf ,_fdegac :=range _gfbbf ._fcefd {if _fdegac ==_gfbbf ._bcfdf {copy (_gfbbf ._fcefd [_aegaf :],_gfbbf ._fcefd [_aegaf +1:]);_gfbbf ._fcefd [len (_gfbbf ._fcefd )-1]=nil ;_gfbbf ._fcefd =_gfbbf ._fcefd [:len (_gfbbf ._fcefd )-1];break ;};};};_agbff :=_adfb .PdfIndirectObject {};
_agbff .PdfObject =_cfgde ;_gfbbf ._bcfdf =&_agbff ;_gfbbf .addObject (&_agbff );};

// Subtype returns the font's "Subtype" field.
func (_gccaf *PdfFont )Subtype ()string {_dbcdf :=_gccaf .baseFields ()._bbbdc ;if _ggaa ,_dggdg :=_gccaf ._gdcf .(*pdfFontType0 );_dggdg {_dbcdf =_dbcdf +"\u003a"+_ggaa .DescendantFont .Subtype ();};return _dbcdf ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ecba *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_ecba .updateObjectsDeep (dss .ToPdfObject (),nil );};_ecba ._bba =dss ;};func _ecdgb (_dfdcb []byte )([]byte ,error ){_gdeeb :=_bge .New ();if _ ,_cgcbd :=_gb .Copy (_gdeeb ,_ae .NewReader (_dfdcb ));
_cgcbd !=nil {return nil ,_cgcbd ;};return _gdeeb .Sum (nil ),nil ;};func (_eddad *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};func _dgcda (_ebgf []byte )bool {if len (_ebgf )< 4{return true ;};for _fcgee :=range _ebgf [:4]{_gaecf :=rune (_fcgee );
if !_gec .Is (_gec .ASCII_Hex_Digit ,_gaecf )&&!_gec .IsSpace (_gaecf ){return true ;};};return false ;};func (_dddd *PdfReader )newPdfAnnotationStampFromDict (_gffg *_adfb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_gda :=PdfAnnotationStamp {};
_dbgd ,_ceef :=_dddd .newPdfAnnotationMarkupFromDict (_gffg );if _ceef !=nil {return nil ,_ceef ;};_gda .PdfAnnotationMarkup =_dbgd ;_gda .Name =_gffg .Get ("\u004e\u0061\u006d\u0065");return &_gda ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_adcg :=NewPdfAction ();_aed :=&PdfActionGoToE {};_aed .PdfAction =_adcg ;_adcg .SetContext (_aed );return _aed ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_efbe :=&PdfBorderStyle {};return _efbe };

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _adfb .PdfObject ;};func _aadf (_ceggb _adfb .PdfObject ){_bef .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ceggb ,_ceggb .String ());if _gfgbg ,_ffdd :=_ceggb .(*_adfb .PdfObjectStream );
_ffdd {_aeaece ,_ggdee :=_adfb .DecodeStream (_gfgbg );if _ggdee !=nil {_bef .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_ggdee );return ;};_bef .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_aeaece );}else if _caffe ,_gbae :=_ceggb .(*_adfb .PdfIndirectObject );
_gbae {_bef .Log .Debug ("\u0025\u0054\u0020%\u0076",_caffe .PdfObject ,_caffe .PdfObject );_bef .Log .Debug ("\u0025\u0073",_caffe .PdfObject .String ());};};func (_fagfdg *PdfWriter )makeOffSetReference (_fgdgf int64 ){_fecef :=_ad .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_fgdgf );
_fagfdg .writeString (_fecef );_fagfdg .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_aaddf *PdfPage )GetPageAsIndirectObject ()*_adfb .PdfIndirectObject {return _aaddf ._gcgac };const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// GetNumComponents returns the number of color components (1 for Indexed).
func (_fcga *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_afdbe *LTV )EnableByName (name string ,extraCerts []*_adf .Certificate )error {_gegb :=_afdbe ._bfdea ._agd .AcroForm ;for _ ,_fbaf :=range _gegb .AllFields (){_dfca ,_ :=_fbaf .GetContext ().(*PdfFieldSignature );if _dfca ==nil {continue ;};if _efgdg :=_dfca .PartialName ();
_efgdg !=name {continue ;};return _afdbe .Enable (_dfca .V ,extraCerts );};return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ecafee *PdfShadingPattern )ToPdfObject ()_adfb .PdfObject {_ecafee .PdfPattern .ToPdfObject ();_bddfg :=_ecafee .getDict ();if _ecafee .Shading !=nil {_bddfg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ecafee .Shading .ToPdfObject ());};if _ecafee .Matrix !=nil {_bddfg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ecafee .Matrix );
};if _ecafee .ExtGState !=nil {_bddfg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ecafee .ExtGState );};return _ecafee ._fcgcb ;};

// Initialize initializes the PdfSignature.
func (_geeea *PdfSignature )Initialize ()error {if _geeea .Handler ==nil {return _cfe .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _geeea .Handler .InitSignature (_geeea );};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bacf *PdfReader )GetNamedDestinations ()(_adfb .PdfObject ,error ){_bgdg :=_adfb .ResolveReference (_bacf ._egeag .Get ("\u0044\u0065\u0073t\u0073"));if _bgdg ==nil {return nil ,nil ;};if !_bacf ._ggdgc {_caabb :=_bacf .traverseObjectData (_bgdg );
if _caabb !=nil {return nil ,_caabb ;};};return _bgdg ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_gbfa *Image )ColorAt (x ,y int )(_d .Color ,error ){_dggcd :=_afe .BytesPerLine (int (_gbfa .Width ),int (_gbfa .BitsPerComponent ),_gbfa .ColorComponents );switch _gbfa .ColorComponents {case 1:return _afe .ColorAtGrayscale (x ,y ,int (_gbfa .BitsPerComponent ),_dggcd ,_gbfa .Data ,_gbfa ._cdcd );
case 3:return _afe .ColorAtNRGBA (x ,y ,int (_gbfa .Width ),_dggcd ,int (_gbfa .BitsPerComponent ),_gbfa .Data ,_gbfa ._befaf ,_gbfa ._cdcd );case 4:return _afe .ColorAtCMYK (x ,y ,int (_gbfa .Width ),_gbfa .Data ,_gbfa ._cdcd );};_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gbfa .ColorComponents ,_gbfa .BitsPerComponent );
return nil ,_cfe .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_cffe ,_gfbfg :=_ffcg .ParsePdfTime (dateStr );if _gfbfg !=nil {return PdfDate {},_gfbfg ;};return NewPdfDateFromTime (_cffe );};func _fbab (_egeaf *_adfb .PdfObjectDictionary ,_becac *fontCommon )(*pdfCIDFontType0 ,error ){if _becac ._bbbdc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_bef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_becac );
return nil ,_adfb .ErrRangeError ;};_dcede :=_gbdad (_becac );_ebgb ,_cedg :=_adfb .GetDict (_egeaf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cedg {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_becac );
return nil ,ErrRequiredAttributeMissing ;};_dcede .CIDSystemInfo =_ebgb ;_dcede .DW =_egeaf .Get ("\u0044\u0057");_dcede .W =_egeaf .Get ("\u0057");_dcede .DW2 =_egeaf .Get ("\u0044\u0057\u0032");_dcede .W2 =_egeaf .Get ("\u0057\u0032");_dcede ._adfc =1000.0;
if _feda ,_dgfg :=_adfb .GetNumberAsFloat (_dcede .DW );_dgfg ==nil {_dcede ._adfc =_feda ;};_gffgg ,_eaed :=_bbeb (_dcede .W );if _eaed !=nil {return nil ,_eaed ;};if _gffgg ==nil {_gffgg =map[_ba .CharCode ]float64 {};};_dcede ._dfddd =_gffgg ;return _dcede ,nil ;
};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};type pdfFont interface{_ga .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_adfb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// A returns the value of the A component of the color.
func (_dadg *PdfColorLab )A ()float64 {return _dadg [1]};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _adfb .PdfObject ;};func _ebedg (_ebce *_adfb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_dgeac :=PdfShadingType6 {};_eadf :=_ebce .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _eadf ==nil {_bef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cagd ,_egaed :=_eadf .(*_adfb .PdfObjectInteger );if !_egaed {_bef .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eadf );
return nil ,_adfb .ErrTypeError ;};_dgeac .BitsPerCoordinate =_cagd ;_eadf =_ebce .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eadf ==nil {_bef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cagd ,_egaed =_eadf .(*_adfb .PdfObjectInteger );if !_egaed {_bef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eadf );
return nil ,_adfb .ErrTypeError ;};_dgeac .BitsPerComponent =_cagd ;_eadf =_ebce .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eadf ==nil {_bef .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cagd ,_egaed =_eadf .(*_adfb .PdfObjectInteger );if !_egaed {_bef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eadf );
return nil ,_adfb .ErrTypeError ;};_dgeac .BitsPerComponent =_cagd ;_eadf =_ebce .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eadf ==nil {_bef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbecb ,_egaed :=_eadf .(*_adfb .PdfObjectArray );if !_egaed {_bef .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eadf );
return nil ,_adfb .ErrTypeError ;};_dgeac .Decode =_cbecb ;if _befag :=_ebce .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_befag !=nil {_dgeac .Function =[]PdfFunction {};if _aaagfc ,_gecea :=_befag .(*_adfb .PdfObjectArray );_gecea {for _ ,_cabbd :=range _aaagfc .Elements (){_cdfcd ,_facea :=_ebba (_cabbd );
if _facea !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_facea );return nil ,_facea ;};_dgeac .Function =append (_dgeac .Function ,_cdfcd );
};}else {_eefd ,_gcbc :=_ebba (_befag );if _gcbc !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcbc );return nil ,_gcbc ;};
_dgeac .Function =append (_dgeac .Function ,_eefd );};};return &_dgeac ,nil ;};var _bedb =_db .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_bbca *pdfCIDFontType0 )ToPdfObject ()_adfb .PdfObject {return _adfb .MakeNull ()};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_gfegd *LTV )EnableAll (extraCerts []*_adf .Certificate )error {_egff :=_gfegd ._bfdea ._agd .AcroForm ;for _ ,_caeda :=range _egff .AllFields (){_aade ,_ :=_caeda .GetContext ().(*PdfFieldSignature );if _aade ==nil {continue ;};_cgfff :=_aade .V ;
if _cbgba :=_gfegd .validateSig (_cgfff );_cbgba !=nil {_bef .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cbgba );
};if _bgdbf :=_gfegd .Enable (_cgfff ,extraCerts );_bgdbf !=nil {return _bgdbf ;};};return nil ;};func (_eaeg *PdfReader )flattenFieldsWithOpts (_bdbg bool ,_bdcf FieldAppearanceGenerator ,_eaad *FieldFlattenOpts )error {if _eaad ==nil {_eaad =&FieldFlattenOpts {};
};var _gdea bool ;_ccga :=map[*PdfAnnotation ]bool {};{var _daadg []*PdfField ;_cebd :=_eaeg .AcroForm ;if _cebd !=nil {if _eaad .FilterFunc !=nil {_daadg =_cebd .filteredFields (_eaad .FilterFunc ,true );_gdea =_cebd .Fields !=nil &&len (*_cebd .Fields )> 0;
}else {_daadg =_cebd .AllFields ();};};for _ ,_cfge :=range _daadg {for _ ,_cadca :=range _cfge .Annotations {_ccga [_cadca .PdfAnnotation ]=_cfge .V !=nil ;if _bdcf !=nil {_abeca ,_ggba :=_bdcf .GenerateAppearanceDict (_cebd ,_cfge ,_cadca );if _ggba !=nil {return _ggba ;
};_cadca .AP =_abeca ;};};};};if _bdbg {for _ ,_efge :=range _eaeg .PageList {_dbaf ,_bcca :=_efge .GetAnnotations ();if _bcca !=nil {return _bcca ;};for _ ,_fdead :=range _dbaf {_ccga [_fdead ]=true ;};};};for _ ,_fgcad :=range _eaeg .PageList {var _abda []*PdfAnnotation ;
if _bdcf !=nil {if _bcdc :=_bdcf .WrapContentStream (_fgcad );_bcdc !=nil {return _bcdc ;};};_gcafg ,_ffgeg :=_fgcad .GetAnnotations ();if _ffgeg !=nil {return _ffgeg ;};for _ ,_edcbef :=range _gcafg {_ebbcg ,_gdagd :=_ccga [_edcbef ];if !_gdagd &&_eaad .AnnotFilterFunc !=nil {if _ ,_gacfc :=_edcbef .GetContext ().(*PdfAnnotationWidget );
!_gacfc {_gdagd =_eaad .AnnotFilterFunc (_edcbef );};};if !_gdagd {_abda =append (_abda ,_edcbef );continue ;};switch _edcbef .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_eeag ,_egfa ,_bafdc :=_ddbea (_edcbef );if _bafdc !=nil {if !_ebbcg {_bef .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_bafdc );
continue ;};if _eeag ==nil {continue ;};_dfbbc :=_fgcad .Resources .GenerateXObjectName ();_fgcad .Resources .SetXObjectFormByName (_dfbbc ,_eeag );_deag :=_dc .Min (_egfa .Llx ,_egfa .Urx );_cgcce :=_dc .Min (_egfa .Lly ,_egfa .Ury );var _ffgdb []string ;
_ffgdb =append (_ffgdb ,"\u0071");_ffgdb =append (_ffgdb ,_ad .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_deag ,_cgcce ));
_ffgdb =append (_ffgdb ,_ad .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_dfbbc .String ()));_ffgdb =append (_ffgdb ,"\u0051");_ddgbf :=_be .Join (_ffgdb ,"\u000a");_bafdc =_fgcad .AppendContentStream (_ddgbf );if _bafdc !=nil {return _bafdc ;};if _eeag .Resources !=nil {_gcgcd ,_gaege :=_adfb .GetDict (_eeag .Resources .Font );
if _gaege {for _ ,_befdg :=range _gcgcd .Keys (){if !_fgcad .Resources .HasFontByName (_befdg ){_fgcad .Resources .SetFontByName (_befdg ,_gcgcd .Get (_befdg ));};};};};};if len (_abda )> 0{_fgcad ._fagca =_abda ;}else {_fgcad ._fagca =[]*PdfAnnotation {};
};};if !_gdea {_eaeg .AcroForm =nil ;};return nil ;};var _cecdb =false ;

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_bacdc *pdfFontSimple )SetEncoder (encoder _ba .TextEncoder ){_bacdc ._ddabe =encoder };

// ToPdfObject converts the font to a PDF representation.
func (_daafe *pdfFontType0 )ToPdfObject ()_adfb .PdfObject {if _daafe ._gfde ==nil {_daafe ._gfde =&_adfb .PdfIndirectObject {};};_acdd :=_daafe .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_daafe ._gfde .PdfObject =_acdd ;if _daafe .Encoding !=nil {_acdd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_daafe .Encoding );
}else if _daafe ._bcdga !=nil {_acdd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_daafe ._bcdga .ToPdfObject ());};if _daafe .DescendantFont !=nil {_acdd .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_adfb .MakeArray (_daafe .DescendantFont .ToPdfObject ()));
};return _daafe ._gfde ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_fcgba FieldFlag )Has (fl FieldFlag )bool {return (_fcgba .Mask ()&fl .Mask ())> 0};func _gafcd (_dedbg *_adfb .PdfObjectDictionary ,_gaag *fontCommon )(*pdfFontType3 ,error ){_cdefc :=_fbbb (_gaag );_dggbd :=_dedbg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _dggbd ==nil {_dggbd =_adfb .MakeInteger (0);};_cdefc .FirstChar =_dggbd ;_dddag ,_dcgb :=_adfb .GetIntVal (_dggbd );if !_dcgb {_bef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dggbd );
return nil ,_adfb .ErrTypeError ;};_begef :=_ba .CharCode (_dddag );_dggbd =_dedbg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _dggbd ==nil {_dggbd =_adfb .MakeInteger (255);};_cdefc .LastChar =_dggbd ;_dddag ,_dcgb =_adfb .GetIntVal (_dggbd );
if !_dcgb {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_dggbd );return nil ,_adfb .ErrTypeError ;
};_dccag :=_ba .CharCode (_dddag );_dggbd =_dedbg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _dggbd !=nil {_cdefc .Resources =_dggbd ;};_dggbd =_dedbg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _dggbd ==nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_dggbd );
return nil ,_adfb .ErrNotSupported ;};_cdefc .CharProcs =_dggbd ;_dggbd =_dedbg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _dggbd ==nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_dggbd );
return nil ,_adfb .ErrNotSupported ;};_cdefc .FontMatrix =_dggbd ;_cdefc ._fgfb =make (map[_ba .CharCode ]float64 );_dggbd =_dedbg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _dggbd !=nil {_cdefc .Widths =_dggbd ;_dbad ,_fbfbe :=_adfb .GetArray (_dggbd );
if !_fbfbe {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_dggbd );return nil ,_adfb .ErrTypeError ;
};_aegfg ,_bfgb :=_dbad .ToFloat64Array ();if _bfgb !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bfgb ;};if len (_aegfg )!=int (_dccag -_begef +1){_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dccag -_begef +1,len (_aegfg ));
return nil ,_adfb .ErrRangeError ;};_dbebf ,_fbfbe :=_adfb .GetArray (_cdefc .FontMatrix );if !_fbfbe {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dbebf );
return nil ,_bfgb ;};_faea ,_bfgb :=_dbebf .ToFloat64Array ();if _bfgb !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bfgb ;};_cdea :=_fb .NewMatrix (_faea [0],_faea [1],_faea [2],_faea [3],_faea [4],_faea [5]);for _acgc ,_beab :=range _aegfg {_acfdd ,_ :=_cdea .Transform (_beab ,_beab );_cdefc ._fgfb [_begef +_ba .CharCode (_acgc )]=_acfdd ;};};_cdefc .Encoding =_adfb .TraceToDirectObject (_dedbg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_cbcfb :=_dedbg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cbcfb !=nil {_cdefc ._cfagb =_adfb .TraceToDirectObject (_cbcfb );_cegff ,_fccb :=_gdeb (_cdefc ._cfagb ,&_cdefc .fontCommon );if _fccb !=nil {return nil ,_fccb ;};_cdefc ._gdgf =_cegff ;
};if _aeabf :=_cdefc ._gdgf ;_aeabf !=nil {_cdefc ._bcbgf =_ba .NewCMapEncoder ("",nil ,_aeabf );}else {_cdefc ._bcbgf =_ba .NewPdfDocEncoder ();};return _cdefc ,nil ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_cdae *PdfInfo )GetCustomInfo (name string )*_adfb .PdfObjectString {var _aafg *_adfb .PdfObjectString ;if _cdae ._cgdf ==nil {return _aafg ;};if _ffacb ,_fabe :=_cdae ._cgdf .Get (*_adfb .MakeName (name )).(*_adfb .PdfObjectString );_fabe {_aafg =_ffacb ;
};return _aafg ;};func _agcdd (_eedga *_adfb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_ababa :=&PdfShadingPattern {};_bdgcf :=_eedga .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _bdgcf ==nil {_bef .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ccecb ,_effcg :=_eaefe (_bdgcf );if _effcg !=nil {_bef .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_effcg );return nil ,_effcg ;
};_ababa .Shading =_ccecb ;if _agbe :=_eedga .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_agbe !=nil {_dgcaf ,_bfgdf :=_agbe .(*_adfb .PdfObjectArray );if !_bfgdf {_bef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agbe );
return nil ,_adfb .ErrTypeError ;};_ababa .Matrix =_dgcaf ;};if _gbfc :=_eedga .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gbfc !=nil {_ababa .ExtGState =_gbfc ;};return _ababa ,nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_bfcc *pdfFontSimple )ToPdfObject ()_adfb .PdfObject {if _bfcc ._dbbeb ==nil {_bfcc ._dbbeb =&_adfb .PdfIndirectObject {};};_ggdbfc :=_bfcc .baseFields ().asPdfObjectDictionary ("");_bfcc ._dbbeb .PdfObject =_ggdbfc ;if _bfcc .FirstChar !=nil {_ggdbfc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bfcc .FirstChar );
};if _bfcc .LastChar !=nil {_ggdbfc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bfcc .LastChar );};if _bfcc .Widths !=nil {_ggdbfc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bfcc .Widths );};if _bfcc .Encoding !=nil {_ggdbfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bfcc .Encoding );
}else if _bfcc ._ddabe !=nil {_fgdc :=_bfcc ._ddabe .ToPdfObject ();if _fgdc !=nil {_ggdbfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fgdc );};};return _bfcc ._dbbeb ;};func (_bfdg *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _ebaaf []*PdfFieldSignature ;
for _ ,_eacdf :=range _bfdg .AllFields (){switch _geddf :=_eacdf .GetContext ().(type ){case *PdfFieldSignature :_cebc :=_geddf ;_ebaaf =append (_ebaaf ,_cebc );};};return _ebaaf ;};func (_cbe *PdfAnnotation )String ()string {_dae :="";_cec ,_adga :=_cbe .ToPdfObject ().(*_adfb .PdfIndirectObject );
if _adga {_dae =_ad .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cbe ._acf ,_cec .PdfObject .String ());};return _dae ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_defeb *PdfFieldChoice )ToPdfObject ()_adfb .PdfObject {_defeb .PdfField .ToPdfObject ();_cdba :=_defeb ._dfgf ;_bfba :=_cdba .PdfObject .(*_adfb .PdfObjectDictionary );_bfba .Set ("\u0046\u0054",_adfb .MakeName ("\u0043\u0068"));if _defeb .Opt !=nil {_bfba .Set ("\u004f\u0070\u0074",_defeb .Opt );
};if _defeb .TI !=nil {_bfba .Set ("\u0054\u0049",_defeb .TI );};if _defeb .I !=nil {_bfba .Set ("\u0049",_defeb .I );};return _cdba ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_fdec *PdfFieldButton )IsPush ()bool {return _fdec .GetType ()==ButtonTypePush };

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _adfb .PdfObject )(*PdfFilespec ,error ){_babc :=&PdfFilespec {};var _gaeg *_adfb .PdfObjectDictionary ;if _abacg ,_cfeb :=_adfb .GetIndirect (obj );_cfeb {_babc ._ggeb =_abacg ;_dadd ,_fbad :=_adfb .GetDict (_abacg .PdfObject );
if !_fbad {_bef .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_adfb .ErrTypeError ;};_gaeg =_dadd ;}else if _dddae ,_ddbbc :=_adfb .GetDict (obj );
_ddbbc {_babc ._ggeb =_dddae ;_gaeg =_dddae ;}else {_bef .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_adfb .ErrTypeError ;};if _gaeg ==nil {_bef .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cfe .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _edgd :=_gaeg .Get ("\u0054\u0079\u0070\u0065");_edgd !=nil {_bafe ,_ecfa :=_edgd .(*_adfb .PdfObjectName );if !_ecfa {_bef .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_edgd );
}else {if *_bafe !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_bef .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bafe );
};};};if _ggdg :=_gaeg .Get ("\u0046\u0053");_ggdg !=nil {_babc .FS =_ggdg ;};if _geeb :=_gaeg .Get ("\u0046");_geeb !=nil {_babc .F =_geeb ;};if _abde :=_gaeg .Get ("\u0055\u0046");_abde !=nil {_babc .UF =_abde ;};if _ebdf :=_gaeg .Get ("\u0044\u004f\u0053");
_ebdf !=nil {_babc .DOS =_ebdf ;};if _cbbeg :=_gaeg .Get ("\u004d\u0061\u0063");_cbbeg !=nil {_babc .Mac =_cbbeg ;};if _ffcaa :=_gaeg .Get ("\u0055\u006e\u0069\u0078");_ffcaa !=nil {_babc .Unix =_ffcaa ;};if _fege :=_gaeg .Get ("\u0049\u0044");_fege !=nil {_babc .ID =_fege ;
};if _egbda :=_gaeg .Get ("\u0056");_egbda !=nil {_babc .V =_egbda ;};if _ggab :=_gaeg .Get ("\u0045\u0046");_ggab !=nil {_babc .EF =_ggab ;};if _afdb :=_gaeg .Get ("\u0052\u0046");_afdb !=nil {_babc .RF =_afdb ;};if _fgbb :=_gaeg .Get ("\u0044\u0065\u0073\u0063");
_fgbb !=nil {_babc .Desc =_fgbb ;};if _cfde :=_gaeg .Get ("\u0043\u0049");_cfde !=nil {_babc .CI =_cfde ;};return _babc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ccff *PdfAnnotationProjection )ToPdfObject ()_adfb .PdfObject {_ccff .PdfAnnotation .ToPdfObject ();_cbb :=_ccff ._ged ;_ecdc :=_cbb .PdfObject .(*_adfb .PdfObjectDictionary );_ccff .PdfAnnotationMarkup .appendToPdfDictionary (_ecdc );return _cbb ;
};func (_aag *PdfReader )newPdfActionThreadFromDict (_fce *_adfb .PdfObjectDictionary )(*PdfActionThread ,error ){_aecd ,_fbbg :=_fda (_fce .Get ("\u0046"));if _fbbg !=nil {return nil ,_fbbg ;};return &PdfActionThread {D :_fce .Get ("\u0044"),B :_fce .Get ("\u0042"),F :_aecd },nil ;
};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_adfb .PdfIndirectObject )*PdfOutlineItem {_eeab :=PdfOutlineItem {};_eeab ._ddddf =&_eeab ;_eeab .Title =_adfb .MakeString (title );_cfbfg :=_adfb .MakeArray ();_cfbfg .Append (page );_cfbfg .Append (_adfb .MakeName ("\u0046\u0069\u0074"));
_eeab .Dest =_cfbfg ;return &_eeab ;};

// ToGoTime returns the date in time.Time format.
func (_dcgfb PdfDate )ToGoTime ()_c .Time {_bbfdd :=int (_dcgfb ._bgbag *60*60+_dcgfb ._edgg *60);switch _dcgfb ._abadb {case '-':_bbfdd =-_bbfdd ;case 'Z':_bbfdd =0;};_bfffc :=_ad .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_dcgfb ._abadb ,_dcgfb ._bgbag ,_dcgfb ._edgg );
_aagb :=_c .FixedZone (_bfffc ,_bbfdd );return _c .Date (int (_dcgfb ._adaae ),_c .Month (_dcgfb ._ceede ),int (_dcgfb ._edac ),int (_dcgfb ._gaecd ),int (_dcgfb ._gebad ),int (_dcgfb ._gbge ),0,_aagb );};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cebf *PdfColorspaceCalRGB )ToPdfObject ()_adfb .PdfObject {_bgfb :=&_adfb .PdfObjectArray {};_bgfb .Append (_adfb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_bagc :=_adfb .MakeDict ();if _cebf .WhitePoint !=nil {_ebga :=_adfb .MakeArray (_adfb .MakeFloat (_cebf .WhitePoint [0]),_adfb .MakeFloat (_cebf .WhitePoint [1]),_adfb .MakeFloat (_cebf .WhitePoint [2]));
_bagc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ebga );}else {_bef .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _cebf .BlackPoint !=nil {_decg :=_adfb .MakeArray (_adfb .MakeFloat (_cebf .BlackPoint [0]),_adfb .MakeFloat (_cebf .BlackPoint [1]),_adfb .MakeFloat (_cebf .BlackPoint [2]));_bagc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_decg );
};if _cebf .Gamma !=nil {_bcgdc :=_adfb .MakeArray (_adfb .MakeFloat (_cebf .Gamma [0]),_adfb .MakeFloat (_cebf .Gamma [1]),_adfb .MakeFloat (_cebf .Gamma [2]));_bagc .Set ("\u0047\u0061\u006dm\u0061",_bcgdc );};if _cebf .Matrix !=nil {_dcaf :=_adfb .MakeArray (_adfb .MakeFloat (_cebf .Matrix [0]),_adfb .MakeFloat (_cebf .Matrix [1]),_adfb .MakeFloat (_cebf .Matrix [2]),_adfb .MakeFloat (_cebf .Matrix [3]),_adfb .MakeFloat (_cebf .Matrix [4]),_adfb .MakeFloat (_cebf .Matrix [5]),_adfb .MakeFloat (_cebf .Matrix [6]),_adfb .MakeFloat (_cebf .Matrix [7]),_adfb .MakeFloat (_cebf .Matrix [8]));
_bagc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dcaf );};_bgfb .Append (_bagc );if _cebf ._dadee !=nil {_cebf ._dadee .PdfObject =_bgfb ;return _cebf ._dadee ;};return _bgfb ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _adfb .PdfObject ;_edbc []byte ;_cacb *_adfb .PdfIndirectObject ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_adfb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_dacd *_adfb .PdfIndirectObject ;};

// ToInteger convert to an integer format.
func (_gcc *PdfColorLab )ToInteger (bits int )[3]uint32 {_eace :=_dc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_eace *_gcc .L ()),uint32 (_eace *_gcc .A ()),uint32 (_eace *_gcc .B ())};};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _adfb .PdfObject ;IC _adfb .PdfObject ;BE _adfb .PdfObject ;RD _adfb .PdfObject ;};func _ggbdc (_bagff _adfb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_ceec :=&PdfColorspaceDeviceNAttributes {};
var _eded *_adfb .PdfObjectDictionary ;switch _gccc :=_bagff .(type ){case *_adfb .PdfIndirectObject :_ceec ._fcdb =_gccc ;var _ggdc bool ;_eded ,_ggdc =_gccc .PdfObject .(*_adfb .PdfObjectDictionary );if !_ggdc {_bef .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_adfb .PdfObjectDictionary :_eded =_gccc ;case *_adfb .PdfObjectReference :_effada :=_gccc .Resolve ();return _ggbdc (_effada );default:_bef .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cdbg :=_eded .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cdbg !=nil {_dbfa ,_cbfgb :=_adfb .TraceToDirectObject (_cdbg ).(*_adfb .PdfObjectName );if !_cbfgb {_bef .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ceec .Subtype =_dbfa ;};if _cded :=_eded .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_cded !=nil {_ceec .Colorants =_cded ;};if _bceb :=_eded .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_bceb !=nil {_ceec .Process =_bceb ;};if _fcfd :=_eded .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_fcfd !=nil {_ceec .MixingHints =_fcfd ;};return _ceec ,nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_fdgc *PdfPattern )IsShading ()bool {return _fdgc .PatternType ==2};func (_agda *Image )resampleLowBits (_cfdag []uint32 ){_dafc :=_afe .BytesPerLine (int (_agda .Width ),int (_agda .BitsPerComponent ),_agda .ColorComponents );_eccb :=make ([]byte ,_agda .ColorComponents *_dafc *int (_agda .Height ));
_caagc :=int (_agda .BitsPerComponent )*_agda .ColorComponents *int (_agda .Width );_bbcbg :=uint8 (8);var (_gadfa ,_fagd int ;_aaece uint32 ;);for _dfgfc :=0;_dfgfc < int (_agda .Height );_dfgfc ++{_fagd =_dfgfc *_dafc ;for _cfce :=0;_cfce < _caagc ;_cfce ++{_aaece =_cfdag [_gadfa ];
_bbcbg -=uint8 (_agda .BitsPerComponent );_eccb [_fagd ]|=byte (_aaece )<<_bbcbg ;if _bbcbg ==0{_bbcbg =8;_fagd ++;};_gadfa ++;};};_agda .Data =_eccb ;};func (_fefgb *PdfReader )newPdfAcroFormFromDict (_afefg *_adfb .PdfIndirectObject ,_cfef *_adfb .PdfObjectDictionary )(*PdfAcroForm ,error ){_fdega :=NewPdfAcroForm ();
if _afefg !=nil {_fdega ._geacd =_afefg ;_afefg .PdfObject =_adfb .MakeDict ();};if _dbefg :=_cfef .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_dbefg !=nil &&!_adfb .IsNullObject (_dbefg ){_cbeae ,_eeef :=_adfb .GetArray (_dbefg );if !_eeef {return nil ,_ad .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dbefg );
};var _cecde []*PdfField ;for _ ,_agbfc :=range _cbeae .Elements (){_ddfbb ,_cgag :=_adfb .GetIndirect (_agbfc );if !_cgag {if _ ,_gfge :=_agbfc .(*_adfb .PdfObjectNull );_gfge {_bef .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_bef .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_agbfc );
return nil ,_ad .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_afag ,_gbgf :=_fefgb .newPdfFieldFromIndirectObject (_ddfbb ,nil );
if _gbgf !=nil {return nil ,_gbgf ;};_bef .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_afag );_cecde =append (_cecde ,_afag );};_fdega .Fields =&_cecde ;};if _ddeed :=_cfef .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_ddeed !=nil {_deddd ,_feff :=_adfb .GetBool (_ddeed );if _feff {_fdega .NeedAppearances =_deddd ;}else {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ddeed );
};};if _bgde :=_cfef .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bgde !=nil {_gaafd ,_febgg :=_adfb .GetInt (_bgde );if _febgg {_fdega .SigFlags =_gaafd ;}else {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgde );
};};if _dgdgcg :=_cfef .Get ("\u0043\u004f");_dgdgcg !=nil {_ccaa ,_aabcf :=_adfb .GetArray (_dgdgcg );if _aabcf {_fdega .CO =_ccaa ;}else {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dgdgcg );
};};if _dfbcc :=_cfef .Get ("\u0044\u0052");_dfbcc !=nil {if _cedf ,_ffcaag :=_adfb .GetDict (_dfbcc );_ffcaag {_ggbff ,_abce :=NewPdfPageResourcesFromDict (_cedf );if _abce !=nil {_bef .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_abce );
return nil ,_abce ;};_fdega .DR =_ggbff ;}else {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dfbcc );};};if _eddag :=_cfef .Get ("\u0044\u0041");
_eddag !=nil {_cdaabe ,_ggea :=_adfb .GetString (_eddag );if _ggea {_fdega .DA =_cdaabe ;}else {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eddag );
};};if _afaa :=_cfef .Get ("\u0051");_afaa !=nil {_abacgd ,_eddbg :=_adfb .GetInt (_afaa );if _eddbg {_fdega .Q =_abacgd ;}else {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_afaa );
};};if _gced :=_cfef .Get ("\u0058\u0046\u0041");_gced !=nil {_fdega .XFA =_gced ;};_fdega .ToPdfObject ();return _fdega ,nil ;};func (_bbcef *PdfWriter )updateObjectNumbers (){_dgfcg :=_bbcef .ObjNumOffset ;_fage :=0;for _ ,_ffecce :=range _bbcef ._fcefd {_bcacd :=int64 (_fage +1+_dgfcg );
_bdad :=true ;if _bbcef ._fbggb {if _fegfd ,_eaeea :=_bbcef ._cgbb [_ffecce ];_eaeea {_bcacd =_fegfd ;_bdad =false ;};};switch _ffgbad :=_ffecce .(type ){case *_adfb .PdfIndirectObject :_ffgbad .ObjectNumber =_bcacd ;_ffgbad .GenerationNumber =0;case *_adfb .PdfObjectStream :_ffgbad .ObjectNumber =_bcacd ;
_ffgbad .GenerationNumber =0;case *_adfb .PdfObjectStreams :_ffgbad .ObjectNumber =_bcacd ;_ffgbad .GenerationNumber =0;default:_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ffgbad );
continue ;};if _bdad {_fage ++;};};_gggdc :=func (_ccbfe _adfb .PdfObject )int64 {switch _bdfbe :=_ccbfe .(type ){case *_adfb .PdfIndirectObject :return _bdfbe .ObjectNumber ;case *_adfb .PdfObjectStream :return _bdfbe .ObjectNumber ;case *_adfb .PdfObjectStreams :return _bdfbe .ObjectNumber ;
};return 0;};_ab .SliceStable (_bbcef ._fcefd ,func (_dbcg ,_afbe int )bool {return _gggdc (_bbcef ._fcefd [_dbcg ])< _gggdc (_bbcef ._fcefd [_afbe ])});};

// ToPdfObject implements interface PdfModel.
func (_cfdbf *PdfSignatureReference )ToPdfObject ()_adfb .PdfObject {_afddg :=_adfb .MakeDict ();_afddg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cfdbf .Type );_afddg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_cfdbf .TransformMethod );
_afddg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_cfdbf .TransformParams );_afddg .SetIfNotNil ("\u0044\u0061\u0074\u0061",_cfdbf .Data );_afddg .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_cfdbf .DigestMethod );
return _afddg ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _adfb .PdfObject ;};

// IsValid checks if the given pdf output intent type is valid.
func (_egedg PdfOutputIntentType )IsValid ()bool {return _egedg >=PdfOutputIntentTypeA1 &&_egedg <=PdfOutputIntentTypeX ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_gddd *PdfColorspaceICCBased )ToPdfObject ()_adfb .PdfObject {_dafgd :=&_adfb .PdfObjectArray {};_dafgd .Append (_adfb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _aegg *_adfb .PdfObjectStream ;if _gddd ._gebfd !=nil {_aegg =_gddd ._gebfd ;
}else {_aegg =&_adfb .PdfObjectStream {};};_fefe :=_adfb .MakeDict ();_fefe .Set ("\u004e",_adfb .MakeInteger (int64 (_gddd .N )));if _gddd .Alternate !=nil {_fefe .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_gddd .Alternate .ToPdfObject ());};
if _gddd .Metadata !=nil {_fefe .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gddd .Metadata );};if _gddd .Range !=nil {var _gebd []_adfb .PdfObject ;for _ ,_bbbd :=range _gddd .Range {_gebd =append (_gebd ,_adfb .MakeFloat (_bbbd ));};_fefe .Set ("\u0052\u0061\u006eg\u0065",_adfb .MakeArray (_gebd ...));
};_fefe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_adfb .MakeInteger (int64 (len (_gddd .Data ))));_aegg .Stream =_gddd .Data ;_aegg .PdfObjectDictionary =_fefe ;_dafgd .Append (_aegg );if _gddd ._dffd !=nil {_gddd ._dffd .PdfObject =_dafgd ;return _gddd ._dffd ;
};return _dafgd ;};var ErrColorOutOfRange =_cfe .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");func (_fedg *PdfWriter )writeDocumentVersion (){if _fedg ._fbggb {_fedg .writeString ("\u000a");}else {_fedg .writeString (_ad .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_fedg ._dbbecb .Major ,_fedg ._dbbecb .Minor ));
_fedg .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};func _aegbc ()string {_gebbe .Lock ();defer _gebbe .Unlock ();return _cgdef };

// ToPdfObject returns a stream object.
func (_gggbc *XObjectForm )ToPdfObject ()_adfb .PdfObject {_aacff :=_gggbc ._ddcaaa ;_gdfgaf :=_aacff .PdfObjectDictionary ;if _gggbc .Filter !=nil {_gdfgaf =_gggbc .Filter .MakeStreamDict ();_aacff .PdfObjectDictionary =_gdfgaf ;};_gdfgaf .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_gdfgaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0046\u006f\u0072\u006d"));_gdfgaf .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_gggbc .FormType );_gdfgaf .SetIfNotNil ("\u0042\u0042\u006f\u0078",_gggbc .BBox );
_gdfgaf .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_gggbc .Matrix );if _gggbc .Resources !=nil {_gdfgaf .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gggbc .Resources .ToPdfObject ());};_gdfgaf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gggbc .Group );
_gdfgaf .SetIfNotNil ("\u0052\u0065\u0066",_gggbc .Ref );_gdfgaf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_gggbc .MetaData );_gdfgaf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gggbc .PieceInfo );_gdfgaf .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gggbc .LastModified );
_gdfgaf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gggbc .StructParent );_gdfgaf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gggbc .StructParents );_gdfgaf .SetIfNotNil ("\u004f\u0050\u0049",_gggbc .OPI );
_gdfgaf .SetIfNotNil ("\u004f\u0043",_gggbc .OC );_gdfgaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gggbc .Name );_gdfgaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_adfb .MakeInteger (int64 (len (_gggbc .Stream ))));_aacff .Stream =_gggbc .Stream ;return _aacff ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_dceda *PdfSignature )GetContainingPdfObject ()_adfb .PdfObject {return _dceda ._gbebc };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_egde *PdfShadingType3 )ToPdfObject ()_adfb .PdfObject {_egde .PdfShading .ToPdfObject ();_cecc ,_eafb :=_egde .getShadingDict ();if _eafb !=nil {_bef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _egde .Coords !=nil {_cecc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_egde .Coords );};if _egde .Domain !=nil {_cecc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egde .Domain );};if _egde .Function !=nil {if len (_egde .Function )==1{_cecc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egde .Function [0].ToPdfObject ());
}else {_daece :=_adfb .MakeArray ();for _ ,_gfefc :=range _egde .Function {_daece .Append (_gfefc .ToPdfObject ());};_cecc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_daece );};};if _egde .Extend !=nil {_cecc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_egde .Extend );
};return _egde ._egbfe ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fbc *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ggf *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_cdag *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};func (_bggdc *PdfWriter )writeString (_dcgcd string ){if _bggdc ._aabaf !=nil {return ;};_bbffb ,_ffada :=_bggdc ._ebbda .WriteString (_dcgcd );_bggdc ._dgbga +=int64 (_bbffb );
_bggdc ._aabaf =_ffada ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_ffcfb *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_aaacb :=RC4_128bit ;if options !=nil {_aaacb =options .Algorithm ;};_eaddcc :=_bga .PermOwner ;if options !=nil {_eaddcc =options .Permissions ;};var _abdfa _af .Filter ;
switch _aaacb {case RC4_128bit :_abdfa =_af .NewFilterV2 (16);case AES_128bit :_abdfa =_af .NewFilterAESV2 ();case AES_256bit :_abdfa =_af .NewFilterAESV3 ();default:return _ad .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_bbgb ,_gega ,_bcacf :=_adfb .PdfCryptNewEncrypt (_abdfa ,userPass ,ownerPass ,_eaddcc );if _bcacf !=nil {return _bcacf ;};_ffcfb ._bfagb =_bbgb ;if _gega .Major !=0{_ffcfb .SetVersion (_gega .Major ,_gega .Minor );};_ffcfb ._cfaffa =_gega .Encrypt ;
_ffcfb ._cgccef ,_ffcfb ._bbaba =_gega .ID0 ,_gega .ID1 ;_ffdea :=_adfb .MakeIndirectObject (_gega .Encrypt );_ffcfb ._bgbdb =_ffdea ;_ffcfb .addObject (_ffdea );return nil ;};

// Write writes out the PDF.
func (_adfbbd *PdfWriter )Write (writer _gb .Writer )error {_bef .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_bbcdb :=_adfbbd .checkLicense ();if _bbcdb !=nil {return _bbcdb ;};if _bbcdb =_adfbbd .writeOutlines ();_bbcdb !=nil {return _bbcdb ;
};if _bbcdb =_adfbbd .writeAcroFormFields ();_bbcdb !=nil {return _bbcdb ;};_adfbbd .checkPendingObjects ();if _bbcdb =_adfbbd .writeOutputIntents ();_bbcdb !=nil {return _bbcdb ;};_adfbbd .setCatalogVersion ();_adfbbd .copyObjects ();if _bbcdb =_adfbbd .optimize ();
_bbcdb !=nil {return _bbcdb ;};if _bbcdb =_adfbbd .optimizeDocument ();_bbcdb !=nil {return _bbcdb ;};var _ffaef _f .Hash ;if _adfbbd ._ddfag {_ffaef =_cc .New ();writer =_gb .MultiWriter (_ffaef ,writer );};_adfbbd .setWriter (writer );_bdbfb :=_adfbbd .checkCrossReferenceStream ();
_gfdc ,_bdbfb :=_adfbbd .mapObjectStreams (_bdbfb );_adfbbd .adjustXRefAffectedVersion (_bdbfb );_adfbbd .writeDocumentVersion ();_adfbbd .updateObjectNumbers ();_adfbbd .writeObjects ();if _bbcdb =_adfbbd .writeObjectsInStreams (_gfdc );_bbcdb !=nil {return _bbcdb ;
};_cbbefc :=_adfbbd ._dgbga ;var _aabae int ;for _bfeceb :=range _adfbbd ._aaead {if _bfeceb > _aabae {_aabae =_bfeceb ;};};if _adfbbd ._ddfag {if _bbcdb =_adfbbd .setHashIDs (_ffaef );_bbcdb !=nil {return _bbcdb ;};};if _bdbfb {if _bbcdb =_adfbbd .writeXRefStreams (_aabae ,_cbbefc );
_bbcdb !=nil {return _bbcdb ;};}else {_adfbbd .writeTrailer (_aabae );};_adfbbd .makeOffSetReference (_cbbefc );if _bbcdb =_adfbbd .flushWriter ();_bbcdb !=nil {return _bbcdb ;};return nil ;};func _cbcb ()_c .Time {_gebbe .Lock ();defer _gebbe .Unlock ();
return _agfgg };

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gbga *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _cfe .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dccc :=field .V ;if _dccc ==nil {return _cfe .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bfdf :=pageNum -1;
if _bfdf < 0||_bfdf > len (_gbga ._gde )-1{return _ad .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_ecfcg :=_gbga .Reader .PageList [_bfdf ];field .P =_ecfcg .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_adfb .MakeString (_ad .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_ecfcg .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _gbga ._ecb ==_gbga ._agd .AcroForm {_gbga ._ecb =_gbga .Reader .AcroForm ;};_caga :=_gbga ._ecb ;if _caga ==nil {_caga =NewPdfAcroForm ();};_caga .SigFlags =_adfb .MakeInteger (3);
_acaf :=append (_caga .AllFields (),field .PdfField );_caga .Fields =&_acaf ;_gbga .ReplaceAcroForm (_caga );_gbga .UpdatePage (_ecfcg );_gbga ._gde [_bfdf ]=_ecfcg ;if _ ,_abc :=field .V .GetDocMDPPermission ();_abc {_gbga ._eeeea =NewPermissions (field .V );
};return nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_cbcfbf []_adfb .PdfObject )([]_adfb .PdfObject ,error );};

// GetStandardApplier gets currently used StandardApplier..
func (_ecbde *PdfWriter )GetStandardApplier ()StandardApplier {return _ecbde ._bbef };

// SetFlag sets the flag for the field.
func (_ccfed *PdfField )SetFlag (flag FieldFlag ){_ccfed .Ff =_adfb .MakeInteger (int64 (flag ))};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gbebc *_adfb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_adfb .PdfObjectName ;Filter *_adfb .PdfObjectName ;SubFilter *_adfb .PdfObjectName ;Contents *_adfb .PdfObjectString ;Cert _adfb .PdfObject ;ByteRange *_adfb .PdfObjectArray ;Reference *_adfb .PdfObjectArray ;Changes *_adfb .PdfObjectArray ;Name *_adfb .PdfObjectString ;
M *_adfb .PdfObjectString ;Location *_adfb .PdfObjectString ;Reason *_adfb .PdfObjectString ;ContactInfo *_adfb .PdfObjectString ;R *_adfb .PdfObjectInteger ;V *_adfb .PdfObjectInteger ;PropBuild *_adfb .PdfObjectDictionary ;PropAuthTime *_adfb .PdfObjectInteger ;
PropAuthType *_adfb .PdfObjectName ;};func (_dcgga *PdfWriter )flushWriter ()error {if _dcgga ._aabaf ==nil {_dcgga ._aabaf =_dcgga ._ebbda .Flush ();};return _dcgga ._aabaf ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_deafa *PdfShading )ToPdfObject ()_adfb .PdfObject {_gfefe :=_deafa ._egbfe ;_gecdf ,_gbffc :=_deafa .getShadingDict ();if _gbffc !=nil {_bef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _deafa .ShadingType !=nil {_gecdf .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_deafa .ShadingType );};if _deafa .ColorSpace !=nil {_gecdf .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_deafa .ColorSpace .ToPdfObject ());
};if _deafa .Background !=nil {_gecdf .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_deafa .Background );};if _deafa .BBox !=nil {_gecdf .Set ("\u0042\u0042\u006f\u0078",_deafa .BBox .ToPdfObject ());};if _deafa .AntiAlias !=nil {_gecdf .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_deafa .AntiAlias );
};return _gfefe ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_cfcb *PdfAnnotation )ToPdfObject ()_adfb .PdfObject {_agga :=_cfcb ._ged ;_affg :=_agga .PdfObject .(*_adfb .PdfObjectDictionary );_affg .Clear ();_affg .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0041\u006e\u006eo\u0074"));_affg .SetIfNotNil ("\u0052\u0065\u0063\u0074",_cfcb .Rect );
_affg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cfcb .Contents );_affg .SetIfNotNil ("\u0050",_cfcb .P );_affg .SetIfNotNil ("\u004e\u004d",_cfcb .NM );_affg .SetIfNotNil ("\u004d",_cfcb .M );_affg .SetIfNotNil ("\u0046",_cfcb .F );
_affg .SetIfNotNil ("\u0041\u0050",_cfcb .AP );_affg .SetIfNotNil ("\u0041\u0053",_cfcb .AS );_affg .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_cfcb .Border );_affg .SetIfNotNil ("\u0043",_cfcb .C );_affg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cfcb .StructParent );
_affg .SetIfNotNil ("\u004f\u0043",_cfcb .OC );return _agga ;};

// SetImage updates XObject Image with new image data.
func (_debee *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_debee .Filter .UpdateParams (img .GetParamsDict ());_bbcce ,_cacgdb :=_debee .Filter .EncodeBytes (img .Data );if _cacgdb !=nil {return _cacgdb ;};_debee .Stream =_bbcce ;_egagg :=img .Width ;
_debee .Width =&_egagg ;_bgcgeg :=img .Height ;_debee .Height =&_bgcgeg ;_baccfd :=img .BitsPerComponent ;_debee .BitsPerComponent =&_baccfd ;if cs ==nil {if img .ColorComponents ==1{_debee .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_debee .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_debee .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _cfe .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_debee .ColorSpace =cs ;};return nil ;
};func _gbdad (_ebdeg *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_ebdeg }};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_egcfb *PdfPageResources )SetXObjectFormByName (keyName _adfb .PdfObjectName ,xform *XObjectForm )error {_ceced :=xform .ToPdfObject ().(*_adfb .PdfObjectStream );_cfaac :=_egcfb .SetXObjectByName (keyName ,_ceced );return _cfaac ;};

// ToPdfObject implements interface PdfModel.
func (_bag *PdfActionResetForm )ToPdfObject ()_adfb .PdfObject {_bag .PdfAction .ToPdfObject ();_gbbb :=_bag ._ca ;_ceae :=_gbbb .PdfObject .(*_adfb .PdfObjectDictionary );_ceae .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeResetForm )));_ceae .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bag .Fields );
_ceae .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bag .Flags );return _gbbb ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cbegcf *PdfPage )GetAllContentStreams ()(string ,error ){_deece ,_fdcfa :=_cbegcf .GetContentStreams ();if _fdcfa !=nil {return "",_fdcfa ;};return _be .Join (_deece ,"\u0020"),nil ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_dbdcc *_adfb .PdfObjectDictionary ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_fggdg *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_feecg :=_fggdg ._aeea .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _feecg {return nil ,_cfe .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_feecg {return _fggdg ,nil ;};if _fggdg ._cbdg [revisionNumber ]!=nil {return _fggdg ._cbdg [revisionNumber ],nil ;};_degfb :=_fggdg ;for _eaeec :=_feecg -1;_eaeec >=revisionNumber ;_eaeec --{_daefg ,_egdbc :=_degfb .GetPreviousRevision ();
if _egdbc !=nil {return nil ,_egdbc ;};_fggdg ._cbdg [_eaeec ]=_daefg ;_degfb =_daefg ;};return _degfb ,nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_ffead *PdfWriter )SetRotation (rotate int64 )error {_ebdga ,_agcda :=_adfb .GetDict (_ffead ._gdfab );if !_agcda {return ErrTypeCheck ;};_ebdga .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_adfb .MakeInteger (rotate ));return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_afgbd *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_afgbd .NumInputs {_bef .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _afgbd ._ceeg ==nil {_dgbe :=_afgbd .processSamples ();if _dgbe !=nil {return nil ,_dgbe ;};};_fccce :=_afgbd .Encode ;if _fccce ==nil {_fccce =[]float64 {};
for _gccdb :=0;_gccdb < len (_afgbd .Size );_gccdb ++{_fccce =append (_fccce ,0);_fccce =append (_fccce ,float64 (_afgbd .Size [_gccdb ]-1));};};_efbcfb :=_afgbd .Decode ;if _efbcfb ==nil {_efbcfb =_afgbd .Range ;};_adagf :=make ([]int ,len (x ));for _gdfcc :=0;
_gdfcc < len (x );_gdfcc ++{_cbffg :=x [_gdfcc ];_fgfe :=_dc .Min (_dc .Max (_cbffg ,_afgbd .Domain [2*_gdfcc ]),_afgbd .Domain [2*_gdfcc +1]);_bbdffa :=_afe .LinearInterpolate (_fgfe ,_afgbd .Domain [2*_gdfcc ],_afgbd .Domain [2*_gdfcc +1],_fccce [2*_gdfcc ],_fccce [2*_gdfcc +1]);
_bbcdf :=_dc .Min (_dc .Max (_bbdffa ,0),float64 (_afgbd .Size [_gdfcc ]-1));_ecegg :=int (_dc .Floor (_bbcdf +0.5));if _ecegg < 0{_ecegg =0;}else if _ecegg > _afgbd .Size [_gdfcc ]{_ecegg =_afgbd .Size [_gdfcc ]-1;};_adagf [_gdfcc ]=_ecegg ;};_bcagf :=_adagf [0];
for _gccg :=1;_gccg < _afgbd .NumInputs ;_gccg ++{_bgcge :=_adagf [_gccg ];for _efcda :=0;_efcda < _gccg ;_efcda ++{_bgcge *=_afgbd .Size [_efcda ];};_bcagf +=_bgcge ;};_bcagf *=_afgbd .NumOutputs ;var _fgfaf []float64 ;for _afgf :=0;_afgf < _afgbd .NumOutputs ;
_afgf ++{_gbbfc :=_bcagf +_afgf ;if _gbbfc >=len (_afgbd ._ceeg ){_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_ddcce :=_afgbd ._ceeg [_gbbfc ];_dbbec :=_afe .LinearInterpolate (float64 (_ddcce ),0,_dc .Pow (2,float64 (_afgbd .BitsPerSample )),_efbcfb [2*_afgf ],_efbcfb [2*_afgf +1]);_ddae :=_dc .Min (_dc .Max (_dbbec ,_afgbd .Range [2*_afgf ]),_afgbd .Range [2*_afgf +1]);
_fgfaf =append (_fgfaf ,_ddae );};return _fgfaf ,nil ;};func (_ffce *PdfReader )newPdfAnnotationLineFromDict (_beef *_adfb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_adbe :=PdfAnnotationLine {};_cddg ,_acfb :=_ffce .newPdfAnnotationMarkupFromDict (_beef );
if _acfb !=nil {return nil ,_acfb ;};_adbe .PdfAnnotationMarkup =_cddg ;_adbe .L =_beef .Get ("\u004c");_adbe .BS =_beef .Get ("\u0042\u0053");_adbe .LE =_beef .Get ("\u004c\u0045");_adbe .IC =_beef .Get ("\u0049\u0043");_adbe .LL =_beef .Get ("\u004c\u004c");
_adbe .LLE =_beef .Get ("\u004c\u004c\u0045");_adbe .Cap =_beef .Get ("\u0043\u0061\u0070");_adbe .IT =_beef .Get ("\u0049\u0054");_adbe .LLO =_beef .Get ("\u004c\u004c\u004f");_adbe .CP =_beef .Get ("\u0043\u0050");_adbe .Measure =_beef .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_adbe .CO =_beef .Get ("\u0043\u004f");return &_adbe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfeac *PdfAnnotationStamp )ToPdfObject ()_adfb .PdfObject {_dfeac .PdfAnnotation .ToPdfObject ();_dee :=_dfeac ._ged ;_cddga :=_dee .PdfObject .(*_adfb .PdfObjectDictionary );_dfeac .PdfAnnotationMarkup .appendToPdfDictionary (_cddga );_cddga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0053\u0074\u0061m\u0070"));
_cddga .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfeac .Name );return _dee ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_adfb .PdfObjectString ;Q *_adfb .PdfObjectInteger ;DS *_adfb .PdfObjectString ;RV _adfb .PdfObject ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_afece *PdfAnnotationWidget )Field ()*PdfField {return _afece ._bbea };

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_fcggc []byte )(_gdcdg int ,_dgbcc error );};

// GetAction returns the PDF action for the annotation link.
func (_bgbf *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bgbf ._add !=nil {return _bgbf ._add ,nil ;};if _bgbf .A ==nil {return nil ,nil ;};if _bgbf ._gff ==nil {return nil ,nil ;};_cfbe ,_ccf :=_bgbf ._gff .loadAction (_bgbf .A );if _ccf !=nil {return nil ,_ccf ;
};_bgbf ._add =_cfbe ;return _bgbf ._add ,nil ;};

// String implements interface PdfObject.
func (_fbb *PdfAction )String ()string {_fe ,_de :=_fbb .ToPdfObject ().(*_adfb .PdfIndirectObject );if _de {return _ad .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fbb ._beg ,_fe .PdfObject .String ());};return "";};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_bce :=NewPdfAnnotation ();_bee :=&PdfAnnotationText {};_bee .PdfAnnotation =_bce ;_bee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bce .SetContext (_bee );return _bee ;};func (_egaec *PdfFilespec )getDict ()*_adfb .PdfObjectDictionary {if _gedf ,_cede :=_egaec ._ggeb .(*_adfb .PdfIndirectObject );
_cede {_ddadd ,_eefee :=_gedf .PdfObject .(*_adfb .PdfObjectDictionary );if !_eefee {return nil ;};return _ddadd ;}else if _dgagd ,_abfa :=_egaec ._ggeb .(*_adfb .PdfObjectDictionary );_abfa {return _dgagd ;}else {_bef .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_egaec ._ggeb );
return nil ;};};

// ToPdfObject implements interface PdfModel.
func (_fba *PdfAnnotationLink )ToPdfObject ()_adfb .PdfObject {_fba .PdfAnnotation .ToPdfObject ();_gcdc :=_fba ._ged ;_ccdb :=_gcdc .PdfObject .(*_adfb .PdfObjectDictionary );_ccdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u004c\u0069\u006e\u006b"));
if _fba ._add !=nil &&_fba ._add ._beg !=nil {_ccdb .Set ("\u0041",_fba ._add ._beg .ToPdfObject ());}else if _fba .A !=nil {_ccdb .Set ("\u0041",_fba .A );};_ccdb .SetIfNotNil ("\u0044\u0065\u0073\u0074",_fba .Dest );_ccdb .SetIfNotNil ("\u0048",_fba .H );
_ccdb .SetIfNotNil ("\u0050\u0041",_fba .PA );_ccdb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fba .QuadPoints );_ccdb .SetIfNotNil ("\u0042\u0053",_fba .BS );return _gcdc ;};func (_ddgbd *PdfWriter )mapObjectStreams (_befbd bool )(map[_adfb .PdfObject ]bool ,bool ){_fdcbg :=make (map[_adfb .PdfObject ]bool );
for _ ,_gdaf :=range _ddgbd ._fcefd {if _gaade ,_dbedc :=_gdaf .(*_adfb .PdfObjectStreams );_dbedc {_befbd =true ;for _ ,_eaade :=range _gaade .Elements (){_fdcbg [_eaade ]=true ;if _dddcb ,_afedf :=_eaade .(*_adfb .PdfIndirectObject );_afedf {_fdcbg [_dddcb .PdfObject ]=true ;
};};};};return _fdcbg ,_befbd ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_becg :_adfb .MakeDict ()};
};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// ColorToRGB converts a DeviceN color to an RGB color.
func (_agae *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _agae .AlternateSpace ==nil {return nil ,_cfe .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _agae .AlternateSpace .ColorToRGB (color );};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_gebbe .Lock ();defer _gebbe .Unlock ();_ebdag =producer };func _acdc (_afbda map[_ga .GID ]int ,_ccfc uint16 )*_adfb .PdfObjectArray {_fcaa :=&_adfb .PdfObjectArray {};_caab :=_ga .GID (_ccfc );for _gbbff :=_ga .GID (0);
_gbbff < _caab ;{_ecgb ,_gadb :=_afbda [_gbbff ];if !_gadb {_gbbff ++;continue ;};_ffcgf :=_gbbff ;for _bcffb :=_ffcgf +1;_bcffb < _caab ;_bcffb ++{if _cffcc ,_acade :=_afbda [_bcffb ];!_acade ||_ecgb !=_cffcc {break ;};_ffcgf =_bcffb ;};_fcaa .Append (_adfb .MakeInteger (int64 (_gbbff )));
_fcaa .Append (_adfb .MakeInteger (int64 (_ffcgf )));_fcaa .Append (_adfb .MakeInteger (int64 (_ecgb )));_gbbff =_ffcgf +1;};return _fcaa ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fcead *PdfField )GetContainingPdfObject ()_adfb .PdfObject {return _fcead ._dfgf };

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _c .Time ){_gebbe .Lock ();defer _gebbe .Unlock ();_gdeca =modifiedDate ;};

// ToPdfObject converts rectangle to a PDF object.
func (_adgbg *PdfRectangle )ToPdfObject ()_adfb .PdfObject {return _adfb .MakeArray (_adfb .MakeFloat (_adgbg .Llx ),_adfb .MakeFloat (_adgbg .Lly ),_adfb .MakeFloat (_adgbg .Urx ),_adfb .MakeFloat (_adgbg .Ury ));};

// GetNumComponents returns the number of color components (3 for Lab).
func (_fece *PdfColorLab )GetNumComponents ()int {return 3};func _bgdec ()_c .Time {_gebbe .Lock ();defer _gebbe .Unlock ();return _gdeca };

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_adfb .PdfObjectInteger ;BitsPerComponent *_adfb .PdfObjectInteger ;BitsPerFlag *_adfb .PdfObjectInteger ;Decode *_adfb .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_babgb :=&PdfFilespec {};_babgb ._ggeb =_adfb .MakeIndirectObject (_adfb .MakeDict ());return _babgb ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_gbba FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_gbba .Mask ()|fl .Mask ())};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_beag *PdfPageResources )GetFontByName (keyName _adfb .PdfObjectName )(_adfb .PdfObject ,bool ){if _beag .Font ==nil {return nil ,false ;};_ddecb ,_abcd :=_adfb .TraceToDirectObject (_beag .Font ).(*_adfb .PdfObjectDictionary );if !_abcd {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_adfb .TraceToDirectObject (_beag .Font ));
return nil ,false ;};if _abfbd :=_ddecb .Get (keyName );_abfbd !=nil {return _abfbd ,true ;};return nil ,false ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ffe :=NewPdfAction ();_adc :=&PdfActionGoToR {};_adc .PdfAction =_ffe ;_ffe .SetContext (_adc );return _adc ;};func (_ffcgc *PdfReader )newPdfActionSetOCGStateFromDict (_bdbb *_adfb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_bdbb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_bdbb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _adfb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _adfb .PdfObject ;Contents _adfb .PdfObject ;
Rotate *int64 ;Group _adfb .PdfObject ;Thumb _adfb .PdfObject ;B _adfb .PdfObject ;Dur _adfb .PdfObject ;Trans _adfb .PdfObject ;AA _adfb .PdfObject ;Metadata _adfb .PdfObject ;PieceInfo _adfb .PdfObject ;StructParents _adfb .PdfObject ;ID _adfb .PdfObject ;
PZ _adfb .PdfObject ;SeparationInfo _adfb .PdfObject ;Tabs _adfb .PdfObject ;TemplateInstantiated _adfb .PdfObject ;PresSteps _adfb .PdfObject ;UserUnit _adfb .PdfObject ;VP _adfb .PdfObject ;Annots _adfb .PdfObject ;_fagca []*PdfAnnotation ;_bdabg *_adfb .PdfObjectDictionary ;
_gcgac *_adfb .PdfIndirectObject ;_bdbgg *PdfReader ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _adfb .PdfObject )(*PdfFont ,error ){return _geaf (fontObj ,true )};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _adfb .PdfObject ;Q _adfb .PdfObject ;RC _adfb .PdfObject ;DS _adfb .PdfObject ;CL _adfb .PdfObject ;IT _adfb .PdfObject ;BE _adfb .PdfObject ;RD _adfb .PdfObject ;BS _adfb .PdfObject ;
LE _adfb .PdfObject ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_adfb .PdfObjectStream )(*XObjectImage ,error ){_dcbce :=&XObjectImage {};_dcbce ._efgf =stream ;_gdadd :=*(stream .PdfObjectDictionary );_gedfc ,_fagcd :=_adfb .NewEncoderFromStream (stream );if _fagcd !=nil {return nil ,_fagcd ;
};_dcbce .Filter =_gedfc ;if _fgba :=_adfb .TraceToDirectObject (_gdadd .Get ("\u0057\u0069\u0064t\u0068"));_fgba !=nil {_eegeg ,_dfgae :=_fgba .(*_adfb .PdfObjectInteger );if !_dfgae {return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_decgc :=int64 (*_eegeg );_dcbce .Width =&_decgc ;}else {return nil ,_cfe .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _efgag :=_adfb .TraceToDirectObject (_gdadd .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_efgag !=nil {_ggfbb ,_ggccb :=_efgag .(*_adfb .PdfObjectInteger );if !_ggccb {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_cbfef :=int64 (*_ggfbb );
_dcbce .Height =&_cbfef ;}else {return nil ,_cfe .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _abagd :=_adfb .TraceToDirectObject (_gdadd .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_abagd !=nil {_edgcd ,_bdeac :=NewPdfColorspaceFromPdfObject (_abagd );if _bdeac !=nil {return nil ,_bdeac ;};_dcbce .ColorSpace =_edgcd ;}else {_bef .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_dcbce .ColorSpace =NewPdfColorspaceDeviceGray ();};if _babgaa :=_adfb .TraceToDirectObject (_gdadd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_babgaa !=nil {_gdbfd ,_bafgg :=_babgaa .(*_adfb .PdfObjectInteger );
if !_bafgg {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_badad :=int64 (*_gdbfd );_dcbce .BitsPerComponent =&_badad ;};_dcbce .Intent =_gdadd .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_dcbce .ImageMask =_gdadd .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_dcbce .Mask =_gdadd .Get ("\u004d\u0061\u0073\u006b");_dcbce .Decode =_gdadd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_dcbce .Interpolate =_gdadd .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_dcbce .Alternatives =_gdadd .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_dcbce .SMask =_gdadd .Get ("\u0053\u004d\u0061s\u006b");_dcbce .SMaskInData =_gdadd .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_dcbce .Matte =_gdadd .Get ("\u004d\u0061\u0074t\u0065");_dcbce .Name =_gdadd .Get ("\u004e\u0061\u006d\u0065");_dcbce .StructParent =_gdadd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dcbce .ID =_gdadd .Get ("\u0049\u0044");
_dcbce .OPI =_gdadd .Get ("\u004f\u0050\u0049");_dcbce .Metadata =_gdadd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dcbce .OC =_gdadd .Get ("\u004f\u0043");_dcbce .Stream =stream .Stream ;return _dcbce ,nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cdgb DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_befcc *PdfPage )AddFont (name _adfb .PdfObjectName ,font _adfb .PdfObject )error {if _befcc .Resources ==nil {_befcc .Resources =NewPdfPageResources ();};if _befcc .Resources .Font ==nil {_befcc .Resources .Font =_adfb .MakeDict ();};_aebcb ,_cgfcf :=_adfb .TraceToDirectObject (_befcc .Resources .Font ).(*_adfb .PdfObjectDictionary );
if !_cgfcf {_bef .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_adfb .TraceToDirectObject (_befcc .Resources .Font ));
return _cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aebcb .Set (name ,font );return nil ;};

// PartialName returns the partial name of the field.
func (_edged *PdfField )PartialName ()string {_cdgd :="";if _edged .T !=nil {_cdgd =_edged .T .Decoded ();}else {_bef .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _cdgd ;};func (_bde *PdfReader )newPdfAnnotationFromIndirectObject (_cfa *_adfb .PdfIndirectObject )(*PdfAnnotation ,error ){_cgc ,_fcca :=_cfa .PdfObject .(*_adfb .PdfObjectDictionary );if !_fcca {return nil ,_ad .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bde ._bcfbd .GetModelFromPrimitive (_cgc );model !=nil {_ceb ,_cad :=model .(*PdfAnnotation );if !_cad {return nil ,_ad .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _ceb ,nil ;};_dgg :=&PdfAnnotation {};_dgg ._ged =_cfa ;_bde ._bcfbd .Register (_cgc ,_dgg );if _afea :=_cgc .Get ("\u0054\u0079\u0070\u0065");_afea !=nil {_bab ,_gcd :=_afea .(*_adfb .PdfObjectName );if !_gcd {_bef .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_afea );
}else {if *_bab !="\u0041\u006e\u006eo\u0074"{_bef .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_bab );};};};if _gedg :=_cgc .Get ("\u0052\u0065\u0063\u0074");
_gedg !=nil {_dgg .Rect =_gedg ;};if _fdge :=_cgc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fdge !=nil {_dgg .Contents =_fdge ;};if _ceda :=_cgc .Get ("\u0050");_ceda !=nil {_dgg .P =_ceda ;};if _ggd :=_cgc .Get ("\u004e\u004d");_ggd !=nil {_dgg .NM =_ggd ;
};if _dgbc :=_cgc .Get ("\u004d");_dgbc !=nil {_dgg .M =_dgbc ;};if _fgbg :=_cgc .Get ("\u0046");_fgbg !=nil {_dgg .F =_fgbg ;};if _adag :=_cgc .Get ("\u0041\u0050");_adag !=nil {_dgg .AP =_adag ;};if _fdcb :=_cgc .Get ("\u0041\u0053");_fdcb !=nil {_dgg .AS =_fdcb ;
};if _gcf :=_cgc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_gcf !=nil {_dgg .Border =_gcf ;};if _fcda :=_cgc .Get ("\u0043");_fcda !=nil {_dgg .C =_fcda ;};if _cge :=_cgc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_cge !=nil {_dgg .StructParent =_cge ;};if _egcf :=_cgc .Get ("\u004f\u0043");_egcf !=nil {_dgg .OC =_egcf ;};_ddd :=_cgc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _ddd ==nil {_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_dgg ._acf =nil ;return _dgg ,nil ;};_cged ,_eccc :=_ddd .(*_adfb .PdfObjectName );if !_eccc {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ddd );
return nil ,_ad .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_ddd );};switch *_cged {case "\u0054\u0065\u0078\u0074":_acc ,_bgea :=_bde .newPdfAnnotationTextFromDict (_cgc );
if _bgea !=nil {return nil ,_bgea ;};_acc .PdfAnnotation =_dgg ;_dgg ._acf =_acc ;return _dgg ,nil ;case "\u004c\u0069\u006e\u006b":_cga ,_gebf :=_bde .newPdfAnnotationLinkFromDict (_cgc );if _gebf !=nil {return nil ,_gebf ;};_cga .PdfAnnotation =_dgg ;
_dgg ._acf =_cga ;return _dgg ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_dfea ,_ffcfe :=_bde .newPdfAnnotationFreeTextFromDict (_cgc );if _ffcfe !=nil {return nil ,_ffcfe ;};_dfea .PdfAnnotation =_dgg ;_dgg ._acf =_dfea ;return _dgg ,nil ;
case "\u004c\u0069\u006e\u0065":_cgg ,_ccef :=_bde .newPdfAnnotationLineFromDict (_cgc );if _ccef !=nil {return nil ,_ccef ;};_cgg .PdfAnnotation =_dgg ;_dgg ._acf =_cgg ;_bef .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dgg ,_dgg );
_bef .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_cgg ,_cgg );_bef .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_cgg .PdfAnnotationMarkup ,_cgg .PdfAnnotationMarkup );
return _dgg ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_dec ,_gbf :=_bde .newPdfAnnotationSquareFromDict (_cgc );if _gbf !=nil {return nil ,_gbf ;};_dec .PdfAnnotation =_dgg ;_dgg ._acf =_dec ;return _dgg ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cdd ,_gfd :=_bde .newPdfAnnotationCircleFromDict (_cgc );
if _gfd !=nil {return nil ,_gfd ;};_cdd .PdfAnnotation =_dgg ;_dgg ._acf =_cdd ;return _dgg ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_gcfb ,_aeb :=_bde .newPdfAnnotationPolygonFromDict (_cgc );if _aeb !=nil {return nil ,_aeb ;};_gcfb .PdfAnnotation =_dgg ;
_dgg ._acf =_gcfb ;return _dgg ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_afeg ,_cgd :=_bde .newPdfAnnotationPolyLineFromDict (_cgc );if _cgd !=nil {return nil ,_cgd ;};_afeg .PdfAnnotation =_dgg ;_dgg ._acf =_afeg ;return _dgg ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_aab ,_acda :=_bde .newPdfAnnotationHighlightFromDict (_cgc );if _acda !=nil {return nil ,_acda ;};_aab .PdfAnnotation =_dgg ;_dgg ._acf =_aab ;return _dgg ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_ffb ,_eee :=_bde .newPdfAnnotationUnderlineFromDict (_cgc );
if _eee !=nil {return nil ,_eee ;};_ffb .PdfAnnotation =_dgg ;_dgg ._acf =_ffb ;return _dgg ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_fbdc ,_ffbc :=_bde .newPdfAnnotationSquigglyFromDict (_cgc );if _ffbc !=nil {return nil ,_ffbc ;};
_fbdc .PdfAnnotation =_dgg ;_dgg ._acf =_fbdc ;return _dgg ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_dga ,_cdc :=_bde .newPdfAnnotationStrikeOut (_cgc );if _cdc !=nil {return nil ,_cdc ;};_dga .PdfAnnotation =_dgg ;_dgg ._acf =_dga ;return _dgg ,nil ;
case "\u0043\u0061\u0072e\u0074":_ead ,_gcbg :=_bde .newPdfAnnotationCaretFromDict (_cgc );if _gcbg !=nil {return nil ,_gcbg ;};_ead .PdfAnnotation =_dgg ;_dgg ._acf =_ead ;return _dgg ,nil ;case "\u0053\u0074\u0061m\u0070":_bdea ,_abfb :=_bde .newPdfAnnotationStampFromDict (_cgc );
if _abfb !=nil {return nil ,_abfb ;};_bdea .PdfAnnotation =_dgg ;_dgg ._acf =_bdea ;return _dgg ,nil ;case "\u0049\u006e\u006b":_gca ,_dda :=_bde .newPdfAnnotationInkFromDict (_cgc );if _dda !=nil {return nil ,_dda ;};_gca .PdfAnnotation =_dgg ;_dgg ._acf =_gca ;
return _dgg ,nil ;case "\u0050\u006f\u0070u\u0070":_gbe ,_cgec :=_bde .newPdfAnnotationPopupFromDict (_cgc );if _cgec !=nil {return nil ,_cgec ;};_gbe .PdfAnnotation =_dgg ;_dgg ._acf =_gbe ;return _dgg ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_cabd ,_adee :=_bde .newPdfAnnotationFileAttachmentFromDict (_cgc );
if _adee !=nil {return nil ,_adee ;};_cabd .PdfAnnotation =_dgg ;_dgg ._acf =_cabd ;return _dgg ,nil ;case "\u0053\u006f\u0075n\u0064":_cdg ,_bbcb :=_bde .newPdfAnnotationSoundFromDict (_cgc );if _bbcb !=nil {return nil ,_bbcb ;};_cdg .PdfAnnotation =_dgg ;
_dgg ._acf =_cdg ;return _dgg ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_fbea ,_gbd :=_bde .newPdfAnnotationRichMediaFromDict (_cgc );if _gbd !=nil {return nil ,_gbd ;};_fbea .PdfAnnotation =_dgg ;_dgg ._acf =_fbea ;return _dgg ,nil ;case "\u004d\u006f\u0076i\u0065":_gab ,_ecde :=_bde .newPdfAnnotationMovieFromDict (_cgc );
if _ecde !=nil {return nil ,_ecde ;};_gab .PdfAnnotation =_dgg ;_dgg ._acf =_gab ;return _dgg ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_dgdb ,_deg :=_bde .newPdfAnnotationScreenFromDict (_cgc );if _deg !=nil {return nil ,_deg ;};_dgdb .PdfAnnotation =_dgg ;
_dgg ._acf =_dgdb ;return _dgg ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_ddf ,_ggc :=_bde .newPdfAnnotationWidgetFromDict (_cgc );if _ggc !=nil {return nil ,_ggc ;};_ddf .PdfAnnotation =_dgg ;_dgg ._acf =_ddf ;return _dgg ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_dgag ,_abfg :=_bde .newPdfAnnotationPrinterMarkFromDict (_cgc );
if _abfg !=nil {return nil ,_abfg ;};_dgag .PdfAnnotation =_dgg ;_dgg ._acf =_dgag ;return _dgg ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_cbf ,_abdf :=_bde .newPdfAnnotationTrapNetFromDict (_cgc );if _abdf !=nil {return nil ,_abdf ;};_cbf .PdfAnnotation =_dgg ;
_dgg ._acf =_cbf ;return _dgg ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_edbd ,_fgfg :=_bde .newPdfAnnotationWatermarkFromDict (_cgc );if _fgfg !=nil {return nil ,_fgfg ;};_edbd .PdfAnnotation =_dgg ;_dgg ._acf =_edbd ;return _dgg ,nil ;
case "\u0033\u0044":_eacd ,_daac :=_bde .newPdfAnnotation3DFromDict (_cgc );if _daac !=nil {return nil ,_daac ;};_eacd .PdfAnnotation =_dgg ;_dgg ._acf =_eacd ;return _dgg ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_efb ,_bffd :=_bde .newPdfAnnotationProjectionFromDict (_cgc );
if _bffd !=nil {return nil ,_bffd ;};_efb .PdfAnnotation =_dgg ;_dgg ._acf =_efb ;return _dgg ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_eaaf ,_agg :=_bde .newPdfAnnotationRedactFromDict (_cgc );if _agg !=nil {return nil ,_agg ;};_eaaf .PdfAnnotation =_dgg ;
_dgg ._acf =_eaaf ;return _dgg ,nil ;};_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cged );
return nil ,nil ;};

// GetVersion gets the document version.
func (_gaega *PdfWriter )GetVersion ()_adfb .Version {return _gaega ._dbbecb };

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_egbd *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _egbd .Alternate ==nil {_bef .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _egbd .N ==1{_bef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_afa :=NewPdfColorspaceDeviceGray ();return _afa .ImageToRGB (img );}else if _egbd .N ==3{_bef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _egbd .N ==4{_bef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_dbed :=NewPdfColorspaceDeviceCMYK ();return _dbed .ImageToRGB (img );}else {return img ,_cfe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_bef .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_egbd );
_dgba ,_cbcf :=_egbd .Alternate .ImageToRGB (img );_bef .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_bef .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_dgba );
return _dgba ,_cbcf ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_adfb .PdfObjectInteger ;BitsPerComponent *_adfb .PdfObjectInteger ;BitsPerFlag *_adfb .PdfObjectInteger ;Decode *_adfb .PdfObjectArray ;Function []PdfFunction ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_efedg *PdfPattern )SetContext (ctx PdfModel ){_efedg ._befdc =ctx };

// GetNumPages returns the number of pages in the document.
func (_dfcbe *PdfReader )GetNumPages ()(int ,error ){if _dfcbe ._aeea .GetCrypter ()!=nil &&!_dfcbe ._aeea .IsAuthenticated (){return 0,_ad .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_dfcbe ._fccad ),nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_adfb .PdfObject ,error );};

// ToPdfObject converts date to a PDF string object.
func (_dggae *PdfDate )ToPdfObject ()_adfb .PdfObject {_daggc :=_ad .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_dggae ._adaae ,_dggae ._ceede ,_dggae ._edac ,_dggae ._gaecd ,_dggae ._gebad ,_dggae ._gbge ,_dggae ._abadb ,_dggae ._bgbag ,_dggae ._edgg );
return _adfb .MakeString (_daggc );};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_ggcc *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bcfgb :=_ggcc .actualFont ();if _bcfgb ==nil {_bef .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_ggcc ._gdcf );
return _ga .CharMetrics {},false ;};if _bfdb ,_befff :=_bcfgb .GetRuneMetrics (r );_befff {return _bfdb ,true ;};if _bccg ,_fcec :=_ggcc .GetFontDescriptor ();_fcec ==nil &&_bccg !=nil {return _ga .CharMetrics {Wx :_bccg ._fafc },true ;};_bef .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ggcc );
return _ga .CharMetrics {},false ;};func (_egaecg *PdfAcroForm )fillImageWithAppearance (_gdefa FieldImageProvider ,_fgcd FieldAppearanceGenerator )error {if _egaecg ==nil {return nil ;};_eagce ,_bggdg :=_gdefa .FieldImageValues ();if _bggdg !=nil {return _bggdg ;
};for _ ,_bede :=range _egaecg .AllFields (){_ebeff :=_bede .PartialName ();_bebg ,_aacdg :=_eagce [_ebeff ];if !_aacdg {if _acaa ,_ddecf :=_bede .FullName ();_ddecf ==nil {_bebg ,_aacdg =_eagce [_acaa ];};};if !_aacdg {_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_ebeff );
continue ;};switch _egcdd :=_bede .GetContext ().(type ){case *PdfFieldButton :if _egcdd .IsPush (){_egcdd .SetFillImage (_bebg );};};if _fgcd ==nil {continue ;};for _ ,_dfdfc :=range _bede .Annotations {_dceg ,_abga :=_fgcd .GenerateAppearanceDict (_egaecg ,_bede ,_dfdfc );
if _abga !=nil {return _abga ;};_dfdfc .AP =_dceg ;_dfdfc .ToPdfObject ();};};return nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_ddgcg *PdfPattern )GetContainingPdfObject ()_adfb .PdfObject {return _ddgcg ._fcgcb };func (_cccg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_aabg *_adfb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_dbcb :=PdfAnnotationFileAttachment {};
_cdbeb ,_adgc :=_cccg .newPdfAnnotationMarkupFromDict (_aabg );if _adgc !=nil {return nil ,_adgc ;};_dbcb .PdfAnnotationMarkup =_cdbeb ;_dbcb .FS =_aabg .Get ("\u0046\u0053");_dbcb .Name =_aabg .Get ("\u004e\u0061\u006d\u0065");return &_dbcb ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_aeee *_adfb .PdfIndirectObject ;};func (_debd *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gggbe *PdfReader )PageFromIndirectObject (ind *_adfb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gggbe .PageList )!=len (_gggbe ._fccad ){return nil ,0,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _fbfg ,_aebfb :=range _gggbe ._fccad {if _aebfb ==ind {return _gggbe .PageList [_fbfg ],_fbfg +1,nil ;};};return nil ,0,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// SetFontByName sets the font specified by keyName to the given object.
func (_eagb *PdfPageResources )SetFontByName (keyName _adfb .PdfObjectName ,obj _adfb .PdfObject )error {if _eagb .Font ==nil {_eagb .Font =_adfb .MakeDict ();};_bbed ,_cddde :=_adfb .TraceToDirectObject (_eagb .Font ).(*_adfb .PdfObjectDictionary );if !_cddde {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_adfb .TraceToDirectObject (_eagb .Font ));
return _adfb .ErrTypeError ;};_bbed .Set (keyName ,obj );return nil ;};func (_gabf *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_edef :=NewPdfAnnotation ();_cca :=&PdfAnnotationPolyLine {};_cca .PdfAnnotation =_edef ;_cca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edef .SetContext (_cca );return _cca ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_ada :=NewPdfAction ();_dd :=&PdfActionJavaScript {};_dd .PdfAction =_ada ;_ada .SetContext (_dd );return _dd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_eaba *PdfSignatureReference )GetContainingPdfObject ()_adfb .PdfObject {return _eaba ._edfcf };func (_gbg *PdfReader )newPdfAnnotationLinkFromDict (_adbf *_adfb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_fde :=PdfAnnotationLink {};_fde .A =_adbf .Get ("\u0041");
_fde .Dest =_adbf .Get ("\u0044\u0065\u0073\u0074");_fde .H =_adbf .Get ("\u0048");_fde .PA =_adbf .Get ("\u0050\u0041");_fde .QuadPoints =_adbf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fde .BS =_adbf .Get ("\u0042\u0053");
return &_fde ,nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_fbac *PdfFont )BytesToCharcodes (data []byte )[]_ba .CharCode {_bef .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _cfad ,_fbfb :=_fbac ._gdcf .(*pdfFontType0 );_fbfb &&_cfad ._cagfdd !=nil {if _cfeba ,_ddcd :=_cfad .bytesToCharcodes (data );_ddcd {return _cfeba ;};};var (_ddab =make ([]_ba .CharCode ,0,len (data )+len (data )%2);_dcadg =_fbac .baseFields (););if _dcadg ._gdgf !=nil {if _fega ,_dfcfg :=_dcadg ._gdgf .BytesToCharcodes (data );
_dfcfg {for _ ,_aabe :=range _fega {_ddab =append (_ddab ,_ba .CharCode (_aabe ));};return _ddab ;};};if _dcadg .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _dacc :=0;_dacc < len (data );_dacc +=2{_gafe :=uint16 (data [_dacc ])<<8|uint16 (data [_dacc +1]);_ddab =append (_ddab ,_ba .CharCode (_gafe ));};}else {for _ ,_gdeg :=range data {_ddab =append (_ddab ,_ba .CharCode (_gdeg ));
};};return _ddab ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_adaae int64 ;_ceede int64 ;_edac int64 ;_gaecd int64 ;_gebad int64 ;_gbge int64 ;_abadb byte ;_bgbag int64 ;_edgg int64 ;};

// Encoder returns the font's text encoder.
func (_eceba *pdfFontSimple )Encoder ()_ba .TextEncoder {if _eceba ._ddabe !=nil {return _eceba ._ddabe ;};if _eceba ._dcef !=nil {return _eceba ._dcef ;};_abfab ,_ :=_ba .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _abfab ;};var _feafe =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func (_bfca *PdfReader )newPdfActionSubmitFormFromDict (_efg *_adfb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_bcc ,_ecc :=_fda (_efg .Get ("\u0046"));if _ecc !=nil {return nil ,_ecc ;};return &PdfActionSubmitForm {F :_bcc ,Fields :_efg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_efg .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func (_cfac *DSS )generateHashMaps ()error {_bbag ,_bggf :=_cfac .generateHashMap (_cfac .Certs );if _bggf !=nil {return _bggf ;};_dgeae ,_bggf :=_cfac .generateHashMap (_cfac .OCSPs );if _bggf !=nil {return _bggf ;};_bdeec ,_bggf :=_cfac .generateHashMap (_cfac .CRLs );
if _bggf !=nil {return _bggf ;};_cfac ._ccgfb =_bbag ;_cfac ._defe =_dgeae ;_cfac ._dcafc =_bdeec ;return nil ;};

// SetDate sets the `M` field of the signature.
func (_ebdgd *PdfSignature )SetDate (date _c .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ebdgd .M =_adfb .MakeString (date .Format (format ));
};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_gabb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggdbg ,_adbbd :=color .(*PdfColorCalRGB );if !_adbbd {_bef .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_daee :=_ggdbg .A ();_gebg :=_ggdbg .B ();_ggca :=_ggdbg .C ();X :=_gabb .Matrix [0]*_dc .Pow (_daee ,_gabb .Gamma [0])+_gabb .Matrix [3]*_dc .Pow (_gebg ,_gabb .Gamma [1])+_gabb .Matrix [6]*_dc .Pow (_ggca ,_gabb .Gamma [2]);
Y :=_gabb .Matrix [1]*_dc .Pow (_daee ,_gabb .Gamma [0])+_gabb .Matrix [4]*_dc .Pow (_gebg ,_gabb .Gamma [1])+_gabb .Matrix [7]*_dc .Pow (_ggca ,_gabb .Gamma [2]);Z :=_gabb .Matrix [2]*_dc .Pow (_daee ,_gabb .Gamma [0])+_gabb .Matrix [5]*_dc .Pow (_gebg ,_gabb .Gamma [1])+_gabb .Matrix [8]*_dc .Pow (_ggca ,_gabb .Gamma [2]);
_gaaf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cagc :=-0.969256*X +1.875992*Y +0.041556*Z ;_gbaa :=0.055648*X +-0.204043*Y +1.057311*Z ;_gaaf =_dc .Min (_dc .Max (_gaaf ,0),1.0);_cagc =_dc .Min (_dc .Max (_cagc ,0),1.0);_gbaa =_dc .Min (_dc .Max (_gbaa ,0),1.0);
return NewPdfColorDeviceRGB (_gaaf ,_cagc ,_gbaa ),nil ;};func (_beda *PdfReader )newPdfAnnotationWidgetFromDict (_bgg *_adfb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_bgf :=PdfAnnotationWidget {};_bgf .H =_bgg .Get ("\u0048");_bgf .MK =_bgg .Get ("\u004d\u004b");
_bgf .A =_bgg .Get ("\u0041");_bgf .AA =_bgg .Get ("\u0041\u0041");_bgf .BS =_bgg .Get ("\u0042\u0053");_bgf .Parent =_bgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_bgf ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _adfb .PdfObject ;Movie _adfb .PdfObject ;A _adfb .PdfObject ;};

// IsColored specifies if the pattern is colored.
func (_ffecf *PdfTilingPattern )IsColored ()bool {if _ffecf .PaintType !=nil &&*_ffecf .PaintType ==1{return true ;};return false ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_adggb DefaultImageHandler )Read (reader _gb .Reader )(*Image ,error ){_ceagb ,_ ,_cfff :=_ade .Decode (reader );if _cfff !=nil {_bef .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cfff );
return nil ,_cfff ;};return _adggb .NewImageFromGoImage (_ceagb );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ebfcg *PdfShadingType5 )ToPdfObject ()_adfb .PdfObject {_ebfcg .PdfShading .ToPdfObject ();_ffcfa ,_dgeef :=_ebfcg .getShadingDict ();if _dgeef !=nil {_bef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ebfcg .BitsPerCoordinate !=nil {_ffcfa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ebfcg .BitsPerCoordinate );};if _ebfcg .BitsPerComponent !=nil {_ffcfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ebfcg .BitsPerComponent );
};if _ebfcg .VerticesPerRow !=nil {_ffcfa .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_ebfcg .VerticesPerRow );};if _ebfcg .Decode !=nil {_ffcfa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ebfcg .Decode );};
if _ebfcg .Function !=nil {if len (_ebfcg .Function )==1{_ffcfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebfcg .Function [0].ToPdfObject ());}else {_afbdc :=_adfb .MakeArray ();for _ ,_adfad :=range _ebfcg .Function {_afbdc .Append (_adfad .ToPdfObject ());
};_ffcfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afbdc );};};return _ebfcg ._egbfe ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_bdfb *PdfPage )GetContainingPdfObject ()_adfb .PdfObject {return _bdfb ._gcgac };

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_fbdd ,_cceec :=NewStandard14Font (basefont );if _cceec !=nil {panic (_ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _fbdd ;};func (_effa *PdfReader )newPdfAnnotationPrinterMarkFromDict (_bced *_adfb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_bdee :=PdfAnnotationPrinterMark {};_bdee .MN =_bced .Get ("\u004d\u004e");return &_bdee ,nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dacdb :=&PdfSignature {Type :_adfb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_edcdg :=&pdfSignDictionary {PdfObjectDictionary :_adfb .MakeDict (),_cegea :&handler ,_fffga :_dacdb };
_dacdb ._gbebc =_adfb .MakeIndirectObject (_edcdg );return _dacdb ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_fg :=NewPdfAction ();_dfc :=&PdfActionResetForm {};_dfc .PdfAction =_fg ;_fg .SetContext (_dfc );return _dfc ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_adfb .PdfObjectInteger ;BitsPerComponent *_adfb .PdfObjectInteger ;BitsPerFlag *_adfb .PdfObjectInteger ;Decode *_adfb .PdfObjectArray ;Function []PdfFunction ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_cfgcc *PdfReader )GetCatalogMetadata ()(_adfb .PdfObject ,bool ){if _cfgcc ._egeag ==nil {return nil ,false ;};_babfa :=_cfgcc ._egeag .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _babfa ,_babfa !=nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_eaegg *PdfPage )Duplicate ()*PdfPage {_ebcbe :=*_eaegg ;_ebcbe ._bdabg =_adfb .MakeDict ();_ebcbe ._gcgac =_adfb .MakeIndirectObject (_ebcbe ._bdabg );return &_ebcbe ;};

// Val returns the value of the color.
func (_adba *PdfColorCalGray )Val ()float64 {return float64 (*_adba )};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_edbaf *_adfb .PdfIndirectObject ;};func _beabf (_fcege *_adfb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_babec :=PdfShadingType2 {};
_bgecf :=_fcege .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bgecf ==nil {_bef .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_afaf ,_ebdgg :=_bgecf .(*_adfb .PdfObjectArray );if !_ebdgg {_bef .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgecf );
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _afaf .Len ()!=4{_bef .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_afaf .Len ());
return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_babec .Coords =_afaf ;if _fffa :=_fcege .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fffa !=nil {_fffa =_adfb .TraceToDirectObject (_fffa );
_ffbgdc ,_cafce :=_fffa .(*_adfb .PdfObjectArray );if !_cafce {_bef .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fffa );return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_babec .Domain =_ffbgdc ;};_bgecf =_fcege .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bgecf ==nil {_bef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_babec .Function =[]PdfFunction {};if _egfaf ,_facab :=_bgecf .(*_adfb .PdfObjectArray );_facab {for _ ,_gdfgd :=range _egfaf .Elements (){_bbccc ,_fbgcfg :=_ebba (_gdfgd );if _fbgcfg !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbgcfg );
return nil ,_fbgcfg ;};_babec .Function =append (_babec .Function ,_bbccc );};}else {_adedf ,_dfdc :=_ebba (_bgecf );if _dfdc !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfdc );
return nil ,_dfdc ;};_babec .Function =append (_babec .Function ,_adedf );};if _dbbefc :=_fcege .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dbbefc !=nil {_dbbefc =_adfb .TraceToDirectObject (_dbbefc );_cbfgd ,_gdcaac :=_dbbefc .(*_adfb .PdfObjectArray );
if !_gdcaac {_bef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbbefc );return nil ,_adfb .ErrTypeError ;};if _cbfgd .Len ()!=2{_bef .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cbfgd .Len ());
return nil ,ErrInvalidAttribute ;};_babec .Extend =_cbfgd ;};return &_babec ,nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_adfb .PdfObjectBool ;SigFlags *_adfb .PdfObjectInteger ;CO *_adfb .PdfObjectArray ;DR *PdfPageResources ;DA *_adfb .PdfObjectString ;Q *_adfb .PdfObjectInteger ;XFA _adfb .PdfObject ;_geacd *_adfb .PdfIndirectObject ;
};func (_geffg *PdfWriter )checkLicense ()error {_bbcec :=_ag .GetLicenseKey ();if (_bbcec ==nil ||!_bbcec .IsLicensed ())&&!_cecdb {_ad .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_ad .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _cfe .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};func _dcgca (_ecgdc *PdfPage ){_aeceg :=_ag .GetLicenseKey ();if _aeceg !=nil &&_aeceg .IsLicensed (){return ;
};_decbbc :=_adfb .PdfObjectName ("\u0055\u0046\u0031");if !_ecgdc .Resources .HasFontByName (_decbbc ){_ecgdc .Resources .SetFontByName (_decbbc ,DefaultFont ().ToPdfObject ());};var _afefd []string ;_afefd =append (_afefd ,"\u0071");_afefd =append (_afefd ,"\u0042\u0054");
_afefd =append (_afefd ,_ad .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_decbbc .String ()));_afefd =append (_afefd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_afefd =append (_afefd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_cfacd :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_afefd =append (_afefd ,_ad .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_cfacd ));_afefd =append (_afefd ,"\u0045\u0054");_afefd =append (_afefd ,"\u0051");_cegcb :=_be .Join (_afefd ,"\u000a");_ecgdc .AddContentStreamByString (_cegcb );_ecgdc .ToPdfObject ();
};func (_cabf *PdfReader )newPdfAnnotationHighlightFromDict (_dbdc *_adfb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_fgbdg :=PdfAnnotationHighlight {};_gdcc ,_cgb :=_cabf .newPdfAnnotationMarkupFromDict (_dbdc );if _cgb !=nil {return nil ,_cgb ;
};_fgbdg .PdfAnnotationMarkup =_gdcc ;_fgbdg .QuadPoints =_dbdc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fgbdg ,nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_begd :=NewPdfAction ();_ed :=&PdfActionLaunch {};_ed .PdfAction =_begd ;_begd .SetContext (_ed );return _ed ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _adfb .PdfObjectArray )(*PdfRectangle ,error ){_cefc :=PdfRectangle {};if arr .Len ()!=4{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _dafgdg error ;_cefc .Llx ,_dafgdg =_adfb .GetNumberAsFloat (arr .Get (0));if _dafgdg !=nil {return nil ,_dafgdg ;};_cefc .Lly ,_dafgdg =_adfb .GetNumberAsFloat (arr .Get (1));if _dafgdg !=nil {return nil ,_dafgdg ;};_cefc .Urx ,_dafgdg =_adfb .GetNumberAsFloat (arr .Get (2));
if _dafgdg !=nil {return nil ,_dafgdg ;};_cefc .Ury ,_dafgdg =_adfb .GetNumberAsFloat (arr .Get (3));if _dafgdg !=nil {return nil ,_dafgdg ;};return &_cefc ,nil ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_bfdge :=&PdfOutline {_fegcf :_adfb .MakeIndirectObject (_adfb .MakeDict ())};_bfdge ._ddddf =_bfdge ;return _bfdge ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dfbgeb *PdfShadingType7 )ToPdfObject ()_adfb .PdfObject {_dfbgeb .PdfShading .ToPdfObject ();_gbeba ,_egagb :=_dfbgeb .getShadingDict ();if _egagb !=nil {_bef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dfbgeb .BitsPerCoordinate !=nil {_gbeba .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dfbgeb .BitsPerCoordinate );};if _dfbgeb .BitsPerComponent !=nil {_gbeba .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dfbgeb .BitsPerComponent );
};if _dfbgeb .BitsPerFlag !=nil {_gbeba .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dfbgeb .BitsPerFlag );};if _dfbgeb .Decode !=nil {_gbeba .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dfbgeb .Decode );};if _dfbgeb .Function !=nil {if len (_dfbgeb .Function )==1{_gbeba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dfbgeb .Function [0].ToPdfObject ());
}else {_cbbcce :=_adfb .MakeArray ();for _ ,_dccfb :=range _dfbgeb .Function {_cbbcce .Append (_dccfb .ToPdfObject ());};_gbeba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbbcce );};};return _dfbgeb ._egbfe ;};

// ToPdfObject implements interface PdfModel.
func (_beb *PdfActionSound )ToPdfObject ()_adfb .PdfObject {_beb .PdfAction .ToPdfObject ();_fgb :=_beb ._ca ;_gc :=_fgb .PdfObject .(*_adfb .PdfObjectDictionary );_gc .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeSound )));_gc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_beb .Sound );
_gc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_beb .Volume );_gc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_beb .Synchronous );_gc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_beb .Repeat );_gc .SetIfNotNil ("\u004d\u0069\u0078",_beb .Mix );
return _fgb ;};

// Items returns all children outline items.
func (_ccfb *OutlineItem )Items ()[]*OutlineItem {return _ccfb .Entries };

// ToPdfObject implements interface PdfModel.
func (_cegb *PdfAnnotationMovie )ToPdfObject ()_adfb .PdfObject {_cegb .PdfAnnotation .ToPdfObject ();_dgdg :=_cegb ._ged ;_bgdb :=_dgdg .PdfObject .(*_adfb .PdfObjectDictionary );_bgdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u004d\u006f\u0076i\u0065"));
_bgdb .SetIfNotNil ("\u0054",_cegb .T );_bgdb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_cegb .Movie );_bgdb .SetIfNotNil ("\u0041",_cegb .A );return _dgdg ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_ded :=NewPdfAnnotation ();_fgfa :=&PdfAnnotationPrinterMark {};_fgfa .PdfAnnotation =_ded ;_ded .SetContext (_fgfa );return _fgfa ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_afegg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if _afegg .Alternate ==nil {if _afegg .N ==1{_ddgc :=NewPdfColorspaceDeviceGray ();return _ddgc .ColorFromPdfObjects (objects );}else if _afegg .N ==3{_dcbc :=NewPdfColorspaceDeviceRGB ();
return _dcbc .ColorFromPdfObjects (objects );}else if _afegg .N ==4{_dcgc :=NewPdfColorspaceDeviceCMYK ();return _dcgc .ColorFromPdfObjects (objects );}else {return nil ,_cfe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _afegg .Alternate .ColorFromPdfObjects (objects );};func (_bdfec *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _gffgd :=_bdfec ._ebcbf ;_gffgd !=nil {return _gffgd ;};return _bdfec ._aded ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_cefaf :=&PdfColorspaceCalGray {};_cefaf .BlackPoint =[]float64 {0.0,0.0,0.0};_cefaf .Gamma =1;return _cefaf ;};

// ToPdfObject implements interface PdfModel.
func (_bae *PdfActionGoTo3DView )ToPdfObject ()_adfb .PdfObject {_bae .PdfAction .ToPdfObject ();_cd :=_bae ._ca ;_adea :=_cd .PdfObject .(*_adfb .PdfObjectDictionary );_adea .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeGoTo3DView )));_adea .SetIfNotNil ("\u0054\u0041",_bae .TA );
_adea .SetIfNotNil ("\u0056",_bae .V );return _cd ;};

// SetVersion sets the PDF version of the output file.
func (_agafe *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_agafe ._dbbecb .Major =majorVersion ;_agafe ._dbbecb .Minor =minorVersion ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_adfb .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_adfb .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// B returns the value of the B component of the color.
func (_eabe *PdfColorLab )B ()float64 {return _eabe [2]};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_cebfg *PdfReader )GetEncryptionMethod ()string {_gacbe :=_cebfg ._aeea .GetCrypter ();return _gacbe .String ();};

// A returns the value of the A component of the color.
func (_bfaae *PdfColorCalRGB )A ()float64 {return _bfaae [0]};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _adfb .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _geae *_adfb .PdfIndirectObject ;var _egdf *_adfb .PdfObjectName ;var _eedf *_adfb .PdfObjectArray ;if _bcbg ,_cgecfe :=obj .(*_adfb .PdfIndirectObject );
_cgecfe {_geae =_bcbg ;};obj =_adfb .TraceToDirectObject (obj );switch _efggc :=obj .(type ){case *_adfb .PdfObjectArray :_eedf =_efggc ;case *_adfb .PdfObjectName :_egdf =_efggc ;};if _egdf !=nil {switch *_egdf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_bef .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_egdf );return nil ,_gdbc ;};};if _eedf !=nil &&_eedf .Len ()> 0{var _afgad _adfb .PdfObject =_geae ;
if _geae ==nil {_afgad =_eedf ;};if _bbbgd ,_egbe :=_adfb .GetName (_eedf .Get (0));_egbe {switch _bbbgd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _eedf .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _eedf .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _eedf .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ecea (_afgad );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _ecfe (_afgad );
case "\u004c\u0061\u0062":return _ebbc (_afgad );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _gede (_afgad );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ddfba (_afgad );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _dabe (_afgad );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _eeda (_afgad );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _acde (_afgad );default:_bef .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_bbbgd );
};};};_bef .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_egaea :=NewPdfOutline ();_egaea ._ddddf =&_egaea ;return _egaea ;};func (_ggb *PdfReader )newPdfActionGoTo3DViewFromDict (_ac *_adfb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_ac .Get ("\u0054\u0041"),V :_ac .Get ("\u0056")},nil ;
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gcaec pdfFontType3 )GetRuneMetrics (r rune )(_ga .CharMetrics ,bool ){_ebbg :=_gcaec .Encoder ();if _ebbg ==nil {_bef .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_gcaec );
return _ga .CharMetrics {},false ;};_dagd ,_ceed :=_ebbg .RuneToCharcode (r );if !_ceed {if r !=' '{_bef .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_gcaec );
};return _ga .CharMetrics {},false ;};_adbbe ,_afad :=_gcaec .GetCharMetrics (_dagd );return _adbbe ,_afad ;};func (_bafee *PdfWriter )writeXRefStreams (_ceedc int ,_febba int64 )error {_bebac :=_ceedc +1;_bafee ._aaead [_bebac ]=crossReference {Type :1,ObjectNumber :_bebac ,Offset :_febba };
_gdfaa :=_ae .NewBuffer (nil );_cabbb :=_adfb .MakeArray ();for _cceab :=0;_cceab <=_ceedc ;{for ;_cceab <=_ceedc ;_cceab ++{_fcegec ,_gdfcb :=_bafee ._aaead [_cceab ];if _gdfcb &&(!_bafee ._fbggb ||_bafee ._fbggb &&(_fcegec .Type ==1&&_fcegec .Offset >=_bafee ._begea ||_fcegec .Type ==0)){break ;
};};var _bdced int ;for _bdced =_cceab +1;_bdced <=_ceedc ;_bdced ++{_cedfb ,_dbcef :=_bafee ._aaead [_bdced ];if _dbcef &&(!_bafee ._fbggb ||_bafee ._fbggb &&(_cedfb .Type ==1&&_cedfb .Offset > _bafee ._begea )){continue ;};break ;};_cabbb .Append (_adfb .MakeInteger (int64 (_cceab )),_adfb .MakeInteger (int64 (_bdced -_cceab )));
for _dccfd :=_cceab ;_dccfd < _bdced ;_dccfd ++{_dgcc :=_bafee ._aaead [_dccfd ];switch _dgcc .Type {case 0:_bg .Write (_gdfaa ,_bg .BigEndian ,byte (0));_bg .Write (_gdfaa ,_bg .BigEndian ,uint32 (0));_bg .Write (_gdfaa ,_bg .BigEndian ,uint16 (0xFFFF));
case 1:_bg .Write (_gdfaa ,_bg .BigEndian ,byte (1));_bg .Write (_gdfaa ,_bg .BigEndian ,uint32 (_dgcc .Offset ));_bg .Write (_gdfaa ,_bg .BigEndian ,uint16 (_dgcc .Generation ));case 2:_bg .Write (_gdfaa ,_bg .BigEndian ,byte (2));_bg .Write (_gdfaa ,_bg .BigEndian ,uint32 (_dgcc .ObjectNumber ));
_bg .Write (_gdfaa ,_bg .BigEndian ,uint16 (_dgcc .Index ));};};_cceab =_bdced +1;};_acefd ,_dafgf :=_adfb .MakeStream (_gdfaa .Bytes (),_adfb .NewFlateEncoder ());if _dafgf !=nil {return _dafgf ;};_acefd .ObjectNumber =int64 (_bebac );_acefd .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0058\u0052\u0065\u0066"));
_acefd .PdfObjectDictionary .Set ("\u0057",_adfb .MakeArray (_adfb .MakeInteger (1),_adfb .MakeInteger (4),_adfb .MakeInteger (2)));_acefd .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_cabbb );_acefd .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_adfb .MakeInteger (int64 (_bebac +1)));
_acefd .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_bafee ._bcfdf );_acefd .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_bafee ._cfcab );if _bafee ._fbggb &&_bafee ._cgcded > 0{_acefd .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_adfb .MakeInteger (_bafee ._cgcded ));
};if _bafee ._bfagb !=nil {_acefd .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bafee ._bgbdb );};if _bafee ._dafea ==nil &&_bafee ._cgccef !=""&&_bafee ._bbaba !=""{_bafee ._dafea =_adfb .MakeArray (_adfb .MakeHexString (_bafee ._cgccef ),_adfb .MakeHexString (_bafee ._bbaba ));
};if _bafee ._dafea !=nil {_bef .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bafee ._dafea );_acefd .Set ("\u0049\u0044",_bafee ._dafea );};_bafee .writeObject (int (_acefd .ObjectNumber ),_acefd );return nil ;};func (_ffgc *PdfReader )loadPerms ()(*Permissions ,error ){if _cceecd :=_ffgc ._egeag .Get ("\u0050\u0065\u0072m\u0073");
_cceecd !=nil {if _abdg ,_cbafd :=_adfb .GetDict (_cceecd );_cbafd {_ebff :=_abdg .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _ebff ==nil {return nil ,nil ;};if _edgda ,_aedaf :=_adfb .GetIndirect (_ebff );_aedaf {_geccdd ,_aebdd :=_ffgc .newPdfSignatureFromIndirect (_edgda );
if _aebdd !=nil {return nil ,_aebdd ;};return NewPermissions (_geccdd ),nil ;};return nil ,_ad .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_ad .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _adfb .PdfObject ;V _adfb .PdfObject ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_dgea *PdfAppender )UpdateObject (obj _adfb .PdfObject ){_dgea .replaceObject (obj ,obj );if _ ,_aced :=_dgea ._gaf [obj ];!_aced {_dgea ._bfd =append (_dgea ._bfd ,obj );_dgea ._gaf [obj ]=struct{}{};};};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_fdad PdfOutputIntentType )String ()string {switch _fdad {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_fbgf *VRI )ToPdfObject ()*_adfb .PdfObjectDictionary {_bgga :=_adfb .MakeDict ();_bgga .SetIfNotNil (_adfb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_cggba (_fbgf .Cert ));_bgga .SetIfNotNil (_adfb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_cggba (_fbgf .OCSP ));
_bgga .SetIfNotNil (_adfb .PdfObjectName ("\u0043\u0052\u004c"),_cggba (_fbgf .CRL ));_bgga .SetIfNotNil ("\u0054\u0055",_fbgf .TU );_bgga .SetIfNotNil ("\u0054\u0053",_fbgf .TS );return _bgga ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gagfc *PdfPage )GetPageDict ()*_adfb .PdfObjectDictionary {_dffdb :=_gagfc ._bdabg ;_dffdb .Clear ();_dffdb .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0050\u0061\u0067\u0065"));_dffdb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gagfc .Parent );
if _gagfc .LastModified !=nil {_dffdb .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gagfc .LastModified .ToPdfObject ());};if _gagfc .Resources !=nil {_dffdb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gagfc .Resources .ToPdfObject ());
};if _gagfc .CropBox !=nil {_dffdb .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gagfc .CropBox .ToPdfObject ());};if _gagfc .MediaBox !=nil {_dffdb .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gagfc .MediaBox .ToPdfObject ());};if _gagfc .BleedBox !=nil {_dffdb .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gagfc .BleedBox .ToPdfObject ());
};if _gagfc .TrimBox !=nil {_dffdb .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gagfc .TrimBox .ToPdfObject ());};if _gagfc .ArtBox !=nil {_dffdb .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gagfc .ArtBox .ToPdfObject ());};_dffdb .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gagfc .BoxColorInfo );
_dffdb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gagfc .Contents );if _gagfc .Rotate !=nil {_dffdb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_adfb .MakeInteger (*_gagfc .Rotate ));};_dffdb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gagfc .Group );
_dffdb .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gagfc .Thumb );_dffdb .SetIfNotNil ("\u0042",_gagfc .B );_dffdb .SetIfNotNil ("\u0044\u0075\u0072",_gagfc .Dur );_dffdb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gagfc .Trans );_dffdb .SetIfNotNil ("\u0041\u0041",_gagfc .AA );
_dffdb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gagfc .Metadata );_dffdb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gagfc .PieceInfo );_dffdb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gagfc .StructParents );
_dffdb .SetIfNotNil ("\u0049\u0044",_gagfc .ID );_dffdb .SetIfNotNil ("\u0050\u005a",_gagfc .PZ );_dffdb .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gagfc .SeparationInfo );_dffdb .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gagfc .Tabs );
_dffdb .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gagfc .TemplateInstantiated );_dffdb .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gagfc .PresSteps );_dffdb .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gagfc .UserUnit );
_dffdb .SetIfNotNil ("\u0056\u0050",_gagfc .VP );if _gagfc ._fagca !=nil {_gffgc :=_adfb .MakeArray ();for _ ,_bcbea :=range _gagfc ._fagca {if _dbdae :=_bcbea .GetContext ();_dbdae !=nil {_gffgc .Append (_dbdae .ToPdfObject ());}else {_gffgc .Append (_bcbea .ToPdfObject ());
};};if _gffgc .Len ()> 0{_dffdb .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_gffgc );};}else if _gagfc .Annots !=nil {_dffdb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gagfc .Annots );};return _dffdb ;};

// GetFillImage get attached model.Image in push button.
func (_ffge *PdfFieldButton )GetFillImage ()*Image {if _ffge .IsPush (){return _ffge ._adgd ;};return nil ;};func (_ccda *Image )samplesTrimPadding (_dagc []uint32 )[]uint32 {_aaef :=_ccda .ColorComponents *int (_ccda .Width )*int (_ccda .Height );if len (_dagc )==_aaef {return _dagc ;
};_agea :=make ([]uint32 ,_aaef );_bbce :=int (_ccda .Width )*_ccda .ColorComponents ;var _gafd ,_fgefd ,_degcdf ,_beaec int ;_abcg :=_afe .BytesPerLine (int (_ccda .Width ),int (_ccda .BitsPerComponent ),_ccda .ColorComponents );for _gafd =0;_gafd < int (_ccda .Height );
_gafd ++{_fgefd =_gafd *int (_ccda .Width );_degcdf =_gafd *_abcg ;for _beaec =0;_beaec < _bbce ;_beaec ++{_agea [_fgefd +_beaec ]=_dagc [_degcdf +_beaec ];};};return _agea ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gfabg *PdfTilingPattern )ToPdfObject ()_adfb .PdfObject {_gfabg .PdfPattern .ToPdfObject ();_efedf :=_gfabg .getDict ();if _gfabg .PaintType !=nil {_efedf .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gfabg .PaintType );};if _gfabg .TilingType !=nil {_efedf .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gfabg .TilingType );
};if _gfabg .BBox !=nil {_efedf .Set ("\u0042\u0042\u006f\u0078",_gfabg .BBox .ToPdfObject ());};if _gfabg .XStep !=nil {_efedf .Set ("\u0058\u0053\u0074e\u0070",_gfabg .XStep );};if _gfabg .YStep !=nil {_efedf .Set ("\u0059\u0053\u0074e\u0070",_gfabg .YStep );
};if _gfabg .Resources !=nil {_efedf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gfabg .Resources .ToPdfObject ());};if _gfabg .Matrix !=nil {_efedf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfabg .Matrix );};return _gfabg ._fcgcb ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gfgab pdfFontType0 )GetRuneMetrics (r rune )(_ga .CharMetrics ,bool ){if _gfgab .DescendantFont ==nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gfgab );
return _ga .CharMetrics {},false ;};return _gfgab .DescendantFont .GetRuneMetrics (r );};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _adfb .PdfObject ;BS _adfb .PdfObject ;LE _adfb .PdfObject ;IC _adfb .PdfObject ;LL _adfb .PdfObject ;LLE _adfb .PdfObject ;Cap _adfb .PdfObject ;IT _adfb .PdfObject ;LLO _adfb .PdfObject ;
CP _adfb .PdfObject ;Measure _adfb .PdfObject ;CO _adfb .PdfObject ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_abbgc *PdfWriter )SetNameDictionary (names _adfb .PdfObject )error {if names ==nil {return nil ;};_bef .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_abbgc ._bcdaf .Set ("\u004e\u0061\u006de\u0073",names );return _abbgc .addObjects (names );};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _adfb .PdfObject ;NewWindow _adfb .PdfObject ;T _adfb .PdfObject ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_aaff *PdfReader )GetOutlines ()(*Outline ,error ){if _aaff ==nil {return nil ,_cfe .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_gcge :=_aaff .GetOutlineTree ();if _gcge ==nil {return nil ,_cfe .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _fbcf func (_eebad *PdfOutlineTreeNode ,_cdffa *[]*OutlineItem );_fbcf =func (_acedeg *PdfOutlineTreeNode ,_cfdb *[]*OutlineItem ){if _acedeg ==nil {return ;};if _acedeg ._ddddf ==nil {_bef .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _ebbdb *OutlineItem ;if _ggfbg ,_faeg :=_acedeg ._ddddf .(*PdfOutlineItem );_faeg {_cdbaac :=_ggfbg .Dest ;if (_cdbaac ==nil ||_adfb .IsNullObject (_cdbaac ))&&_ggfbg .A !=nil {if _aebfa ,_gbdgd :=_adfb .GetDict (_ggfbg .A );_gbdgd {if _bdeag ,_acabb :=_adfb .GetArray (_aebfa .Get ("\u0044"));
_acabb {_cdbaac =_bdeag ;}else {_dbfg ,_caagf :=_adfb .GetString (_aebfa .Get ("\u0044"));if !_caagf {return ;};_bcgff ,_caagf :=_aaff ._egeag .Get ("\u004e\u0061\u006de\u0073").(*_adfb .PdfObjectReference );if !_caagf {return ;};_aabbe ,_dgcbb :=_aaff ._aeea .LookupByReference (*_bcgff );
if _dgcbb !=nil {_bef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_dgcbb .Error ());
return ;};_cdffd ,_caagf :=_aabbe .(*_adfb .PdfIndirectObject );if !_caagf {return ;};_dacde :=map[_adfb .PdfObject ]struct{}{};_dgcbb =_aaff .buildNameNodes (_cdffd ,_dacde );if _dgcbb !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_dgcbb .Error ());
return ;};for _ffbcb :=range _dacde {_ddbd ,_cggag :=_adfb .GetDict (_ffbcb );if !_cggag {continue ;};_beegg ,_cggag :=_adfb .GetArray (_ddbd .Get ("\u004e\u0061\u006de\u0073"));if !_cggag {continue ;};for _dfbde ,_efeaa :=range _beegg .Elements (){switch _efeaa .(type ){case *_adfb .PdfObjectString :if _efeaa .String ()==_dbfg .String (){if _daedg :=_beegg .Get (_dfbde +1);
_daedg !=nil {if _dgbgb ,_ebeeb :=_adfb .GetDict (_daedg );_ebeeb {_cdbaac =_dgbgb .Get ("\u0044");break ;};};};};};};};};};var _gfacb OutlineDest ;if _cdbaac !=nil &&!_adfb .IsNullObject (_cdbaac ){if _eccf ,_adfbf :=_aaeaa (_cdbaac ,_aaff );_adfbf ==nil {_gfacb =*_eccf ;
}else {_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_cdbaac ,_adfbf );
};};_ebbdb =NewOutlineItem (_ggfbg .Title .Decoded (),_gfacb );*_cfdb =append (*_cfdb ,_ebbdb );if _ggfbg .Next !=nil {_fbcf (_ggfbg .Next ,_cfdb );};};if _acedeg .First !=nil {if _ebbdb !=nil {_cfdb =&_ebbdb .Entries ;};_fbcf (_acedeg .First ,_cfdb );
};};_aaddd :=NewOutline ();_fbcf (_gcge ,&_aaddd .Entries );return _aaddd ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_aeged *PdfReader )IsEncrypted ()(bool ,error ){return _aeged ._aeea .IsEncrypted ()};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_adfb .PdfObjectInteger ;TilingType *_adfb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_adfb .PdfObjectFloat ;YStep *_adfb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_adfb .PdfObjectArray ;
};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_dggd *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _dggd .Range };

// PdfVersion returns version of the PDF file.
func (_fcdaf *PdfReader )PdfVersion ()_adfb .Version {return _fcdaf ._aeea .PdfVersion ()};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_gdca :=NewPdfAnnotation ();_faa :=&PdfAnnotationFileAttachment {};_faa .PdfAnnotation =_gdca ;_faa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdca .SetContext (_faa );return _faa ;
};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_fgcdc :=&XObjectImage {};_afaag :=&_adfb .PdfObjectStream {};_afaag .PdfObjectDictionary =_adfb .MakeDict ();_fgcdc ._efgf =_afaag ;return _fgcdc ;};func _fbbb (_egbga *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_egbga }};


// Evaluate runs the function on the passed in slice and returns the results.
func (_ggfd *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bef .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_afdbc :=[]float64 {0.0};if _ggfd .C0 !=nil {_afdbc =_ggfd .C0 ;};_bada :=[]float64 {1.0};if _ggfd .C1 !=nil {_bada =_ggfd .C1 ;};var _gcad []float64 ;for _gbbfd :=0;_gbbfd < len (_afdbc );_gbbfd ++{_adedc :=_afdbc [_gbbfd ]+_dc .Pow (x [0],_ggfd .N )*(_bada [_gbbfd ]-_afdbc [_gbbfd ]);
_gcad =append (_gcad ,_adedc );};return _gcad ,nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_deda *PdfFont )SubsetRegistered ()error {switch _geadc :=_deda ._gdcf .(type ){case *pdfFontType0 :_eaddd :=_geadc .subsetRegistered ();if _eaddd !=nil {_bef .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eaddd );
return _eaddd ;};if _geadc ._gfde !=nil {if _geadc ._bcdga !=nil {_geadc ._bcdga .ToPdfObject ();};_geadc .ToPdfObject ();};default:_bef .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_geadc );
};return nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_cgccg *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_aaac :=_cgccg .fill (provider ,appGen );if _aaac !=nil {return _aaac ;};if _ ,_ebcca :=provider .(FieldImageProvider );_ebcca {_aaac =_cgccg .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _aaac ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _adfb .PdfObject ;Flags _adfb .PdfObject ;};func (_gdb *PdfReader )newPdfAnnotationSoundFromDict (_cdgg *_adfb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bdf :=PdfAnnotationSound {};
_fge ,_bbcg :=_gdb .newPdfAnnotationMarkupFromDict (_cdgg );if _bbcg !=nil {return nil ,_bbcg ;};_bdf .PdfAnnotationMarkup =_fge ;_bdf .Name =_cdgg .Get ("\u004e\u0061\u006d\u0065");_bdf .Sound =_cdgg .Get ("\u0053\u006f\u0075n\u0064");return &_bdf ,nil ;
};

// Height returns the height of `rect`.
func (_eefab *PdfRectangle )Height ()float64 {return _dc .Abs (_eefab .Ury -_eefab .Lly )};

// ToPdfObject returns the PDF representation of the function.
func (_dfbbe *PdfFunctionType0 )ToPdfObject ()_adfb .PdfObject {if _dfbbe ._bagb ==nil {_dfbbe ._bagb =&_adfb .PdfObjectStream {};};_ggfb :=_adfb .MakeDict ();_ggfb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_adfb .MakeInteger (0));
_ebcd :=&_adfb .PdfObjectArray {};for _ ,_bbff :=range _dfbbe .Domain {_ebcd .Append (_adfb .MakeFloat (_bbff ));};_ggfb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ebcd );_aebb :=&_adfb .PdfObjectArray {};for _ ,_bagae :=range _dfbbe .Range {_aebb .Append (_adfb .MakeFloat (_bagae ));
};_ggfb .Set ("\u0052\u0061\u006eg\u0065",_aebb );_gcagc :=&_adfb .PdfObjectArray {};for _ ,_ggbb :=range _dfbbe .Size {_gcagc .Append (_adfb .MakeInteger (int64 (_ggbb )));};_ggfb .Set ("\u0053\u0069\u007a\u0065",_gcagc );_ggfb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_adfb .MakeInteger (int64 (_dfbbe .BitsPerSample )));
if _dfbbe .Order !=1{_ggfb .Set ("\u004f\u0072\u0064e\u0072",_adfb .MakeInteger (int64 (_dfbbe .Order )));};_ggfb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_adfb .MakeInteger (int64 (len (_dfbbe ._ebfab ))));_dfbbe ._bagb .Stream =_dfbbe ._ebfab ;_dfbbe ._bagb .PdfObjectDictionary =_ggfb ;
return _dfbbe ._bagb ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_defca *PdfReader )GetOCProperties ()(_adfb .PdfObject ,error ){_dcag :=_defca ._egeag ;_cbedb :=_dcag .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cbedb =_adfb .ResolveReference (_cbedb );if !_defca ._ggdgc {_faecg :=_defca .traverseObjectData (_cbedb );
if _faecg !=nil {return nil ,_faecg ;};};return _cbedb ,nil ;};func (_ebfc *pdfFontSimple )getFontEncoding ()(_bcbca string ,_aadce map[_ba .CharCode ]_ba .GlyphName ,_gaafb error ){_bcbca ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _cgccc ,_debe :=_feafe [_ebfc ._gbed ];_debe {_bcbca =_cgccc ;}else if _ebfc .fontFlags ()&_cabab !=0{for _aedgf ,_ebacf :=range _feafe {if _be .Contains (_ebfc ._gbed ,_aedgf ){_bcbca =_ebacf ;break ;};};};if _ebfc .Encoding ==nil {return _bcbca ,nil ,nil ;
};switch _acbgg :=_ebfc .Encoding .(type ){case *_adfb .PdfObjectName :return string (*_acbgg ),nil ,nil ;case *_adfb .PdfObjectDictionary :_eaea ,_aedb :=_adfb .GetName (_acbgg .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _aedb {_bcbca =_eaea .String ();};if _cagadg :=_acbgg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_cagadg !=nil {_fgdgb ,_eedaf :=_adfb .GetArray (_cagadg );if !_eedaf {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_acbgg ,_acbgg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_adfb .ErrTypeError ;};_aadce ,_gaafb =_ba .FromFontDifferences (_fgdgb );};return _bcbca ,_aadce ,_gaafb ;default:_bef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_ebfc .Encoding ,_ebfc .Encoding );
return "",nil ,_adfb .ErrTypeError ;};};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_bgddg *PdfColorspaceDeviceN )GetNumComponents ()int {return _bgddg .ColorantNames .Len ()};

// ToPdfObject implements interface PdfModel.
func (_fggb *PdfAnnotationPopup )ToPdfObject ()_adfb .PdfObject {_fggb .PdfAnnotation .ToPdfObject ();_baee :=_fggb ._ged ;_dgdd :=_baee .PdfObject .(*_adfb .PdfObjectDictionary );_dgdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0050\u006f\u0070u\u0070"));
_dgdd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fggb .Parent );_dgdd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fggb .Open );return _baee ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func (_fabad *LTV )buildCertChain (_fcage ,_dagaf []*_adf .Certificate )([]*_adf .Certificate ,map[string ]*_adf .Certificate ,error ){_cfagc :=map[string ]*_adf .Certificate {};for _ ,_abded :=range _fcage {_cfagc [_abded .Subject .CommonName ]=_abded ;
};_gbgfd :=_fcage ;for _ ,_bfcgc :=range _dagaf {_febdb :=_bfcgc .Subject .CommonName ;if _ ,_gbega :=_cfagc [_febdb ];_gbega {continue ;};_cfagc [_febdb ]=_bfcgc ;_gbgfd =append (_gbgfd ,_bfcgc );};if len (_gbgfd )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _caaba error ;for _ebcad :=_gbgfd [0];_ebcad !=nil &&!_fabad .CertClient .IsCA (_ebcad );{_bece ,_ggbged :=_cfagc [_ebcad .Issuer .CommonName ];if !_ggbged {if _bece ,_caaba =_fabad .CertClient .GetIssuer (_ebcad );_caaba !=nil {_bef .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_caaba );
break ;};_cfagc [_ebcad .Issuer .CommonName ]=_bece ;_gbgfd =append (_gbgfd ,_bece );};_ebcad =_bece ;};return _gbgfd ,_cfagc ,nil ;};

// M returns the value of the magenta component of the color.
func (_agde *PdfColorDeviceCMYK )M ()float64 {return _agde [1]};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bgbfc *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbbc ,_ebdd :=_adfb .GetNumbersAsFloat (objects );
if _ebdd !=nil {return nil ,_ebdd ;};return _bgbfc .ColorFromFloats (_cbbc );};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_dgab OutlineDest )ToPdfObject ()_adfb .PdfObject {if (_dgab .PageObj ==nil &&_dgab .Page < 0)||_dgab .Mode ==""{return _adfb .MakeNull ();};_ebbec :=_adfb .MakeArray ();if _dgab .PageObj !=nil {_ebbec .Append (_dgab .PageObj );}else {_ebbec .Append (_adfb .MakeInteger (_dgab .Page ));
};_ebbec .Append (_adfb .MakeName (_dgab .Mode ));switch _dgab .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_ebbec .Append (_adfb .MakeFloat (_dgab .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_ebbec .Append (_adfb .MakeFloat (_dgab .X ));
case "\u0058\u0059\u005a":_ebbec .Append (_adfb .MakeFloat (_dgab .X ));_ebbec .Append (_adfb .MakeFloat (_dgab .Y ));_ebbec .Append (_adfb .MakeFloat (_dgab .Zoom ));default:_ebbec .Set (1,_adfb .MakeName ("\u0046\u0069\u0074"));};return _ebbec ;};

// ToPdfObject implements interface PdfModel.
func (_ccgb *PdfActionGoTo )ToPdfObject ()_adfb .PdfObject {_ccgb .PdfAction .ToPdfObject ();_gf :=_ccgb ._ca ;_ebf :=_gf .PdfObject .(*_adfb .PdfObjectDictionary );_ebf .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeGoTo )));_ebf .SetIfNotNil ("\u0044",_ccgb .D );
return _gf ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_fafa *PdfPageResources )HasFontByName (keyName _adfb .PdfObjectName )bool {_ ,_bfceb :=_fafa .GetFontByName (keyName );return _bfceb ;};func _faee ()*modelManager {_fcafec :=modelManager {};_fcafec ._cbeca =map[PdfModel ]_adfb .PdfObject {};_fcafec ._bccgd =map[_adfb .PdfObject ]PdfModel {};
return &_fcafec ;};func _ebba (_bbbgg _adfb .PdfObject )(PdfFunction ,error ){_bbbgg =_adfb .ResolveReference (_bbbgg );if _addd ,_cgcb :=_bbbgg .(*_adfb .PdfObjectStream );_cgcb {_dbfde :=_addd .PdfObjectDictionary ;_dbda ,_ebbdg :=_dbfde .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_adfb .PdfObjectInteger );
if !_ebbdg {_bef .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_dbda ==0{return _caeg (_addd );}else if *_dbda ==4{return _cagaa (_addd );}else {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cagb ,_ecgba :=_bbbgg .(*_adfb .PdfIndirectObject );
_ecgba {_fgebd ,_cffd :=_cagb .PdfObject .(*_adfb .PdfObjectDictionary );if !_cffd {_bef .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_cababa ,_cffd :=_fgebd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_adfb .PdfObjectInteger );
if !_cffd {_bef .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_cababa ==2{return _fecg (_cagb );}else if *_cababa ==3{return _adgf (_cagb );}else {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cdbd ,_acbc :=_bbbgg .(*_adfb .PdfObjectDictionary );
_acbc {_beaaf ,_eegd :=_cdbd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_adfb .PdfObjectInteger );if !_eegd {_bef .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_beaaf ==2{return _fecg (_cdbd );}else if *_beaaf ==3{return _adgf (_cdbd );
}else {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_bef .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_bbbgg );
return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ToInteger convert to an integer format.
func (_cafe *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_ddcf :=_dc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ddcf *_cafe .R ()),uint32 (_ddcf *_cafe .G ()),uint32 (_ddcf *_cafe .B ())};};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_aaccb :=PdfPage {};_aaccb ._bdabg =_adfb .MakeDict ();_aaccb .Resources =NewPdfPageResources ();_abdda :=_adfb .PdfIndirectObject {};_abdda .PdfObject =_aaccb ._bdabg ;_aaccb ._gcgac =&_abdda ;return &_aaccb ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_ecagf *Image )ToJBIG2Image ()(*_adfb .JBIG2Image ,error ){_gcee ,_ffecg :=_ecagf .ToGoImage ();if _ffecg !=nil {return nil ,_ffecg ;};return _adfb .GoImageToJBIG2 (_gcee ,_adfb .JB2ImageAutoThreshold );};func (_gfba *PdfReader )loadAction (_ffgd _adfb .PdfObject )(*PdfAction ,error ){if _gga ,_bfcg :=_adfb .GetIndirect (_ffgd );
_bfcg {_gef ,_dfee :=_gfba .newPdfActionFromIndirectObject (_gga );if _dfee !=nil {return nil ,_dfee ;};return _gef ,nil ;}else if !_adfb .IsNullObject (_ffgd ){return nil ,_cfe .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func _dcffa (_dgbg _gb .ReadSeeker ,_egfd *ReaderOpts ,_cbbde bool ,_dgbb string )(*PdfReader ,error ){if _egfd ==nil {_egfd =NewReaderOpts ();};_bbdgg :=*_egfd ;_gfbgg :=&PdfReader {_ddafc :_dgbg ,_aegfa :map[_adfb .PdfObject ]struct{}{},_bcfbd :_faee (),_ggdgc :_egfd .LazyLoad ,_bedgf :_egfd .ComplianceMode ,_bggca :_cbbde ,_bccd :&_bbdgg };
_cfefg ,_bfcfb :=_gdfded ("\u0072");if _bfcfb !=nil {return nil ,_bfcfb ;};_bfcfb =_ag .Track (_cfefg ,_dgbb );if _bfcfb !=nil {return nil ,_bfcfb ;};_gfbgg ._bcdge =_cfefg ;var _gbcba *_adfb .PdfParser ;if !_gfbgg ._bedgf {_gbcba ,_bfcfb =_adfb .NewParser (_dgbg );
}else {_gbcba ,_bfcfb =_adfb .NewCompliancePdfParser (_dgbg );};if _bfcfb !=nil {return nil ,_bfcfb ;};_gfbgg ._aeea =_gbcba ;_dgdc ,_bfcfb :=_gfbgg .IsEncrypted ();if _bfcfb !=nil {return nil ,_bfcfb ;};if !_dgdc {_bfcfb =_gfbgg .loadStructure ();if _bfcfb !=nil {return nil ,_bfcfb ;
};}else if _cbbde {_gfgc ,_cgdac :=_gfbgg .Decrypt ([]byte (_egfd .Password ));if _cgdac !=nil {return nil ,_cgdac ;};if !_gfgc {return nil ,_cfe .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_gfbgg ._edee =make (map[*PdfReader ]*PdfReader );_gfbgg ._cbdg =make ([]*PdfReader ,_gbcba .GetRevisionNumber ());return _gfbgg ,nil ;};func (_gfa *PdfReader )newPdfActionNamedFromDict (_egc *_adfb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_egc .Get ("\u004e")},nil ;
};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_dgaff *PdfWriter )SetOptimizer (optimizer Optimizer ){_dgaff ._fbfc =optimizer };func (_aadad fontCommon )fontFlags ()int {if _aadad ._ebcbf ==nil {return 0;};return _aadad ._ebcbf ._degb ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_bega byte )byte ;func (_agdg *DSS )generateHashMap (_bedg []*_adfb .PdfObjectStream )(map[string ]*_adfb .PdfObjectStream ,error ){_eacda :=map[string ]*_adfb .PdfObjectStream {};for _ ,_debda :=range _bedg {_cdaaag ,_ggac :=_adfb .DecodeStream (_debda );
if _ggac !=nil {return nil ,_ggac ;};_bggae ,_ggac :=_ecdgb (_cdaaag );if _ggac !=nil {return nil ,_ggac ;};_eacda [string (_bggae )]=_debda ;};return _eacda ,nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_bf .File ,error ){const _dacga ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_dbefc ,_gbbbb :=_bf .Open (pdfFile );if _gbbbb !=nil {return nil ,nil ,_gbbbb ;};_gbgaee ,_gbbbb :=_dcffa (_dbefc ,opts ,true ,_dacga );if _gbbbb !=nil {_dbefc .Close ();return nil ,nil ,_gbbbb ;};return _gbgaee ,_dbefc ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_ggcd :=&PdfAppender {_gbde :reader ._ddafc ,Reader :reader ,_aeaea :reader ._aeea ,_bgfg :reader ._aegfa };_dffe ,_ffac :=_ggcd ._gbde .Seek (0,_gb .SeekEnd );if _ffac !=nil {return nil ,_ffac ;
};_ggcd ._bad =_dffe ;if _ ,_ffac =_ggcd ._gbde .Seek (0,_gb .SeekStart );_ffac !=nil {return nil ,_ffac ;};_ggcd ._agd ,_ffac =NewPdfReader (_ggcd ._gbde );if _ffac !=nil {return nil ,_ffac ;};for _ ,_ecca :=range _ggcd .Reader .GetObjectNums (){if _ggcd ._ggef < _ecca {_ggcd ._ggef =_ecca ;
};};_ggcd ._aafa =_ggcd ._aeaea .GetXrefTable ();_ggcd ._cfba =_ggcd ._aeaea .GetXrefOffset ();_ggcd ._gde =append (_ggcd ._gde ,_ggcd ._agd .PageList ...);_ggcd ._gaf =make (map[_adfb .PdfObject ]struct{});_ggcd ._bcd =make (map[_adfb .PdfObject ]int64 );
_ggcd ._cgfd =make (map[_adfb .PdfObject ]struct{});_ggcd ._ecb =_ggcd ._agd .AcroForm ;_ggcd ._bba =_ggcd ._agd .DSS ;return _ggcd ,nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_ffg :=NewPdfAction ();_gbb :=&PdfActionURI {};_gbb .PdfAction =_ffg ;_ffg .SetContext (_gbb );return _gbb ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func _daadf (_bfbcb string )(map[_ba .CharCode ]_ba .GlyphName ,error ){_dbeae :=_be .Split (_bfbcb ,"\u000a");_decd :=make (map[_ba .CharCode ]_ba .GlyphName );for _ ,_adfcf :=range _dbeae {_ddeea :=_ebfaf .FindStringSubmatch (_adfcf );
if _ddeea ==nil {continue ;};_aadac ,_gfcc :=_ddeea [1],_ddeea [2];_agaef ,_bdec :=_bc .Atoi (_aadac );if _bdec !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_adfcf );
return nil ,_adfb .ErrTypeError ;};_decd [_ba .CharCode (_agaef )]=_ba .GlyphName (_gfcc );};_bef .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_decd );
return _decd ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_feea *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _adfb .GetNumberAsFloat (_feea .Ascent );};

// GetXObjectByName gets XObject by name.
func (_dddcf *PdfPage )GetXObjectByName (name _adfb .PdfObjectName )(_adfb .PdfObject ,bool ){_baccb ,_dceec :=_dddcf .Resources .XObject .(*_adfb .PdfObjectDictionary );if !_dceec {return nil ,false ;};if _bfcfd :=_baccb .Get (name );_bfcfd !=nil {return _bfcfd ,true ;
};return nil ,false ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _adfb .PdfObject ;Mac _adfb .PdfObject ;Unix _adfb .PdfObject ;NewWindow _adfb .PdfObject ;};func (_gfded *PdfWriter )optimize ()error {if _gfded ._fbfc ==nil {return nil ;};var _decge error ;
_gfded ._fcefd ,_decge =_gfded ._fbfc .Optimize (_gfded ._fcefd );if _decge !=nil {return _decge ;};_efdgf :=make (map[_adfb .PdfObject ]struct{},len (_gfded ._fcefd ));for _ ,_cgaff :=range _gfded ._fcefd {_efdgf [_cgaff ]=struct{}{};};_gfded ._bfgf =_efdgf ;
return nil ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_ebbaa *PdfTransformParamsDocMDP )String ()string {return _ad .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_ebbaa .Type ,_ebbaa .P ,_ebbaa .V );};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _c .Time )(PdfDate ,error ){_agaab :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gbbac ,_ :=_bc .ParseInt (_agaab [1:3],10,32);_daagf ,_ :=_bc .ParseInt (_agaab [4:6],10,32);return PdfDate {_adaae :int64 (timeObj .Year ()),_ceede :int64 (timeObj .Month ()),_edac :int64 (timeObj .Day ()),_gaecd :int64 (timeObj .Hour ()),_gebad :int64 (timeObj .Minute ()),_gbge :int64 (timeObj .Second ()),_abadb :_agaab [0],_bgbag :_gbbac ,_edgg :_daagf },nil ;
};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_adfb .PdfObjectArray ;Domain *_adfb .PdfObjectArray ;Function []PdfFunction ;Extend *_adfb .PdfObjectArray ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_aaeg *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_bbe :=NewPdfAction ();_bea :=&PdfActionGoTo3DView {};_bea .PdfAction =_bbe ;_bbe .SetContext (_bea );return _bea ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;
XObjectTypeUnknown ;);

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_gbcb :=NewPdfAnnotation ();_abg :=&PdfAnnotationHighlight {};_abg .PdfAnnotation =_gbcb ;_abg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbcb .SetContext (_abg );return _abg ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_agab *PdfFieldSignature )ToPdfObject ()_adfb .PdfObject {if _agab .PdfAnnotationWidget !=nil {_agab .PdfAnnotationWidget .ToPdfObject ();};_agab .PdfField .ToPdfObject ();_cege :=_agab ._dfgf ;_bgbfe :=_cege .PdfObject .(*_adfb .PdfObjectDictionary );
_bgbfe .SetIfNotNil ("\u0046\u0054",_adfb .MakeName ("\u0053\u0069\u0067"));_bgbfe .SetIfNotNil ("\u004c\u006f\u0063\u006b",_agab .Lock );_bgbfe .SetIfNotNil ("\u0053\u0056",_agab .SV );if _agab .V !=nil {_bgbfe .SetIfNotNil ("\u0056",_agab .V .ToPdfObject ());
};return _cege ;};func _facf ()string {_ffabf :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _dfbe _ae .Buffer ;for _gdbfg :=0;_gdbfg < 6;_gdbfg ++{_dfbe .WriteRune (rune (_ffabf [_cf .Intn (len (_ffabf ))]));
};return _dfbe .String ();};func (_cfaf *PdfReader )newPdfAnnotationRichMediaFromDict (_fgdg *_adfb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ebg :=&PdfAnnotationRichMedia {};_ebg .RichMediaSettings =_fgdg .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_ebg .RichMediaContent =_fgdg .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ebg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebfd *PdfAnnotationText )ToPdfObject ()_adfb .PdfObject {_ebfd .PdfAnnotation .ToPdfObject ();_ddfa :=_ebfd ._ged ;_efaa :=_ddfa .PdfObject .(*_adfb .PdfObjectDictionary );if _ebfd .PdfAnnotationMarkup !=nil {_ebfd .PdfAnnotationMarkup .appendToPdfDictionary (_efaa );
};_efaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0054\u0065\u0078\u0074"));_efaa .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ebfd .Open );_efaa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebfd .Name );_efaa .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ebfd .State );
_efaa .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_ebfd .StateModel );return _ddfa ;};func (_fgeb *PdfReader )newPdfAnnotationWatermarkFromDict (_fgac *_adfb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_dfa :=PdfAnnotationWatermark {};
_dfa .FixedPrint =_fgac .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_dfa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dagf *PdfAnnotationPolygon )ToPdfObject ()_adfb .PdfObject {_dagf .PdfAnnotation .ToPdfObject ();_fgga :=_dagf ._ged ;_bfg :=_fgga .PdfObject .(*_adfb .PdfObjectDictionary );_dagf .PdfAnnotationMarkup .appendToPdfDictionary (_bfg );_bfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_bfg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dagf .Vertices );_bfg .SetIfNotNil ("\u004c\u0045",_dagf .LE );_bfg .SetIfNotNil ("\u0042\u0053",_dagf .BS );_bfg .SetIfNotNil ("\u0049\u0043",_dagf .IC );_bfg .SetIfNotNil ("\u0042\u0045",_dagf .BE );
_bfg .SetIfNotNil ("\u0049\u0054",_dagf .IT );_bfg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dagf .Measure );return _fgga ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _adfb .StreamEncoder ;Intent _adfb .PdfObject ;ImageMask _adfb .PdfObject ;Mask _adfb .PdfObject ;Matte _adfb .PdfObject ;Decode _adfb .PdfObject ;Interpolate _adfb .PdfObject ;
Alternatives _adfb .PdfObject ;SMask _adfb .PdfObject ;SMaskInData _adfb .PdfObject ;Name _adfb .PdfObject ;StructParent _adfb .PdfObject ;ID _adfb .PdfObject ;OPI _adfb .PdfObject ;Metadata _adfb .PdfObject ;OC _adfb .PdfObject ;Stream []byte ;_efgf *_adfb .PdfObjectStream ;
};func (_eccbb *PdfWriter )checkPendingObjects (){for _dcccda ,_gadag :=range _eccbb ._caecc {if !_eccbb .hasObject (_dcccda ){_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_dcccda ,_dcccda ,_dcccda );
for _ ,_adeef :=range _gadag {for _ ,_caecb :=range _adeef .Keys (){_bcbbd :=_adeef .Get (_caecb );if _bcbbd ==_dcccda {_bef .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_adeef .Set (_caecb ,_adfb .MakeNull ());break ;};};};};};};func _feaa ()string {return _bef .Version };

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_eedfa *Outline )ToPdfOutline ()*PdfOutline {_dcddg :=NewPdfOutline ();var _bfagac []*PdfOutlineItem ;var _dacf int64 ;var _gfacc *PdfOutlineItem ;for _ ,_ceacg :=range _eedfa .Entries {_gdceg ,_bdbf :=_ceacg .ToPdfOutlineItem ();_gdceg .Parent =&_dcddg .PdfOutlineTreeNode ;
if _gfacc !=nil {_gfacc .Next =&_gdceg .PdfOutlineTreeNode ;_gdceg .Prev =&_gfacc .PdfOutlineTreeNode ;};_bfagac =append (_bfagac ,_gdceg );_dacf +=_bdbf ;_gfacc =_gdceg ;};_aeffgd :=int64 (len (_bfagac ));_dacf +=_aeffgd ;if _aeffgd > 0{_dcddg .First =&_bfagac [0].PdfOutlineTreeNode ;
_dcddg .Last =&_bfagac [_aeffgd -1].PdfOutlineTreeNode ;_dcddg .Count =&_dacf ;};return _dcddg ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_adfb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_adfb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_adfb .PdfObjectBool ;_fcedf PdfModel ;_egbfe _adfb .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_dbbe *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_dbbe .GetNumComponents (){return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdage ,_dcdc :=_dbbe .TintTransform .Evaluate (vals );
if _dcdc !=nil {return nil ,_dcdc ;};_bfead ,_dcdc :=_dbbe .AlternateSpace .ColorFromFloats (_cdage );if _dcdc !=nil {return nil ,_dcdc ;};return _bfead ,nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_dcgcc *PdfPageResources )SetShadingByName (keyName _adfb .PdfObjectName ,shadingObj _adfb .PdfObject )error {if _dcgcc .Shading ==nil {_dcgcc .Shading =_adfb .MakeDict ();};_cefeee ,_gaga :=_dcgcc .Shading .(*_adfb .PdfObjectDictionary );if !_gaga {return _adfb .ErrTypeError ;
};_cefeee .Set (keyName ,shadingObj );return nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_caa :=NewPdfAction ();_aeg :=&PdfActionHide {};_aeg .PdfAction =_caa ;_caa .SetContext (_aeg );return _aeg ;};

// SetContentStream sets the pattern cell's content stream.
func (_cbac *PdfTilingPattern )SetContentStream (content []byte ,encoder _adfb .StreamEncoder )error {_adfbg ,_cbfe :=_cbac ._fcgcb .(*_adfb .PdfObjectStream );if !_cbfe {_bef .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbac ._fcgcb );
return _adfb .ErrTypeError ;};if encoder ==nil {encoder =_adfb .NewRawEncoder ();};_cfdagc :=_adfbg .PdfObjectDictionary ;_aadgf :=encoder .MakeStreamDict ();_cfdagc .Merge (_aadgf );_gdfgad ,_gceed :=encoder .EncodeBytes (content );if _gceed !=nil {return _gceed ;
};_cfdagc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_adfb .MakeInteger (int64 (len (_gdfgad ))));_adfbg .Stream =_gdfgad ;return nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_fdafe *PdfColorspaceSpecialIndexed )ToPdfObject ()_adfb .PdfObject {_cgae :=_adfb .MakeArray (_adfb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cgae .Append (_fdafe .Base .ToPdfObject ());_cgae .Append (_adfb .MakeInteger (int64 (_fdafe .HiVal )));
_cgae .Append (_fdafe .Lookup );if _fdafe ._cacb !=nil {_fdafe ._cacb .PdfObject =_cgae ;return _fdafe ._cacb ;};return _cgae ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gbff *PdfColorspaceSpecialSeparation )ToPdfObject ()_adfb .PdfObject {_dccf :=_adfb .MakeArray (_adfb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_dccf .Append (_gbff .ColorantName );_dccf .Append (_gbff .AlternateSpace .ToPdfObject ());
_dccf .Append (_gbff .TintTransform .ToPdfObject ());if _gbff ._gdde !=nil {_gbff ._gdde .PdfObject =_dccf ;return _gbff ._gdde ;};return _dccf ;};func _cbde (_cfbd *_adfb .PdfIndirectObject ,_bfdfc *_adfb .PdfObjectDictionary )(*DSS ,error ){if _cfbd ==nil {_cfbd =_adfb .MakeIndirectObject (nil );
};_cfbd .PdfObject =_adfb .MakeDict ();_gcde :=map[string ]*VRI {};if _cdcg ,_fcae :=_adfb .GetDict (_bfdfc .Get ("\u0056\u0052\u0049"));_fcae {for _ ,_cfcf :=range _cdcg .Keys (){if _agaa ,_fcbda :=_adfb .GetDict (_cdcg .Get (_cfcf ));_fcbda {_gcde [_be .ToUpper (_cfcf .String ())]=_cacg (_agaa );
};};};return &DSS {Certs :_ceeeb (_bfdfc .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_ceeeb (_bfdfc .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_ceeeb (_bfdfc .Get ("\u0043\u0052\u004c\u0073")),VRI :_gcde ,_dcac :_cfbd },nil ;};func (_gccf *PdfReader )loadDSS ()(*DSS ,error ){if _gccf ._aeea .GetCrypter ()!=nil &&!_gccf ._aeea .IsAuthenticated (){return nil ,_ad .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fedc :=_gccf ._egeag .Get ("\u0044\u0053\u0053");if _fedc ==nil {return nil ,nil ;};_ddbeb ,_ :=_adfb .GetIndirect (_fedc );_fedc =_adfb .TraceToDirectObject (_fedc );switch _gbceb :=_fedc .(type ){case *_adfb .PdfObjectNull :return nil ,nil ;case *_adfb .PdfObjectDictionary :return _cbde (_ddbeb ,_gbceb );
};return nil ,_ad .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_fedc );};func (_eefa *PdfReader )newPdfAnnotationInkFromDict (_bbbc *_adfb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_cdbe :=PdfAnnotationInk {};
_gdfb ,_fbf :=_eefa .newPdfAnnotationMarkupFromDict (_bbbc );if _fbf !=nil {return nil ,_fbf ;};_cdbe .PdfAnnotationMarkup =_gdfb ;_cdbe .InkList =_bbbc .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_cdbe .BS =_bbbc .Get ("\u0042\u0053");return &_cdbe ,nil ;
};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_becg :_adfb .MakeDict (),ColorComponents :colorComponents };
};

// ParsePdfObject parses input pdf object into given output intent.
func (_dfddb *PdfOutputIntent )ParsePdfObject (object _adfb .PdfObject )error {_cefb ,_dcea :=_adfb .GetDict (object );if !_dcea {_bef .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _cfe .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_dfddb ._becg =_cefb ;_dfddb .Type ,_ =_cefb .GetString ("\u0054\u0079\u0070\u0065");_afefb ,_dcea :=_cefb .GetString ("\u0053");if _dcea {switch _afefb {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_dfddb .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_dfddb .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_dfddb .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_dfddb .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_dfddb .S =PdfOutputIntentTypeX ;
};};_dfddb .OutputCondition ,_ =_cefb .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_dfddb .OutputConditionIdentifier ,_ =_cefb .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_dfddb .RegistryName ,_ =_cefb .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_dfddb .Info ,_ =_cefb .GetString ("\u0049\u006e\u0066\u006f");if _bggc ,_dgeb :=_adfb .GetStream (_cefb .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_dgeb {_dfddb .ColorComponents ,_ =_adfb .GetIntVal (_bggc .Get ("\u004e"));_cbadc ,_cgcde :=_adfb .DecodeStream (_bggc );if _cgcde !=nil {return _cgcde ;};_dfddb .DestOutputProfile =_cbadc ;};return nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_fbae *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _fbae .UnderlyingCS .GetNumComponents ();};

// AddImageResource adds an image to the XObject resources.
func (_afaaf *PdfPage )AddImageResource (name _adfb .PdfObjectName ,ximg *XObjectImage )error {var _fdafb *_adfb .PdfObjectDictionary ;if _afaaf .Resources .XObject ==nil {_fdafb =_adfb .MakeDict ();_afaaf .Resources .XObject =_fdafb ;}else {var _acdfd bool ;
_fdafb ,_acdfd =(_afaaf .Resources .XObject ).(*_adfb .PdfObjectDictionary );if !_acdfd {return _cfe .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_fdafb .Set (name ,ximg .ToPdfObject ());
return nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ffgb :=NewPdfAnnotation ();_cbg :=&PdfAnnotationWidget {};_cbg .PdfAnnotation =_ffgb ;_ffgb .SetContext (_cbg );return _cbg ;};func _cacg (_faefg *_adfb .PdfObjectDictionary )*VRI {_gddc ,_ :=_adfb .GetString (_faefg .Get ("\u0054\u0055"));
_cecf ,_ :=_adfb .GetString (_faefg .Get ("\u0054\u0053"));return &VRI {Cert :_ceeeb (_faefg .Get ("\u0043\u0065\u0072\u0074")),OCSP :_ceeeb (_faefg .Get ("\u004f\u0043\u0053\u0050")),CRL :_ceeeb (_faefg .Get ("\u0043\u0052\u004c")),TU :_gddc ,TS :_cecf };
};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_fbde *PdfSignature )GetDocMDPPermission ()(_dgb .DocMDPPermission ,bool ){for _ ,_ecefa :=range _fbde .Reference .Elements (){if _fbcg ,_gaebg :=_adfb .GetDict (_ecefa );_gaebg {if _gfbdf ,_decbd :=_adfb .GetNameVal (_fbcg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_decbd &&_gfbdf =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _efgdcd ,_cdgba :=_adfb .GetDict (_fbcg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_cdgba {if P ,_gafbc :=_adfb .GetIntVal (_efgdcd .Get ("\u0050"));
_gafbc {return _dgb .DocMDPPermission (P ),true ;};};};};};return 0,false ;};func (_ccgcb PdfFont )actualFont ()pdfFont {if _ccgcb ._gdcf ==nil {_bef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccgcb );
};return _ccgcb ._gdcf ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _gb .ReadSeeker )(*PdfReader ,error ){const _cbeaeb ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dcffa (rs ,&ReaderOpts {},false ,_cbeaeb );};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bafd PdfModel ;_dfgf *_adfb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_adfb .PdfObjectName ;T *_adfb .PdfObjectString ;TU *_adfb .PdfObjectString ;TM *_adfb .PdfObjectString ;Ff *_adfb .PdfObjectInteger ;
V _adfb .PdfObject ;DV _adfb .PdfObject ;AA _adfb .PdfObject ;VariableText *VariableText ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gbecd pdfCIDFontType0 )GetRuneMetrics (r rune )(_ga .CharMetrics ,bool ){return _ga .CharMetrics {Wx :_gbecd ._adfc },true ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_cbddd *PdfOutlineTreeNode )ToPdfObject ()_adfb .PdfObject {return _cbddd .GetContext ().ToPdfObject ();};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_aaga *PdfField )SetContext (ctx PdfModel ){_aaga ._bafd =ctx };

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_fcg :=NewPdfAction ();_gge :=&PdfActionImportData {};_gge .PdfAction =_fcg ;_fcg .SetContext (_gge );return _gge ;};func _dbcee (_edgea *_adfb .PdfObjectDictionary ){_dbbf ,_deafg :=_adfb .GetArray (_edgea .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_baff ,_baccf :=_adfb .GetIntVal (_edgea .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_adcgb ,_bgedd :=_adfb .GetIntVal (_edgea .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _deafg &&_baccf &&_bgedd {_bfafa :=_dbbf .Len ();if _bfafa !=_adcgb -_baff +1{_bef .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_bfafa ,_adcgb );
_dbgbg :=_adfb .PdfObjectInteger (_baff +_bfafa -1);_edgea .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_dbgbg );};};};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_dcbf *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_bef .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_bef .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_bef .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_bef .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_beggd ,_ddde :=_afe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._befaf ,img ._cdcd );if _ddde !=nil {return Image {},_ddde ;};_aeaec ,_ddde :=_afe .NRGBAConverter .Convert (_beggd );
if _ddde !=nil {return Image {},_ddde ;};return _ebfdg (_aeaec .Base ()),nil ;};func _fgcada (_bffg *_adfb .PdfObjectDictionary ,_gdfde *fontCommon )(*pdfCIDFontType2 ,error ){if _gdfde ._bbbdc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gdfde );
return nil ,_adfb .ErrRangeError ;};_bfgag :=_bccfa (_gdfde );_bbfe ,_acdde :=_adfb .GetDict (_bffg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_acdde {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gdfde );
return nil ,ErrRequiredAttributeMissing ;};_bfgag .CIDSystemInfo =_bbfe ;_bfgag .DW =_bffg .Get ("\u0044\u0057");_bfgag .W =_bffg .Get ("\u0057");_bfgag .DW2 =_bffg .Get ("\u0044\u0057\u0032");_bfgag .W2 =_bffg .Get ("\u0057\u0032");_bfgag .CIDToGIDMap =_bffg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_bfgag ._dcccf =1000.0;if _bdcag ,_eedg :=_adfb .GetNumberAsFloat (_bfgag .DW );_eedg ==nil {_bfgag ._dcccf =_bdcag ;};_gage ,_facga :=_bbeb (_bfgag .W );if _facga !=nil {return nil ,_facga ;};if _gage ==nil {_gage =map[_ba .CharCode ]float64 {};};_bfgag ._bdfe =_gage ;
return _bfgag ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_beae *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_aacae *PdfWriter )writeObjects (){_bef .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_aacae ._fcefd ));_aacae ._aaead =make (map[int ]crossReference );
_aacae ._aaead [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _aacae ._abedb .ObjectMap !=nil {for _fafeg ,_cedfd :=range _aacae ._abedb .ObjectMap {if _fafeg ==0{continue ;};if _cedfd .XType ==_adfb .XrefTypeObjectStream {_efcdcb :=crossReference {Type :2,ObjectNumber :_cedfd .OsObjNumber ,Index :_cedfd .OsObjIndex };
_aacae ._aaead [_fafeg ]=_efcdcb ;};if _cedfd .XType ==_adfb .XrefTypeTableEntry {_bcdgg :=crossReference {Type :1,ObjectNumber :_cedfd .ObjectNumber ,Offset :_cedfd .Offset };_aacae ._aaead [_fafeg ]=_bcdgg ;};};};};

// Y returns the value of the yellow component of the color.
func (_afddf *PdfColorDeviceCMYK )Y ()float64 {return _afddf [2]};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _gb .ReadSeeker )(*PdfReader ,error ){const _cafdc ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dcffa (rs ,&ReaderOpts {LazyLoad :true },false ,_cafdc );
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aagaac *PdfPageResourcesColorspaces )ToPdfObject ()_adfb .PdfObject {_gadfe :=_adfb .MakeDict ();for _ ,_fagag :=range _aagaac .Names {_gadfe .Set (_adfb .PdfObjectName (_fagag ),_aagaac .Colorspaces [_fagag ].ToPdfObject ());};if _aagaac ._daccf !=nil {_aagaac ._daccf .PdfObject =_gadfe ;
return _aagaac ._daccf ;};return _gadfe ;};func (_dbaggc *PdfReader )newPdfSignatureFromIndirect (_acdb *_adfb .PdfIndirectObject )(*PdfSignature ,error ){_bgecg ,_egfdd :=_acdb .PdfObject .(*_adfb .PdfObjectDictionary );if !_egfdd {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _ffebf ,_cagde :=_dbaggc ._bcfbd .GetModelFromPrimitive (_acdb ).(*PdfSignature );_cagde {return _ffebf ,nil ;};_eebbg :=&PdfSignature {};_eebbg ._gbebc =_acdb ;_eebbg .Type ,_ =_adfb .GetName (_bgecg .Get ("\u0054\u0079\u0070\u0065"));
_eebbg .Filter ,_egfdd =_adfb .GetName (_bgecg .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_egfdd {_bef .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_eebbg .SubFilter ,_ =_adfb .GetName (_bgecg .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_eebbg .Contents ,_egfdd =_adfb .GetString (_bgecg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_egfdd {_bef .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _egdd ,_acbf :=_adfb .GetArray (_bgecg .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_acbf {_eebbg .Reference =_adfb .MakeArray ();for _ ,_efef :=range _egdd .Elements (){_cgdgf ,_cbffd :=_adfb .GetDict (_efef );
if !_cbffd {_bef .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_bbdaf ,_geaae :=_dbaggc .newPdfSignatureReferenceFromDict (_cgdgf );if _geaae !=nil {return nil ,_geaae ;};_eebbg .Reference .Append (_bbdaf .ToPdfObject ());};};_eebbg .Cert =_bgecg .Get ("\u0043\u0065\u0072\u0074");_eebbg .ByteRange ,_ =_adfb .GetArray (_bgecg .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_eebbg .Changes ,_ =_adfb .GetArray (_bgecg .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_eebbg .Name ,_ =_adfb .GetString (_bgecg .Get ("\u004e\u0061\u006d\u0065"));_eebbg .M ,_ =_adfb .GetString (_bgecg .Get ("\u004d"));_eebbg .Location ,_ =_adfb .GetString (_bgecg .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_eebbg .Reason ,_ =_adfb .GetString (_bgecg .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_eebbg .ContactInfo ,_ =_adfb .GetString (_bgecg .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_eebbg .R ,_ =_adfb .GetInt (_bgecg .Get ("\u0052"));
_eebbg .V ,_ =_adfb .GetInt (_bgecg .Get ("\u0056"));_eebbg .PropBuild ,_ =_adfb .GetDict (_bgecg .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_eebbg .PropAuthTime ,_ =_adfb .GetInt (_bgecg .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_eebbg .PropAuthType ,_ =_adfb .GetName (_bgecg .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_dbaggc ._bcfbd .Register (_acdb ,_eebbg );return _eebbg ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_adfb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_gdde *_adfb .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_agc *PdfActionLaunch )ToPdfObject ()_adfb .PdfObject {_agc .PdfAction .ToPdfObject ();_fbg :=_agc ._ca ;_cfg :=_fbg .PdfObject .(*_adfb .PdfObjectDictionary );_cfg .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeLaunch )));if _agc .F !=nil {_cfg .Set ("\u0046",_agc .F .ToPdfObject ());
};_cfg .SetIfNotNil ("\u0057\u0069\u006e",_agc .Win );_cfg .SetIfNotNil ("\u004d\u0061\u0063",_agc .Mac );_cfg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_agc .Unix );_cfg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_agc .NewWindow );return _fbg ;
};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _adfb .StreamEncoder ;FormType _adfb .PdfObject ;BBox _adfb .PdfObject ;Matrix _adfb .PdfObject ;Resources *PdfPageResources ;Group _adfb .PdfObject ;Ref _adfb .PdfObject ;MetaData _adfb .PdfObject ;PieceInfo _adfb .PdfObject ;
LastModified _adfb .PdfObject ;StructParent _adfb .PdfObject ;StructParents _adfb .PdfObject ;OPI _adfb .PdfObject ;OC _adfb .PdfObject ;Name _adfb .PdfObject ;

// Stream data.
Stream []byte ;_ddcaaa *_adfb .PdfObjectStream ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_dffda *PdfWriter )SetDocInfo (info *PdfInfo ){_dffda .setDocInfo (info .ToPdfObject ())};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_bd :=NewPdfAction ();_dcb :=&PdfActionSound {};_dcb .PdfAction =_bd ;_bd .SetContext (_dcb );return _dcb ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_abeb *PdfOutlineItem )ToPdfObject ()_adfb .PdfObject {_dedg :=_abeb ._baeee ;_cfead :=_dedg .PdfObject .(*_adfb .PdfObjectDictionary );_cfead .Set ("\u0054\u0069\u0074l\u0065",_abeb .Title );if _abeb .A !=nil {_cfead .Set ("\u0041",_abeb .A );};
if _baabe :=_cfead .Get ("\u0053\u0045");_baabe !=nil {_cfead .Remove ("\u0053\u0045");};if _abeb .C !=nil {_cfead .Set ("\u0043",_abeb .C );};if _abeb .Dest !=nil {_cfead .Set ("\u0044\u0065\u0073\u0074",_abeb .Dest );};if _abeb .F !=nil {_cfead .Set ("\u0046",_abeb .F );
};if _abeb .Count !=nil {_cfead .Set ("\u0043\u006f\u0075n\u0074",_adfb .MakeInteger (*_abeb .Count ));};if _abeb .Next !=nil {_cfead .Set ("\u004e\u0065\u0078\u0074",_abeb .Next .ToPdfObject ());};if _abeb .First !=nil {_cfead .Set ("\u0046\u0069\u0072s\u0074",_abeb .First .ToPdfObject ());
};if _abeb .Prev !=nil {_cfead .Set ("\u0050\u0072\u0065\u0076",_abeb .Prev .GetContext ().GetContainingPdfObject ());};if _abeb .Last !=nil {_cfead .Set ("\u004c\u0061\u0073\u0074",_abeb .Last .GetContext ().GetContainingPdfObject ());};if _abeb .Parent !=nil {_cfead .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_abeb .Parent .GetContext ().GetContainingPdfObject ());
};return _dedg ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_gebbe .Lock ();defer _gebbe .Unlock ();_cgdef =author };

// ToPdfObject implements interface PdfModel.
func (_aff *PdfActionImportData )ToPdfObject ()_adfb .PdfObject {_aff .PdfAction .ToPdfObject ();_bgeg :=_aff ._ca ;_ffee :=_bgeg .PdfObject .(*_adfb .PdfObjectDictionary );_ffee .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeImportData )));
if _aff .F !=nil {_ffee .Set ("\u0046",_aff .F .ToPdfObject ());};return _bgeg ;};

// Encoder returns the font's text encoder.
func (_dfcd pdfCIDFontType2 )Encoder ()_ba .TextEncoder {return _dfcd ._gcdeg };

// Encoder returns the font's text encoder.
func (_fdeg pdfFontType3 )Encoder ()_ba .TextEncoder {return _fdeg ._bcbgf };

// C returns the value of the cyan component of the color.
func (_cdaaa *PdfColorDeviceCMYK )C ()float64 {return _cdaaa [0]};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_ddda *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_adfb .PdfIndirectObject ;SV *_adfb .PdfIndirectObject ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_ceedg *XObjectImage )ToImage ()(*Image ,error ){_ceggd :=&Image {};if _ceedg .Height ==nil {return nil ,_cfe .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_ceggd .Height =*_ceedg .Height ;if _ceedg .Width ==nil {return nil ,_cfe .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ceggd .Width =*_ceedg .Width ;if _ceedg .BitsPerComponent ==nil {switch _ceedg .Filter .(type ){case *_adfb .CCITTFaxEncoder ,*_adfb .JBIG2Encoder :_ceggd .BitsPerComponent =1;
case *_adfb .LZWEncoder ,*_adfb .RunLengthEncoder :_ceggd .BitsPerComponent =8;default:return nil ,_cfe .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_ceggd .BitsPerComponent =*_ceedg .BitsPerComponent ;};_ceggd .ColorComponents =_ceedg .ColorSpace .GetNumComponents ();_ceedg ._efgf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_adfb .MakeInteger (int64 (_ceggd .ColorComponents )));
_bgcga ,_fddfe :=_adfb .DecodeStream (_ceedg ._efgf );if _fddfe !=nil {return nil ,_fddfe ;};_ceggd .Data =_bgcga ;if _ceedg .Decode !=nil {_bdecg ,_gafcb :=_ceedg .Decode .(*_adfb .PdfObjectArray );if !_gafcb {_bef .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_cfe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_fdde ,_cffa :=_bdecg .ToFloat64Array ();if _cffa !=nil {return nil ,_cffa ;};_ceggd ._cdcd =_fdde ;};return _ceggd ,nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_bb :=NewPdfAction ();_def :=&PdfActionTrans {};_def .PdfAction =_bb ;_bb .SetContext (_def );return _def ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_adfb .PdfObject ;GetContainingPdfObject ()_adfb .PdfObject ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_dagfc *PdfPageResources )SetXObjectByName (keyName _adfb .PdfObjectName ,stream *_adfb .PdfObjectStream )error {if _dagfc .XObject ==nil {_dagfc .XObject =_adfb .MakeDict ();};_eebfc :=_adfb .TraceToDirectObject (_dagfc .XObject );_bdbbc ,_gbca :=_eebfc .(*_adfb .PdfObjectDictionary );
if !_gbca {_bef .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_dagfc .XObject ,_eebfc );return _cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bdbbc .Set (keyName ,stream );return nil ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_faac *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// Add appends a top level outline item to the outline.
func (_eebff *Outline )Add (item *OutlineItem ){_eebff .Entries =append (_eebff .Entries ,item )};

// GetPdfVersion gets the version of the PDF used within this document.
func (_baebf *PdfWriter )GetPdfVersion ()string {return _baebf .getPdfVersion ()};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_dcac :_adfb .MakeIndirectObject (_adfb .MakeDict ()),VRI :map[string ]*VRI {}};};func _dfgg (_bfee _adfb .PdfObject )(*_adfb .PdfObjectDictionary ,*fontCommon ,error ){_ggccc :=&fontCommon {};if _dgfd ,_cgfa :=_bfee .(*_adfb .PdfIndirectObject );
_cgfa {_ggccc ._cddcc =_dgfd .ObjectNumber ;};_cdggb ,_dedef :=_adfb .GetDict (_bfee );if !_dedef {_bef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bfee );
return nil ,nil ,ErrFontNotSupported ;};_aeffg ,_dedef :=_adfb .GetNameVal (_cdggb .Get ("\u0054\u0079\u0070\u0065"));if !_dedef {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _aeffg !="\u0046\u006f\u006e\u0074"{_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_aeffg ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_adfb .ErrTypeError ;};_bccfg ,_dedef :=_adfb .GetNameVal (_cdggb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dedef {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_ggccc ._bbbdc =_bccfg ;_aggac ,_dedef :=_adfb .GetNameVal (_cdggb .Get ("\u004e\u0061\u006d\u0065"));if _dedef {_ggccc ._abdd =_aggac ;};_ecebf :=_cdggb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");
if _ecebf !=nil {_ggccc ._cfagb =_adfb .TraceToDirectObject (_ecebf );_cceffa ,_dcfaf :=_gdeb (_ggccc ._cfagb ,_ggccc );if _dcfaf !=nil {return _cdggb ,_ggccc ,_dcfaf ;};_ggccc ._gdgf =_cceffa ;}else if _bccfg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_bccfg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cfedd ,_aedae :=_bfa .NewCIDSystemInfo (_cdggb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _aedae !=nil {return _cdggb ,_ggccc ,_aedae ;};_gffac :=_ad .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_cfedd .Registry ,_cfedd .Ordering );if _bfa .IsPredefinedCMap (_gffac ){_ggccc ._gdgf ,_aedae =_bfa .LoadPredefinedCMap (_gffac );
if _aedae !=nil {_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gffac ,_aedae );
};};};_befb :=_cdggb .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _befb !=nil {_efgdc ,_egga :=_ddee (_befb );if _egga !=nil {_bef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_egga );
return _cdggb ,_ggccc ,_egga ;};_ggccc ._ebcbf =_efgdc ;};if _bccfg !="\u0054\u0079\u0070e\u0033"{_cddgb ,_bgee :=_adfb .GetNameVal (_cdggb .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bgee {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _cdggb ,_ggccc ,ErrRequiredAttributeMissing ;};_ggccc ._gbed =_cddgb ;};return _cdggb ,_ggccc ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_cfaga *PdfWriter )SetForms (form *PdfAcroForm )error {_cfaga ._bfeb =form ;return nil };

// Evaluate runs the function on the passed in slice and returns the results.
func (_caefd *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bef .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_cfe .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// R returns the value of the red component of the color.
func (_bgec *PdfColorDeviceRGB )R ()float64 {return _bgec [0]};

// WriteToFile writes the Appender output to file specified by path.
func (_gdge *PdfAppender )WriteToFile (outputPath string )error {_bgdc ,_fcgb :=_bf .Create (outputPath );if _fcgb !=nil {return _fcgb ;};defer _bgdc .Close ();return _gdge .Write (_bgdc );};

// SetName sets the `Name` field of the signature.
func (_fafb *PdfSignature )SetName (name string ){_fafb .Name =_adfb .MakeString (name )};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// SetDecode sets the decode image float slice.
func (_ecdeaa *Image )SetDecode (decode []float64 ){_ecdeaa ._cdcd =decode };

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_abcce *PdfPageResources )SetXObjectImageByName (keyName _adfb .PdfObjectName ,ximg *XObjectImage )error {_edfde :=ximg .ToPdfObject ().(*_adfb .PdfObjectStream );_bbace :=_abcce .SetXObjectByName (keyName ,_edfde );return _bbace ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_cbbac *PdfReader )Inspect ()(map[string ]int ,error ){return _cbbac ._aeea .Inspect ()};

// Val returns the color value.
func (_ababc *PdfColorDeviceGray )Val ()float64 {return float64 (*_ababc )};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _adfb .PdfObject ;BS _adfb .PdfObject ;};func _ddbea (_gbbe *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ecdb ,_bgecd :=_adfb .GetDict (_gbbe .AP );if !_bgecd {return nil ,nil ,_cfe .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _ecdb ==nil {return nil ,nil ,nil ;};_cagfd ,_bgecd :=_adfb .GetArray (_gbbe .Rect );if !_bgecd ||_cagfd .Len ()!=4{return nil ,nil ,_cfe .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_efbcf ,_dgga :=NewPdfRectangle (*_cagfd );
if _dgga !=nil {return nil ,nil ,_dgga ;};_bcfgd :=_adfb .TraceToDirectObject (_ecdb .Get ("\u004e"));switch _ccfg :=_bcfgd .(type ){case *_adfb .PdfObjectStream :_eecf :=_ccfg ;_aadc ,_aefb :=NewXObjectFormFromStream (_eecf );return _aadc ,_efbcf ,_aefb ;
case *_adfb .PdfObjectDictionary :_gfgb :=_ccfg ;_cece ,_dccb :=_adfb .GetName (_gbbe .AS );if !_dccb {return nil ,nil ,nil ;};if _gfgb .Get (*_cece )==nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_babeb ,_dccb :=_adfb .GetStream (_gfgb .Get (*_cece ));if !_dccb {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_cece );
return nil ,nil ,_cfe .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_edbdf ,_agge :=NewXObjectFormFromStream (_babeb );return _edbdf ,_efbcf ,_agge ;};_bef .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_bcfgd );
return nil ,nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_ebgbb *PdfPage )GetRotate ()(int64 ,error ){if _ebgbb .Rotate !=nil {return *_ebgbb .Rotate ,nil ;};_dfcce :=_ebgbb .Parent ;for _dfcce !=nil {_gded ,_bdbda :=_adfb .GetDict (_dfcce );if !_bdbda {return 0,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _agcd :=_gded .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_agcd !=nil {_abgba ,_gcgbf :=_adfb .GetInt (_agcd );if !_gcgbf {return 0,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _abgba !=nil {return int64 (*_abgba ),nil ;
};return 0,_cfe .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_dfcce =_gded .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_cfe .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_ccfa :=NewPdfAnnotation ();_bca :=&PdfAnnotationStamp {};_bca .PdfAnnotation =_ccfa ;_bca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ccfa .SetContext (_bca );return _bca ;};

// MergePageWith appends page content to source Pdf file page content.
func (_bgac *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_afcg :=pageNum -1;var _ceacc *PdfPage ;for _faef ,_cegg :=range _bgac ._gde {if _faef ==_afcg {_ceacc =_cegg ;};};if _ceacc ==nil {return _ad .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _ceacc ._gcgac !=nil &&_ceacc ._gcgac .GetParser ()==_bgac ._agd ._aeea {_ceacc =_ceacc .Duplicate ();_bgac ._gde [_afcg ]=_ceacc ;};page =page .Duplicate ();_dcgca (page );_gbec :=_ace (_ceacc );_geea :=_ace (page );_fcff :=make (map[_adfb .PdfObjectName ]_adfb .PdfObjectName );
for _daad :=range _geea {if _ ,_ddgb :=_gbec [_daad ];_ddgb {for _egb :=1;true ;_egb ++{_cccc :=_adfb .PdfObjectName (string (_daad )+_bc .Itoa (_egb ));if _ ,_adfe :=_gbec [_cccc ];!_adfe {_fcff [_daad ]=_cccc ;break ;};};};};_dcdf ,_gfaf :=page .GetContentStreams ();
if _gfaf !=nil {return _gfaf ;};_bbda ,_gfaf :=_ceacc .GetContentStreams ();if _gfaf !=nil {return _gfaf ;};for _ecbf ,_aae :=range _dcdf {for _eebg ,_ecbb :=range _fcff {_aae =_be .Replace (_aae ,"\u002f"+string (_eebg ),"\u002f"+string (_ecbb ),-1);};
_dcdf [_ecbf ]=_aae ;};_bbda =append (_bbda ,_dcdf ...);if _bcdg :=_ceacc .SetContentStreams (_bbda ,_adfb .NewFlateEncoder ());_bcdg !=nil {return _bcdg ;};_ceacc ._fagca =append (_ceacc ._fagca ,page ._fagca ...);if _ceacc .Resources ==nil {_ceacc .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_ceacc .Resources .Font =_bgac .mergeResources (_ceacc .Resources .Font ,page .Resources .Font ,_fcff );_ceacc .Resources .XObject =_bgac .mergeResources (_ceacc .Resources .XObject ,page .Resources .XObject ,_fcff );_ceacc .Resources .Properties =_bgac .mergeResources (_ceacc .Resources .Properties ,page .Resources .Properties ,_fcff );
if _ceacc .Resources .ProcSet ==nil {_ceacc .Resources .ProcSet =page .Resources .ProcSet ;};_ceacc .Resources .Shading =_bgac .mergeResources (_ceacc .Resources .Shading ,page .Resources .Shading ,_fcff );_ceacc .Resources .ExtGState =_bgac .mergeResources (_ceacc .Resources .ExtGState ,page .Resources .ExtGState ,_fcff );
};_cbdc ,_gfaf :=_ceacc .GetMediaBox ();if _gfaf !=nil {return _gfaf ;};_bbbe ,_gfaf :=page .GetMediaBox ();if _gfaf !=nil {return _gfaf ;};var _gfeg bool ;if _cbdc .Llx > _bbbe .Llx {_cbdc .Llx =_bbbe .Llx ;_gfeg =true ;};if _cbdc .Lly > _bbbe .Lly {_cbdc .Lly =_bbbe .Lly ;
_gfeg =true ;};if _cbdc .Urx < _bbbe .Urx {_cbdc .Urx =_bbbe .Urx ;_gfeg =true ;};if _cbdc .Ury < _bbbe .Ury {_cbdc .Ury =_bbbe .Ury ;_gfeg =true ;};if _gfeg {_ceacc .MediaBox =_cbdc ;};return nil ;};func _fgedd (_eeeb *[]*PdfField ,_ecffa FieldFilterFunc ,_cadgb bool )[]*PdfField {if _eeeb ==nil {return nil ;
};_ebgbc :=*_eeeb ;if len (*_eeeb )==0{return nil ;};_ddbfgf :=_ebgbc [:0];if _ecffa ==nil {_ecffa =func (*PdfField )bool {return true };};var _cdec []*PdfField ;for _ ,_cbcab :=range _ebgbc {_egce :=_ecffa (_cbcab );if _egce {_cdec =append (_cdec ,_cbcab );
if len (_cbcab .Kids )> 0{_cdec =append (_cdec ,_fgedd (&_cbcab .Kids ,_ecffa ,_cadgb )...);};};if !_cadgb ||!_egce ||len (_cbcab .Kids )> 0{_ddbfgf =append (_ddbfgf ,_cbcab );};};*_eeeb =_ddbfgf ;return _cdec ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_egbg *PdfInfo )AddCustomInfo (name string ,value string )error {if _egbg ._cgdf ==nil {_egbg ._cgdf =_adfb .MakeDict ();};if _ ,_edfe :=_ceafa [name ];_edfe {return _ad .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_egbg ._cgdf .SetIfNotNil (*_adfb .MakeName (name ),_adfb .MakeString (value ));return nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_gcdegg *PdfPage )AddContentStreamByString (contentStr string )error {_defc ,_bedeg :=_adfb .MakeStream ([]byte (contentStr ),_adfb .NewFlateEncoder ());if _bedeg !=nil {return _bedeg ;};if _gcdegg .Contents ==nil {_gcdegg .Contents =_defc ;}else {_cbgf :=_adfb .TraceToDirectObject (_gcdegg .Contents );
_edaf ,_aece :=_cbgf .(*_adfb .PdfObjectArray );if !_aece {_edaf =_adfb .MakeArray (_cbgf );};_edaf .Append (_defc );_gcdegg .Contents =_edaf ;};return nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_beg PdfModel ;Type _adfb .PdfObject ;S _adfb .PdfObject ;Next _adfb .PdfObject ;_ca *_adfb .PdfIndirectObject ;};

// IsCID returns true if the underlying font is CID.
func (_gdac *PdfFont )IsCID ()bool {return _gdac .baseFields ().isCIDFont ()};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_dfefg *PdfWriter )ApplyStandard (optimizer StandardApplier ){_dfefg ._bbef =optimizer };

// ToPdfObject returns the PDF representation of the colorspace.
func (_bcad *PdfColorspaceDeviceCMYK )ToPdfObject ()_adfb .PdfObject {return _adfb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_fgbda :=PdfWriter {};_fgbda ._bfgf =map[_adfb .PdfObject ]struct{}{};_fgbda ._fcefd =[]_adfb .PdfObject {};_fgbda ._caecc =map[_adfb .PdfObject ][]*_adfb .PdfObjectDictionary {};_fgbda ._ecdcgg =map[_adfb .PdfObject ]struct{}{};
_fgbda ._dbbecb .Major =1;_fgbda ._dbbecb .Minor =3;_ccgbd :=_adfb .MakeDict ();_daaeg :=[]struct{_cbdb _adfb .PdfObjectName ;_gfdeg string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fccff ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cacgd ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_aegbc ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_cccfb ()},{"\u0054\u0069\u0074l\u0065",_edbcd ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bdabb ()}};
for _ ,_ffcee :=range _daaeg {if _ffcee ._gfdeg !=""{_ccgbd .Set (_ffcee ._cbdb ,_adfb .MakeString (_ffcee ._gfdeg ));};};if _ddbfe :=_cbcb ();!_ddbfe .IsZero (){if _dcfdd ,_egadd :=NewPdfDateFromTime (_ddbfe );_egadd ==nil {_ccgbd .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dcfdd .ToPdfObject ());
};};if _bfgba :=_bgdec ();!_bfgba .IsZero (){if _adeee ,_ffdeg :=NewPdfDateFromTime (_bfgba );_ffdeg ==nil {_ccgbd .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_adeee .ToPdfObject ());};};_cfffa :=_adfb .PdfIndirectObject {};_cfffa .PdfObject =_ccgbd ;
_fgbda ._bcfdf =&_cfffa ;_fgbda .addObject (&_cfffa );_ffecc :=_adfb .PdfIndirectObject {};_ebgge :=_adfb .MakeDict ();_ebgge .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ffecc .PdfObject =_ebgge ;_fgbda ._cfcab =&_ffecc ;
_fgbda .addObject (_fgbda ._cfcab );_ceca ,_badea :=_gdfded ("\u0077");if _badea !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_badea );};_fgbda ._fbgdg =_ceca ;_decbb :=_adfb .PdfIndirectObject {};_dfacd :=_adfb .MakeDict ();
_dfacd .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0050\u0061\u0067e\u0073"));_egggbb :=_adfb .PdfObjectArray {};_dfacd .Set ("\u004b\u0069\u0064\u0073",&_egggbb );_dfacd .Set ("\u0043\u006f\u0075n\u0074",_adfb .MakeInteger (0));_decbb .PdfObject =_dfacd ;
_fgbda ._gdfab =&_decbb ;_fgbda ._egee =map[_adfb .PdfObject ]struct{}{};_fgbda .addObject (_fgbda ._gdfab );_ebgge .Set ("\u0050\u0061\u0067e\u0073",&_decbb );_fgbda ._bcdaf =_ebgge ;_bef .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ffecc );
return _fgbda ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_dafg *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_cggac *PdfWriter )setWriter (_dcefd _gb .Writer ){_cggac ._dgbga =_cggac ._acabcf ;_cggac ._ebbda =_b .NewWriter (_dcefd );};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_adfb .PdfObjectArray ;ExtGState _adfb .PdfObject ;};func _dfff (_cbd _adfb .PdfObject )(*PdfBorderStyle ,error ){_ecad :=&PdfBorderStyle {};_ecad ._ecef =_cbd ;var _acff *_adfb .PdfObjectDictionary ;
_cbd =_adfb .TraceToDirectObject (_cbd );_acff ,_ecac :=_cbd .(*_adfb .PdfObjectDictionary );if !_ecac {return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _fgaa :=_acff .Get ("\u0054\u0079\u0070\u0065");_fgaa !=nil {_bbcga ,_faca :=_fgaa .(*_adfb .PdfObjectName );
if !_faca {_bef .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_fgaa );
}else {if *_bbcga !="\u0042\u006f\u0072\u0064\u0065\u0072"{_bef .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bbcga );};};};if _adbb :=_acff .Get ("\u0057");
_adbb !=nil {_ceee ,_effb :=_adfb .GetNumberAsFloat (_adbb );if _effb !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_effb );return nil ,_effb ;};_ecad .W =&_ceee ;
};if _afed :=_acff .Get ("\u0053");_afed !=nil {_gefb ,_gcfd :=_afed .(*_adfb .PdfObjectName );if !_gcfd {return nil ,_cfe .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _aebdg BorderStyle ;switch *_gefb {case "\u0053":_aebdg =BorderStyleSolid ;case "\u0044":_aebdg =BorderStyleDashed ;case "\u0042":_aebdg =BorderStyleBeveled ;case "\u0049":_aebdg =BorderStyleInset ;case "\u0055":_aebdg =BorderStyleUnderline ;default:_bef .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gefb );
return nil ,_cfe .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_ecad .S =&_aebdg ;};if _cbec :=_acff .Get ("\u0044");_cbec !=nil {_eeea ,_edbg :=_cbec .(*_adfb .PdfObjectArray );
if !_edbg {_bef .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cbec );return nil ,_cfe .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_afge ,_bbgg :=_eeea .ToIntegerArray ();if _bbgg !=nil {_bef .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_bbgg );
return nil ,_bbgg ;};_ecad .D =&_afge ;};return _ecad ,nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_fgbeb *DSS )ToPdfObject ()_adfb .PdfObject {_bacd :=_fgbeb ._dcac .PdfObject .(*_adfb .PdfObjectDictionary );_bacd .Clear ();_edad :=_adfb .MakeDict ();for _gdda ,_dbcag :=range _fgbeb .VRI {_edad .Set (*_adfb .MakeName (_gdda ),_dbcag .ToPdfObject ());
};_bacd .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_cggba (_fgbeb .Certs ));_bacd .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_cggba (_fgbeb .OCSPs ));_bacd .SetIfNotNil ("\u0043\u0052\u004c\u0073",_cggba (_fgbeb .CRLs ));_bacd .Set ("\u0056\u0052\u0049",_edad );
return _fgbeb ._dcac ;};

// WriteString outputs the object as it is to be written to file.
func (_bdggc *pdfSignDictionary )WriteString ()string {_bdggc ._bdfcfb =0;_bdggc ._cdagg =0;_bdggc ._agcg =0;_bdggc ._dgbgf =0;_dcgacb :=_ae .NewBuffer (nil );_dcgacb .WriteString ("\u003c\u003c");for _ ,_gadbc :=range _bdggc .Keys (){_dddcfb :=_bdggc .Get (_gadbc );
switch _gadbc {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_dcgacb .WriteString (_gadbc .WriteString ());_dcgacb .WriteString ("\u0020");_bdggc ._agcg =_dcgacb .Len ();_dcgacb .WriteString (_dddcfb .WriteString ());_dcgacb .WriteString ("\u0020");
_bdggc ._dgbgf =_dcgacb .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_dcgacb .WriteString (_gadbc .WriteString ());_dcgacb .WriteString ("\u0020");_bdggc ._bdfcfb =_dcgacb .Len ();_dcgacb .WriteString (_dddcfb .WriteString ());_dcgacb .WriteString ("\u0020");
_bdggc ._cdagg =_dcgacb .Len ()-1;default:_dcgacb .WriteString (_gadbc .WriteString ());_dcgacb .WriteString ("\u0020");_dcgacb .WriteString (_dddcfb .WriteString ());};};_dcgacb .WriteString ("\u003e\u003e");return _dcgacb .String ();};

// String returns a string representation of the field.
func (_ggefa *PdfField )String ()string {if _fagfd ,_abbb :=_ggefa .ToPdfObject ().(*_adfb .PdfIndirectObject );_abbb {return _ad .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ggefa ._bafd ,_fagfd .PdfObject .String ());};return "";};func (_ffedeb *LTV )generateVRIKey (_fbeae *PdfSignature )(string ,error ){_cgeca ,_eged :=_ecdgb (_fbeae .Contents .Bytes ());
if _eged !=nil {return "",_eged ;};return _be .ToUpper (_aa .EncodeToString (_cgeca )),nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func (_eccce *pdfFontSimple )addEncoding ()error {var (_caeb string ;_eabec map[_ba .CharCode ]_ba .GlyphName ;_bbcba _ba .SimpleEncoder ;);if _eccce .Encoder ()!=nil {_gccd ,_eebbc :=_eccce .Encoder ().(_ba .SimpleEncoder );
if _eebbc &&_gccd !=nil {_caeb =_gccd .BaseName ();};};if _eccce .Encoding !=nil {_eaeb ,_beeb ,_bbde :=_eccce .getFontEncoding ();if _bbde !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eccce ._gbed ,_eccce ._bbbdc ,_eccce .Encoding ,_eccce .Encoding ,_bbde );
return _bbde ;};if _eaeb !=""{_caeb =_eaeb ;};_eabec =_beeb ;_bbcba ,_bbde =_ba .NewSimpleTextEncoder (_caeb ,_eabec );if _bbde !=nil {return _bbde ;};};if _bbcba ==nil {_ccade :=_eccce ._ebcbf ;if _ccade !=nil {switch _eccce ._bbbdc {case "\u0054\u0079\u0070e\u0031":if _ccade .fontFile !=nil &&_ccade .fontFile ._aeaeg !=nil {_bef .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_bbcba =_ccade .fontFile ._aeaeg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _ccade ._bagcb !=nil {_bef .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_abfaf ,_bdcg :=_ccade ._bagcb .MakeEncoder ();
if _bdcg ==nil {_bbcba =_abfaf ;};};};};};if _bbcba !=nil {if _eabec !=nil {_bef .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eabec ,_eccce .baseFields ());
_bbcba =_ba .ApplyDifferences (_bbcba ,_eabec );};_eccce .SetEncoder (_bbcba );};return nil ;};

// String returns a string that describes `base`.
func (_bdgab fontCommon )String ()string {return _ad .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_bdgab .coreString ());};func (_bffc *DSS )addCerts (_eagf [][]byte )([]*_adfb .PdfObjectStream ,error ){return _bffc .add (&_bffc .Certs ,_bffc ._ccgfb ,_eagf );
};func (_fafg *Image )samplesAddPadding (_afcf []uint32 )[]uint32 {_gdgc :=_afe .BytesPerLine (int (_fafg .Width ),int (_fafg .BitsPerComponent ),_fafg .ColorComponents )*(8/int (_fafg .BitsPerComponent ));_cbfgbb :=_gdgc *int (_fafg .Height );if len (_afcf )==_cbfgbb {return _afcf ;
};_cbcag :=make ([]uint32 ,_cbfgbb );_babba :=int (_fafg .Width )*_fafg .ColorComponents ;for _dedbfb :=0;_dedbfb < int (_fafg .Height );_dedbfb ++{_gaab :=_dedbfb *int (_fafg .Width );_ecge :=_dedbfb *_gdgc ;for _fdbg :=0;_fdbg < _babba ;_fdbg ++{_cbcag [_ecge +_fdbg ]=_afcf [_gaab +_fdbg ];
};};return _cbcag ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_aefga *PdfOutlineTreeNode )GetContext ()PdfModel {if _cacff ,_ggcaa :=_aefga ._ddddf .(*PdfOutline );_ggcaa {return _cacff ;};if _gbbd ,_dagcb :=_aefga ._ddddf .(*PdfOutlineItem );_dagcb {return _gbbd ;};_bef .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_aga :=NewPdfAnnotation ();_bbcf :=&PdfAnnotationPopup {};_bbcf .PdfAnnotation =_aga ;_aga .SetContext (_bbcf );return _bbcf ;};func _ace (_gbea *PdfPage )map[_adfb .PdfObjectName ]_adfb .PdfObject {_dbdg :=make (map[_adfb .PdfObjectName ]_adfb .PdfObject );
if _gbea .Resources ==nil {return _dbdg ;};if _gbea .Resources .Font !=nil {if _gdaa ,_gebb :=_adfb .GetDict (_gbea .Resources .Font );_gebb {for _ ,_eafd :=range _gdaa .Keys (){_dbdg [_eafd ]=_gdaa .Get (_eafd );};};};if _gbea .Resources .ExtGState !=nil {if _cdfc ,_bdbc :=_adfb .GetDict (_gbea .Resources .ExtGState );
_bdbc {for _ ,_fdac :=range _cdfc .Keys (){_dbdg [_fdac ]=_cdfc .Get (_fdac );};};};if _gbea .Resources .XObject !=nil {if _bac ,_begeb :=_adfb .GetDict (_gbea .Resources .XObject );_begeb {for _ ,_gcg :=range _bac .Keys (){_dbdg [_gcg ]=_bac .Get (_gcg );
};};};if _gbea .Resources .Pattern !=nil {if _aege ,_aef :=_adfb .GetDict (_gbea .Resources .Pattern );_aef {for _ ,_cdaa :=range _aege .Keys (){_dbdg [_cdaa ]=_aege .Get (_cdaa );};};};if _gbea .Resources .Shading !=nil {if _egdgc ,_dgf :=_adfb .GetDict (_gbea .Resources .Shading );
_dgf {for _ ,_bdcb :=range _egdgc .Keys (){_dbdg [_bdcb ]=_egdgc .Get (_bdcb );};};};if _gbea .Resources .ProcSet !=nil {if _aabga ,_fdcg :=_adfb .GetDict (_gbea .Resources .ProcSet );_fdcg {for _ ,_gbage :=range _aabga .Keys (){_dbdg [_gbage ]=_aabga .Get (_gbage );
};};};if _gbea .Resources .Properties !=nil {if _deff ,_bbbb :=_adfb .GetDict (_gbea .Resources .Properties );_bbbb {for _ ,_gafa :=range _deff .Keys (){_dbdg [_gafa ]=_deff .Get (_gafa );};};};return _dbdg ;};func _eeda (_gdecf _adfb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gcgc :=NewPdfColorspaceSpecialSeparation ();
if _dbca ,_gadd :=_gdecf .(*_adfb .PdfIndirectObject );_gadd {_gcgc ._gdde =_dbca ;};_gdecf =_adfb .TraceToDirectObject (_gdecf );_ggddc ,_gbce :=_gdecf .(*_adfb .PdfObjectArray );if !_gbce {return nil ,_ad .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _ggddc .Len ()!=4{return nil ,_ad .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gdecf =_ggddc .Get (0);
_gbeg ,_gbce :=_gdecf .(*_adfb .PdfObjectName );if !_gbce {return nil ,_ad .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gbeg !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_ad .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_gdecf =_ggddc .Get (1);_gbeg ,_gbce =_gdecf .(*_adfb .PdfObjectName );if !_gbce {return nil ,_ad .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gcgc .ColorantName =_gbeg ;_gdecf =_ggddc .Get (2);_ddge ,_afde :=NewPdfColorspaceFromPdfObject (_gdecf );if _afde !=nil {return nil ,_afde ;};_gcgc .AlternateSpace =_ddge ;_dcccd ,_afde :=_ebba (_ggddc .Get (3));if _afde !=nil {return nil ,_afde ;};
_gcgc .TintTransform =_dcccd ;return _gcgc ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func _feed (_ddgef *_adfb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_bdfdc :=&PdfTilingPattern {};_ebbae :=_ddgef .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ebbae ==nil {_bef .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ggeab ,_bdgaa :=_ebbae .(*_adfb .PdfObjectInteger );if !_bdgaa {_bef .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ebbae );
return nil ,_adfb .ErrTypeError ;};_bdfdc .PaintType =_ggeab ;_ebbae =_ddgef .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ebbae ==nil {_bef .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbdfa ,_bdgaa :=_ebbae .(*_adfb .PdfObjectInteger );if !_bdgaa {_bef .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebbae );
return nil ,_adfb .ErrTypeError ;};_bdfdc .TilingType =_cbdfa ;_ebbae =_ddgef .Get ("\u0042\u0042\u006f\u0078");if _ebbae ==nil {_bef .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ebbae =_adfb .TraceToDirectObject (_ebbae );_fegg ,_bdgaa :=_ebbae .(*_adfb .PdfObjectArray );if !_bdgaa {_bef .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebbae );
return nil ,_adfb .ErrTypeError ;};_cagae ,_gdgbc :=NewPdfRectangle (*_fegg );if _gdgbc !=nil {_bef .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gdgbc );return nil ,_gdgbc ;};_bdfdc .BBox =_cagae ;_ebbae =_ddgef .Get ("\u0058\u0053\u0074e\u0070");
if _ebbae ==nil {_bef .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dbfda ,_gdgbc :=_adfb .GetNumberAsFloat (_ebbae );if _gdgbc !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_dbfda );
return nil ,_gdgbc ;};_bdfdc .XStep =_adfb .MakeFloat (_dbfda );_ebbae =_ddgef .Get ("\u0059\u0053\u0074e\u0070");if _ebbae ==nil {_bef .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_dgfa ,_gdgbc :=_adfb .GetNumberAsFloat (_ebbae );if _gdgbc !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_dgfa );
return nil ,_gdgbc ;};_bdfdc .YStep =_adfb .MakeFloat (_dgfa );_ebbae =_ddgef .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ebbae ==nil {_bef .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddgef ,_bdgaa =_adfb .TraceToDirectObject (_ebbae ).(*_adfb .PdfObjectDictionary );if !_bdgaa {return nil ,_ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ebbae );
};_bbad ,_gdgbc :=NewPdfPageResourcesFromDict (_ddgef );if _gdgbc !=nil {return nil ,_gdgbc ;};_bdfdc .Resources =_bbad ;if _gdddg :=_ddgef .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gdddg !=nil {_geff ,_dabcf :=_gdddg .(*_adfb .PdfObjectArray );if !_dabcf {_bef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdddg );
return nil ,_adfb .ErrTypeError ;};_bdfdc .Matrix =_geff ;};return _bdfdc ,nil ;};func _efgb (_cbaa *_adfb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_fefab :=PdfShadingType4 {};_deffd :=_cbaa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _deffd ==nil {_bef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_geadg ,_egebc :=_deffd .(*_adfb .PdfObjectInteger );if !_egebc {_bef .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_deffd );
return nil ,_adfb .ErrTypeError ;};_fefab .BitsPerCoordinate =_geadg ;_deffd =_cbaa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _deffd ==nil {_bef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_geadg ,_egebc =_deffd .(*_adfb .PdfObjectInteger );if !_egebc {_bef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_deffd );
return nil ,_adfb .ErrTypeError ;};_fefab .BitsPerComponent =_geadg ;_deffd =_cbaa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _deffd ==nil {_bef .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_geadg ,_egebc =_deffd .(*_adfb .PdfObjectInteger );if !_egebc {_bef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_deffd );
return nil ,_adfb .ErrTypeError ;};_fefab .BitsPerComponent =_geadg ;_deffd =_cbaa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _deffd ==nil {_bef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fdeagb ,_egebc :=_deffd .(*_adfb .PdfObjectArray );if !_egebc {_bef .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_deffd );
return nil ,_adfb .ErrTypeError ;};_fefab .Decode =_fdeagb ;_deffd =_cbaa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _deffd ==nil {_bef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fefab .Function =[]PdfFunction {};if _cecb ,_eegfc :=_deffd .(*_adfb .PdfObjectArray );_eegfc {for _ ,_dabbb :=range _cecb .Elements (){_gccbe ,_fcdbe :=_ebba (_dabbb );if _fcdbe !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcdbe );
return nil ,_fcdbe ;};_fefab .Function =append (_fefab .Function ,_gccbe );};}else {_facfb ,_fccgc :=_ebba (_deffd );if _fccgc !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fccgc );
return nil ,_fccgc ;};_fefab .Function =append (_fefab .Function ,_facfb );};return &_fefab ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_eeb :=NewPdfAnnotation ();_aeca :=&PdfAnnotationScreen {};_aeca .PdfAnnotation =_eeb ;_eeb .SetContext (_aeca );return _aeca ;};

// SetFillImage attach a model.Image to push button.
func (_efede *PdfFieldButton )SetFillImage (image *Image ){if _efede .IsPush (){_efede ._adgd =image ;};};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gegf DefaultImageHandler )NewGrayImageFromGoImage (goimg _ade .Image )(*Image ,error ){_aabb :=goimg .Bounds ();_bbgc :=&Image {Width :int64 (_aabb .Dx ()),Height :int64 (_aabb .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _ggcdf :=goimg .(type ){case *_ade .Gray :if len (_ggcdf .Pix )!=_aabb .Dx ()*_aabb .Dy (){_abfd ,_daceb :=_afe .GrayConverter .Convert (goimg );
if _daceb !=nil {return nil ,_daceb ;};_bbgc .Data =_abfd .Pix ();}else {_bbgc .Data =_ggcdf .Pix ;};case *_ade .Gray16 :_bbgc .BitsPerComponent =16;if len (_ggcdf .Pix )!=_aabb .Dx ()*_aabb .Dy ()*2{_dcee ,_ebbb :=_afe .Gray16Converter .Convert (goimg );
if _ebbb !=nil {return nil ,_ebbb ;};_bbgc .Data =_dcee .Pix ();}else {_bbgc .Data =_ggcdf .Pix ;};case _afe .Image :_edaea :=_ggcdf .Base ();if _edaea .ColorComponents ==1{_bbgc .BitsPerComponent =int64 (_edaea .BitsPerComponent );_bbgc .Data =_edaea .Data ;
return _bbgc ,nil ;};_fdcf ,_ddea :=_afe .GrayConverter .Convert (goimg );if _ddea !=nil {return nil ,_ddea ;};_bbgc .Data =_fdcf .Pix ();default:_cdeac ,_cafg :=_afe .GrayConverter .Convert (goimg );if _cafg !=nil {return nil ,_cafg ;};_bbgc .Data =_cdeac .Pix ();
};return _bbgc ,nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_fbgd :=NewPdfAnnotation ();_eaf :=&PdfAnnotationRichMedia {};_eaf .PdfAnnotation =_fbgd ;_fbgd .SetContext (_eaf );return _eaf ;};func _geaf (_ebaaa _adfb .PdfObject ,_gefgd bool )(*PdfFont ,error ){_deced ,_bebbc ,_bgefb :=_dfgg (_ebaaa );
if _deced !=nil {_dbcee (_deced );};if _bgefb !=nil {if _bgefb ==ErrType1CFontNotSupported {_gdfga ,_daddb :=_daaee (_deced ,_bebbc ,nil );if _daddb !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bebbc ,_daddb );
return nil ,_bgefb ;};return &PdfFont {_gdcf :_gdfga },_bgefb ;};return nil ,_bgefb ;};_bddf :=&PdfFont {};switch _bebbc ._bbbdc {case "\u0054\u0079\u0070e\u0030":if !_gefgd {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bebbc );
return nil ,_cfe .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_cccd ,_bfag :=_fdfcb (_deced ,_bebbc );if _bfag !=nil {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bebbc ,_bfag );
return nil ,_bfag ;};_bddf ._gdcf =_cccd ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _gebebg *pdfFontSimple ;_bdcd ,_edfc :=_ga .NewStdFontByName (_ga .StdFontName (_bebbc ._gbed ));
if _edfc {_aceeg :=_agbb (_bdcd );_bddf ._gdcf =&_aceeg ;_dgbd :=_adfb .TraceToDirectObject (_aceeg .ToPdfObject ());_aaee ,_dgdf ,_egbff :=_dfgg (_dgbd );if _egbff !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bebbc ,_aceeg );
return nil ,_egbff ;};for _ ,_bgad :=range _deced .Keys (){_aaee .Set (_bgad ,_deced .Get (_bgad ));};_gebebg ,_egbff =_daaee (_aaee ,_dgdf ,_aceeg ._dcef );if _egbff !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bebbc ,_aceeg );
return nil ,_egbff ;};_gebebg ._babf =_aceeg ._babf ;_gebebg ._gcbae =_aceeg ._gcbae ;if _gebebg ._aded ==nil {_gebebg ._aded =_aceeg ._aded ;};}else {_gebebg ,_bgefb =_daaee (_deced ,_bebbc ,nil );if _bgefb !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bebbc ,_bgefb );
return nil ,_bgefb ;};};_bgefb =_gebebg .addEncoding ();if _bgefb !=nil {return nil ,_bgefb ;};if _edfc {_gebebg .updateStandard14Font ();};if _edfc &&_gebebg ._ddabe ==nil &&_gebebg ._dcef ==nil {_bef .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gebebg );
_bef .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_bdcd );};if len (_gebebg ._babf )==0{_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_gebebg );};_bddf ._gdcf =_gebebg ;
case "\u0054\u0079\u0070e\u0033":_bcag ,_dfdga :=_gafcd (_deced ,_bebbc );if _dfdga !=nil {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_dfdga );
return nil ,_dfdga ;};_bddf ._gdcf =_bcag ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ffefg ,_bcefe :=_fbab (_deced ,_bebbc );if _bcefe !=nil {_bef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bcefe );
return nil ,_bcefe ;};_bddf ._gdcf =_ffefg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cfcd ,_eeagd :=_fgcada (_deced ,_bebbc );if _eeagd !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bebbc ,_eeagd );
return nil ,_eeagd ;};_bddf ._gdcf =_cfcd ;default:_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bebbc );
return nil ,_ad .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bebbc );};return _bddf ,nil ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_babg *PdfColorCalGray )GetNumComponents ()int {return 1};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_bccb _gb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_dfcda _ade .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_egfad _ade .Image )(*Image ,error );

// Compress an image.
Compress (_eebgg *Image ,_fddda int64 )(*Image ,error );};func _ebaa (_acab *_adfb .PdfObjectDictionary )bool {for _ ,_fbgdb :=range _acab .Keys (){if _ ,_gada :=_ebed [_fbgdb .String ()];_gada {return true ;};};return false ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_cccb :=NewPdfAnnotation ();_cba :=&PdfAnnotationUnderline {};_cba .PdfAnnotation =_cccb ;_cba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cccb .SetContext (_cba );return _cba ;};func (_gagg *PdfSignature )extractChainFromCert ()([]*_adf .Certificate ,error ){var _cdcge *_adfb .PdfObjectArray ;
switch _aggaab :=_gagg .Cert .(type ){case *_adfb .PdfObjectString :_cdcge =_adfb .MakeArray (_aggaab );case *_adfb .PdfObjectArray :_cdcge =_aggaab ;default:return nil ,_ad .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_aggaab );
};var _bcfag _ae .Buffer ;for _ ,_bedd :=range _cdcge .Elements (){_fddcd ,_dbbg :=_adfb .GetString (_bedd );if !_dbbg {return nil ,_ad .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_bedd );
};if _ ,_acfgf :=_bcfag .Write (_fddcd .Bytes ());_acfgf !=nil {return nil ,_acfgf ;};};return _adf .ParseCertificates (_bcfag .Bytes ());};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_gdeef :=&PdfOutlineItem {_baeee :_adfb .MakeIndirectObject (_adfb .MakeDict ())};_gdeef ._ddddf =_gdeef ;return _gdeef ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_cea :=NewPdfAction ();_dbb :=&PdfActionRendition {};_dbb .PdfAction =_cea ;_cea .SetContext (_dbb );return _dbb ;};

// ToPdfObject implements interface PdfModel.
func (_aebd *PdfAnnotationHighlight )ToPdfObject ()_adfb .PdfObject {_aebd .PdfAnnotation .ToPdfObject ();_dcc :=_aebd ._ged ;_aad :=_dcc .PdfObject .(*_adfb .PdfObjectDictionary );_aebd .PdfAnnotationMarkup .appendToPdfDictionary (_aad );_aad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_aad .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aebd .QuadPoints );return _dcc ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_ede :=&PdfAnnotation {};_ede ._ged =_adfb .MakeIndirectObject (_adfb .MakeDict ());return _ede ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_abffg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_adfb .StreamEncoder ,error ){_deegd ,_eagcg :=_abffg ._fcgcb .(*_adfb .PdfObjectStream );if !_eagcg {_bef .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abffg ._fcgcb );
return nil ,nil ,_adfb .ErrTypeError ;};_defb ,_bgeef :=_adfb .DecodeStream (_deegd );if _bgeef !=nil {_bef .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_bgeef );
return nil ,nil ,_bgeef ;};_gfad ,_bgeef :=_adfb .NewEncoderFromStream (_deegd );if _bgeef !=nil {_bef .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bgeef );
return nil ,nil ,_bgeef ;};return _defb ,_gfad ,nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _adfb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_adfb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_aadfa ,_caaaf :=encoder .EncodeBytes (img .Data );
if _caaaf !=nil {_bef .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_caaaf );return nil ,_caaaf ;};_cefdb :=NewXObjectImage ();_acbed :=img .Width ;_dfgfb :=img .Height ;
_cefdb .Width =&_acbed ;_cefdb .Height =&_dfgfb ;_gdfae :=img .BitsPerComponent ;_cefdb .BitsPerComponent =&_gdfae ;_cefdb .Filter =encoder ;_cefdb .Stream =_aadfa ;if cs ==nil {if img .ColorComponents ==1{_cefdb .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_cefdb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_cefdb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_cfe .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_cefdb .ColorSpace =cs ;};if len (img ._befaf )!=0{_ccdca :=NewXObjectImage ();_ccdca .Filter =encoder ;_cdbaaf ,_ecaa :=encoder .EncodeBytes (img ._befaf );if _ecaa !=nil {_bef .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ecaa );
return nil ,_ecaa ;};_ccdca .Stream =_cdbaaf ;_ccdca .BitsPerComponent =_cefdb .BitsPerComponent ;_ccdca .Width =&img .Width ;_ccdca .Height =&img .Height ;_ccdca .ColorSpace =NewPdfColorspaceDeviceGray ();_cefdb .SMask =_ccdca .ToPdfObject ();}else {_cefdb .SMask =xobjIn .SMask ;
_cefdb .ImageMask =xobjIn .ImageMask ;if _cefdb .ColorSpace .GetNumComponents ()==1{_ggeec (_cefdb );};};return _cefdb ,nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_ffeef :=NewPdfAnnotation ();_acd :=&PdfAnnotationStrikeOut {};_acd .PdfAnnotation =_ffeef ;_acd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffeef .SetContext (_acd );return _acd ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_cegf ,_cgcd :=_ga .NewStdFontByName (HelveticaName );if !_cgcd {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_fdfab :=_agbb (_cegf );return &PdfFont {_gdcf :&_fdfab };};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ccecf *PdfFontDescriptor )ToPdfObject ()_adfb .PdfObject {_ecgge :=_adfb .MakeDict ();if _ccecf ._dbgdb ==nil {_ccecf ._dbgdb =&_adfb .PdfIndirectObject {};};_ccecf ._dbgdb .PdfObject =_ecgge ;_ecgge .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _ccecf .FontName !=nil {_ecgge .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ccecf .FontName );};if _ccecf .FontFamily !=nil {_ecgge .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ccecf .FontFamily );};if _ccecf .FontStretch !=nil {_ecgge .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ccecf .FontStretch );
};if _ccecf .FontWeight !=nil {_ecgge .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ccecf .FontWeight );};if _ccecf .Flags !=nil {_ecgge .Set ("\u0046\u006c\u0061g\u0073",_ccecf .Flags );};if _ccecf .FontBBox !=nil {_ecgge .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ccecf .FontBBox );
};if _ccecf .ItalicAngle !=nil {_ecgge .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ccecf .ItalicAngle );};if _ccecf .Ascent !=nil {_ecgge .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ccecf .Ascent );};if _ccecf .Descent !=nil {_ecgge .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ccecf .Descent );
};if _ccecf .Leading !=nil {_ecgge .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ccecf .Leading );};if _ccecf .CapHeight !=nil {_ecgge .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ccecf .CapHeight );};if _ccecf .XHeight !=nil {_ecgge .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ccecf .XHeight );
};if _ccecf .StemV !=nil {_ecgge .Set ("\u0053\u0074\u0065m\u0056",_ccecf .StemV );};if _ccecf .StemH !=nil {_ecgge .Set ("\u0053\u0074\u0065m\u0048",_ccecf .StemH );};if _ccecf .AvgWidth !=nil {_ecgge .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ccecf .AvgWidth );
};if _ccecf .MaxWidth !=nil {_ecgge .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ccecf .MaxWidth );};if _ccecf .MissingWidth !=nil {_ecgge .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ccecf .MissingWidth );};
if _ccecf .FontFile !=nil {_ecgge .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ccecf .FontFile );};if _ccecf .FontFile2 !=nil {_ecgge .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ccecf .FontFile2 );};if _ccecf .FontFile3 !=nil {_ecgge .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ccecf .FontFile3 );
};if _ccecf .CharSet !=nil {_ecgge .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ccecf .CharSet );};if _ccecf .Style !=nil {_ecgge .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ccecf .FontName );};if _ccecf .Lang !=nil {_ecgge .Set ("\u004c\u0061\u006e\u0067",_ccecf .Lang );
};if _ccecf .FD !=nil {_ecgge .Set ("\u0046\u0044",_ccecf .FD );};if _ccecf .CIDSet !=nil {_ecgge .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ccecf .CIDSet );};return _ccecf ._dbgdb ;};

// GetNumComponents returns the number of color components.
func (_ddfb *PdfColorspaceICCBased )GetNumComponents ()int {return _ddfb .N };func _ceeeb (_ecdcg _adfb .PdfObject )[]*_adfb .PdfObjectStream {if _ecdcg ==nil {return nil ;};_bfafaa ,_fefabd :=_adfb .GetArray (_ecdcg );if !_fefabd ||_bfafaa .Len ()==0{return nil ;
};_gbaee :=make ([]*_adfb .PdfObjectStream ,0,_bfafaa .Len ());for _ ,_gccda :=range _bfafaa .Elements (){if _fbaga ,_debbd :=_adfb .GetStream (_gccda );_debbd {_gbaee =append (_gbaee ,_fbaga );};};return _gbaee ;};func _dbdda (_decde *_adfb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ccabd :=PdfShadingType1 {};
if _begdb :=_decde .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_begdb !=nil {_begdb =_adfb .TraceToDirectObject (_begdb );_ddeedf ,_eaace :=_begdb .(*_adfb .PdfObjectArray );if !_eaace {_bef .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_begdb );
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ccabd .Domain =_ddeedf ;};if _defbb :=_decde .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_defbb !=nil {_defbb =_adfb .TraceToDirectObject (_defbb );
_cgbc ,_fgggb :=_defbb .(*_adfb .PdfObjectArray );if !_fgggb {_bef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_defbb );return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ccabd .Matrix =_cgbc ;};_afbdb :=_decde .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _afbdb ==nil {_bef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ccabd .Function =[]PdfFunction {};if _bfcebe ,_acagf :=_afbdb .(*_adfb .PdfObjectArray );_acagf {for _ ,_eebbf :=range _bfcebe .Elements (){_cdeeg ,_cfced :=_ebba (_eebbf );if _cfced !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfced );
return nil ,_cfced ;};_ccabd .Function =append (_ccabd .Function ,_cdeeg );};}else {_cafc ,_cfeg :=_ebba (_afbdb );if _cfeg !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfeg );
return nil ,_cfeg ;};_ccabd .Function =append (_ccabd .Function ,_cafc );};return &_ccabd ,nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_bdg :=NewPdfAction ();_fdc :=&PdfActionSubmitForm {};_fdc .PdfAction =_bdg ;_bdg .SetContext (_fdc );return _fdc ;};func (_fcagc *PdfWriter )seekByName (_cbbf _adfb .PdfObject ,_acbdb []string ,_cgcbe string )([]_adfb .PdfObject ,error ){_bef .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_cbbf );
var _afaad []_adfb .PdfObject ;if _cdfgb ,_agabd :=_cbbf .(*_adfb .PdfIndirectObject );_agabd {return _fcagc .seekByName (_cdfgb .PdfObject ,_acbdb ,_cgcbe );};if _bcffge ,_ffgbc :=_cbbf .(*_adfb .PdfObjectStream );_ffgbc {return _fcagc .seekByName (_bcffge .PdfObjectDictionary ,_acbdb ,_cgcbe );
};if _gfdbg ,_bcdeg :=_cbbf .(*_adfb .PdfObjectDictionary );_bcdeg {_bef .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_baba :=range _gfdbg .Keys (){_fdgff :=_gfdbg .Get (_baba );if string (_baba )==_cgcbe {_afaad =append (_afaad ,_fdgff );};for _ ,_cdgee :=range _acbdb {if string (_baba )==_cdgee {_bef .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_cdgee );
_eeff ,_fabb :=_fcagc .seekByName (_fdgff ,_acbdb ,_cgcbe );if _fabb !=nil {return _afaad ,_fabb ;};_afaad =append (_afaad ,_eeff ...);break ;};};};return _afaad ,nil ;};return _afaad ,nil ;};func (_afgag *PdfWriter )writeOutlines ()error {if _afgag ._aaabd ==nil {return nil ;
};_bef .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_afgag ._aaabd );_cdedb :=_afgag ._aaabd .ToPdfObject ();_bef .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_cdedb ,_cdedb ,_cdedb );
_afgag ._bcdaf .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_cdedb );_aeada :=_afgag .addObjects (_cdedb );if _aeada !=nil {return _aeada ;};return nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func (_fgfae *PdfReader )newPdfAnnotationTrapNetFromDict (_cae *_adfb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_bgcg :=PdfAnnotationTrapNet {};return &_bgcg ,nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _adfb .PdfObject ;IsMap _adfb .PdfObject ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_fbfd *pdfCIDFontType2 )ToPdfObject ()_adfb .PdfObject {if _fbfd ._bfgge ==nil {_fbfd ._bfgge =&_adfb .PdfIndirectObject {};};_fff :=_fbfd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_fbfd ._bfgge .PdfObject =_fff ;if _fbfd .CIDSystemInfo !=nil {_fff .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_fbfd .CIDSystemInfo );};if _fbfd .DW !=nil {_fff .Set ("\u0044\u0057",_fbfd .DW );};if _fbfd .DW2 !=nil {_fff .Set ("\u0044\u0057\u0032",_fbfd .DW2 );
};if _fbfd .W !=nil {_fff .Set ("\u0057",_fbfd .W );};if _fbfd .W2 !=nil {_fff .Set ("\u0057\u0032",_fbfd .W2 );};if _fbfd .CIDToGIDMap !=nil {_fff .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_fbfd .CIDToGIDMap );};return _fbfd ._bfgge ;
};

// GetContentStream returns the XObject Form's content stream.
func (_bfbe *XObjectForm )GetContentStream ()([]byte ,error ){_ebgabb ,_befcg :=_adfb .DecodeStream (_bfbe ._ddcaaa );if _befcg !=nil {return nil ,_befcg ;};return _ebgabb ,nil ;};

// Encoder returns the font's text encoder.
func (_eebd pdfFontType0 )Encoder ()_ba .TextEncoder {return _eebd ._bcdga };

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_dcdd *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eddf :=vals [0];if _eddf < 0.0||_eddf > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eddf );
return nil ,ErrColorOutOfRange ;};_fdfc :=vals [1];if _fdfc < 0.0||_fdfc > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fdfc );return nil ,ErrColorOutOfRange ;
};_gacf :=vals [2];if _gacf < 0.0||_gacf > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gacf );return nil ,ErrColorOutOfRange ;};_gegc :=vals [3];
if _gegc < 0.0||_gegc > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gegc );return nil ,ErrColorOutOfRange ;};_fcdad :=NewPdfColorDeviceCMYK (_eddf ,_fdfc ,_gacf ,_gegc );
return _fcdad ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);func (_babd *PdfWriter )writeObject (_dggfb int ,_bcffc _adfb .PdfObject ){_bef .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_dggfb );
if _cecgd ,_gbaf :=_bcffc .(*_adfb .PdfIndirectObject );_gbaf {_babd ._aaead [_dggfb ]=crossReference {Type :1,Offset :_babd ._dgbga ,Generation :_cecgd .GenerationNumber };_ecefec :=_ad .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dggfb );
if _gafad ,_agad :=_cecgd .PdfObject .(*pdfSignDictionary );_agad {_gafad ._daeba =_babd ._dgbga +int64 (len (_ecefec ));};if _cecgd .PdfObject ==nil {_bef .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_cecgd .PdfObject =_adfb .MakeNull ();};_ecefec +=_cecgd .PdfObject .WriteString ();_ecefec +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_babd .writeString (_ecefec );return ;};if _gfede ,_bdeee :=_bcffc .(*_adfb .PdfObjectStream );_bdeee {_babd ._aaead [_dggfb ]=crossReference {Type :1,Offset :_babd ._dgbga ,Generation :_gfede .GenerationNumber };
_ffacba :=_ad .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dggfb );_ffacba +=_gfede .PdfObjectDictionary .WriteString ();_ffacba +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_babd .writeString (_ffacba );_babd .writeBytes (_gfede .Stream );
_babd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _ffgag ,_ebege :=_bcffc .(*_adfb .PdfObjectStreams );_ebege {_babd ._aaead [_dggfb ]=crossReference {Type :1,Offset :_babd ._dgbga ,Generation :_ffgag .GenerationNumber };
_gadfec :=_ad .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dggfb );var _dcbaa []string ;var _ddba string ;var _eebc int64 ;for _bcbeg ,_bdeea :=range _ffgag .Elements (){_dbdab ,_cade :=_bdeea .(*_adfb .PdfIndirectObject );if !_cade {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_dggfb ,_bdeea );
continue ;};_ecgdb :=_dbdab .PdfObject .WriteString ()+"\u0020";_ddba =_ddba +_ecgdb ;_dcbaa =append (_dcbaa ,_ad .Sprintf ("\u0025\u0064\u0020%\u0064",_dbdab .ObjectNumber ,_eebc ));_babd ._aaead [int (_dbdab .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_dggfb ,Index :_bcbeg };
_eebc =_eebc +int64 (len ([]byte (_ecgdb )));};_gdeed :=_be .Join (_dcbaa ,"\u0020")+"\u0020";_aefba :=_adfb .NewFlateEncoder ();_dfacc :=_aefba .MakeStreamDict ();_dfacc .Set (_adfb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_adfb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_gecff :=int64 (_ffgag .Len ());_dfacc .Set (_adfb .PdfObjectName ("\u004e"),_adfb .MakeInteger (_gecff ));_abdgc :=int64 (len (_gdeed ));_dfacc .Set (_adfb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_adfb .MakeInteger (_abdgc ));_dcabb ,_ :=_aefba .EncodeBytes ([]byte (_gdeed +_ddba ));
_cfabf :=int64 (len (_dcabb ));_dfacc .Set (_adfb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_adfb .MakeInteger (_cfabf ));_gadfec +=_dfacc .WriteString ();_gadfec +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_babd .writeString (_gadfec );
_babd .writeBytes (_dcabb );_babd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_babd .writeString (_bcffc .WriteString ());};func (_gdce *PdfReader )newPdfAnnotationMovieFromDict (_dde *_adfb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_baga :=PdfAnnotationMovie {};
_baga .T =_dde .Get ("\u0054");_baga .Movie =_dde .Get ("\u004d\u006f\u0076i\u0065");_baga .A =_dde .Get ("\u0041");return &_baga ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// GetContainingPdfObject implements interface PdfModel.
func (_adbd *PdfAnnotation )GetContainingPdfObject ()_adfb .PdfObject {return _adbd ._ged };

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gfedf *PdfShading )GetContext ()PdfModel {return _gfedf ._fcedf };

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_effc pdfFontSimple )GetCharMetrics (code _ba .CharCode )(_ga .CharMetrics ,bool ){if _dbga ,_gdebe :=_effc ._babf [code ];_gdebe {return _ga .CharMetrics {Wx :_dbga },true ;};if _ga .IsStdFont (_ga .StdFontName (_effc ._gbed )){return _ga .CharMetrics {Wx :250},true ;
};return _ga .CharMetrics {},false ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_fbbbaf *PdfPage )GetContentStreamObjs ()[]_adfb .PdfObject {if _fbbbaf .Contents ==nil {return nil ;};_agebf :=_adfb .TraceToDirectObject (_fbbbaf .Contents );if _eggfb ,_dafcd :=_agebf .(*_adfb .PdfObjectArray );_dafcd {return _eggfb .Elements ();
};return []_adfb .PdfObject {_agebf };};func (_daace *PdfReader )newPdfAnnotationCircleFromDict (_egdg *_adfb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_gcdd :=PdfAnnotationCircle {};_fag ,_begc :=_daace .newPdfAnnotationMarkupFromDict (_egdg );
if _begc !=nil {return nil ,_begc ;};_gcdd .PdfAnnotationMarkup =_fag ;_gcdd .BS =_egdg .Get ("\u0042\u0053");_gcdd .IC =_egdg .Get ("\u0049\u0043");_gcdd .BE =_egdg .Get ("\u0042\u0045");_gcdd .RD =_egdg .Get ("\u0052\u0044");return &_gcdd ,nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_deafgf *PdfPageResources )GetShadingByName (keyName _adfb .PdfObjectName )(*PdfShading ,bool ){if _deafgf .Shading ==nil {return nil ,false ;};_dfbag ,_gdbdc :=_adfb .TraceToDirectObject (_deafgf .Shading ).(*_adfb .PdfObjectDictionary );if !_gdbdc {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_deafgf .Shading );
return nil ,false ;};if _ffcda :=_dfbag .Get (keyName );_ffcda !=nil {_agfa ,_ebec :=_eaefe (_ffcda );if _ebec !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_ebec );
return nil ,false ;};return _agfa ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_fef *PdfAnnotationPrinterMark )ToPdfObject ()_adfb .PdfObject {_fef .PdfAnnotation .ToPdfObject ();_aeae :=_fef ._ged ;_bfab :=_aeae .PdfObject .(*_adfb .PdfObjectDictionary );_bfab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_bfab .SetIfNotNil ("\u004d\u004e",_fef .MN );return _aeae ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_adfb .PdfParser ;DiffPolicy _dgb .DiffPolicy ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_cdgdde *PdfPageResources )GetColorspaceByName (keyName _adfb .PdfObjectName )(PdfColorspace ,bool ){_gdbg ,_acaba :=_cdgdde .GetColorspaces ();if _acaba !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_acaba );
return nil ,false ;};if _gdbg ==nil {return nil ,false ;};_ecgbg ,_affddg :=_gdbg .Colorspaces [string (keyName )];if !_affddg {return nil ,false ;};return _ecgbg ,true ;};

// ToPdfObject implements model.PdfModel interface.
func (_fgbdf *PdfOutputIntent )ToPdfObject ()_adfb .PdfObject {if _fgbdf ._becg ==nil {_fgbdf ._becg =_adfb .MakeDict ();};_bbfd :=_fgbdf ._becg ;if _fgbdf .Type !=""{_bbfd .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName (_fgbdf .Type ));};_bbfd .Set ("\u0053",_adfb .MakeName (_fgbdf .S .String ()));
if _fgbdf .OutputCondition !=""{_bbfd .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_adfb .MakeString (_fgbdf .OutputCondition ));};_bbfd .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_adfb .MakeString (_fgbdf .OutputConditionIdentifier ));
_bbfd .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_adfb .MakeString (_fgbdf .RegistryName ));if _fgbdf .Info !=""{_bbfd .Set ("\u0049\u006e\u0066\u006f",_adfb .MakeString (_fgbdf .Info ));};if len (_fgbdf .DestOutputProfile )!=0{_decec ,_bcebd :=_adfb .MakeStream (_fgbdf .DestOutputProfile ,_adfb .NewFlateEncoder ());
if _bcebd !=nil {_bef .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bcebd );
};_decec .PdfObjectDictionary .Set ("\u004e",_adfb .MakeInteger (int64 (_fgbdf .ColorComponents )));_eegg :=make ([]float64 ,_fgbdf .ColorComponents *2);for _dfaaf :=0;_dfaaf < _fgbdf .ColorComponents *2;_dfaaf ++{_dgda :=0.0;if _dfaaf %2!=0{_dgda =1.0;
};_eegg [_dfaaf ]=_dgda ;};_decec .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_adfb .MakeArrayFromFloats (_eegg ));_bbfd .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_decec );};return _bbfd ;
};func (_gfda *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gfda ._ebcbf ==nil &&_gfda .DescendantFont !=nil {return _gfda .DescendantFont .FontDescriptor ();};return _gfda ._ebcbf ;};

// ToPdfObject implements interface PdfModel.
func (_ggbf *PdfAnnotationCircle )ToPdfObject ()_adfb .PdfObject {_ggbf .PdfAnnotation .ToPdfObject ();_facg :=_ggbf ._ged ;_acfa :=_facg .PdfObject .(*_adfb .PdfObjectDictionary );_ggbf .PdfAnnotationMarkup .appendToPdfDictionary (_acfa );_acfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_acfa .SetIfNotNil ("\u0042\u0053",_ggbf .BS );_acfa .SetIfNotNil ("\u0049\u0043",_ggbf .IC );_acfa .SetIfNotNil ("\u0042\u0045",_ggbf .BE );_acfa .SetIfNotNil ("\u0052\u0044",_ggbf .RD );return _facg ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _adfb .PdfObject ;MK _adfb .PdfObject ;A _adfb .PdfObject ;AA _adfb .PdfObject ;BS _adfb .PdfObject ;Parent _adfb .PdfObject ;_bbea *PdfField ;_bdc bool ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_ddddf interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ebae pdfFontType3 )GetCharMetrics (code _ba .CharCode )(_ga .CharMetrics ,bool ){if _eaee ,_bdac :=_ebae ._fgfb [code ];_bdac {return _ga .CharMetrics {Wx :_eaee },true ;};if _ga .IsStdFont (_ga .StdFontName (_ebae ._gbed )){return _ga .CharMetrics {Wx :250},true ;
};return _ga .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_ec *PdfActionThread )ToPdfObject ()_adfb .PdfObject {_ec .PdfAction .ToPdfObject ();_edd :=_ec ._ca ;_ddbe :=_edd .PdfObject .(*_adfb .PdfObjectDictionary );_ddbe .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeThread )));if _ec .F !=nil {_ddbe .Set ("\u0046",_ec .F .ToPdfObject ());
};_ddbe .SetIfNotNil ("\u0044",_ec .D );_ddbe .SetIfNotNil ("\u0042",_ec .B );return _edd ;};func (_efff *PdfReader )newPdfActionGotoRFromDict (_afd *_adfb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bbf ,_bgcd :=_fda (_afd .Get ("\u0046"));if _bgcd !=nil {return nil ,_bgcd ;
};return &PdfActionGoToR {D :_afd .Get ("\u0044"),NewWindow :_afd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bbf },nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_daccf *_adfb .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ffab *PdfActionURI )ToPdfObject ()_adfb .PdfObject {_ffab .PdfAction .ToPdfObject ();_cag :=_ffab ._ca ;_gd :=_cag .PdfObject .(*_adfb .PdfObjectDictionary );_gd .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeURI )));_gd .SetIfNotNil ("\u0055\u0052\u0049",_ffab .URI );
_gd .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ffab .IsMap );return _cag ;};func (_aggf *PdfReader )newPdfAnnotationFreeTextFromDict (_dbge *_adfb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_cfed :=PdfAnnotationFreeText {};_bcf ,_gfgd :=_aggf .newPdfAnnotationMarkupFromDict (_dbge );
if _gfgd !=nil {return nil ,_gfgd ;};_cfed .PdfAnnotationMarkup =_bcf ;_cfed .DA =_dbge .Get ("\u0044\u0041");_cfed .Q =_dbge .Get ("\u0051");_cfed .RC =_dbge .Get ("\u0052\u0043");_cfed .DS =_dbge .Get ("\u0044\u0053");_cfed .CL =_dbge .Get ("\u0043\u004c");
_cfed .IT =_dbge .Get ("\u0049\u0054");_cfed .BE =_dbge .Get ("\u0042\u0045");_cfed .RD =_dbge .Get ("\u0052\u0044");_cfed .BS =_dbge .Get ("\u0042\u0053");_cfed .LE =_dbge .Get ("\u004c\u0045");return &_cfed ,nil ;};func _agbb (_gbabe _ga .StdFont )pdfFontSimple {_dgbf :=_gbabe .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_bbbdc :"\u0054\u0079\u0070e\u0031",_gbed :_gbabe .Name ()},_gcbae :_gbabe .GetMetricsTable (),_aded :&PdfFontDescriptor {FontName :_adfb .MakeName (string (_dgbf .Name )),FontFamily :_adfb .MakeName (_dgbf .Family ),FontWeight :_adfb .MakeFloat (float64 (_dgbf .Weight )),Flags :_adfb .MakeInteger (int64 (_dgbf .Flags )),FontBBox :_adfb .MakeArrayFromFloats (_dgbf .BBox [:]),ItalicAngle :_adfb .MakeFloat (_dgbf .ItalicAngle ),Ascent :_adfb .MakeFloat (_dgbf .Ascent ),Descent :_adfb .MakeFloat (_dgbf .Descent ),CapHeight :_adfb .MakeFloat (_dgbf .CapHeight ),XHeight :_adfb .MakeFloat (_dgbf .XHeight ),StemV :_adfb .MakeFloat (_dgbf .StemV ),StemH :_adfb .MakeFloat (_dgbf .StemH )},_dcef :_gbabe .Encoder ()};
};type pdfFontType0 struct{fontCommon ;_gfde *_adfb .PdfIndirectObject ;_bcdga _ba .TextEncoder ;Encoding _adfb .PdfObject ;DescendantFont *PdfFont ;_cagfdd *_bfa .CMap ;};func (_ecce *PdfReader )loadStructure ()error {if _ecce ._aeea .GetCrypter ()!=nil &&!_ecce ._aeea .IsAuthenticated (){return _ad .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fffd :=_ecce ._aeea .GetTrailer ();if _fffd ==nil {return _ad .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gaaga ,_eeeebf :=_fffd .Get ("\u0052\u006f\u006f\u0074").(*_adfb .PdfObjectReference );if !_eeeebf {return _ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_fffd );
};_aggcb ,_eagfd :=_ecce ._aeea .LookupByReference (*_gaaga );if _eagfd !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eagfd );
return _eagfd ;};_dfdaa ,_eeeebf :=_aggcb .(*_adfb .PdfIndirectObject );if !_eeeebf {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_aggcb ,*_fffd );
return _cfe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cefg ,_eeeebf :=(*_dfdaa ).PdfObject .(*_adfb .PdfObjectDictionary );if !_eeeebf {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_dfdaa .PdfObject );
return _cfe .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bef .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cefg );_dgddbc ,_eeeebf :=_cefg .Get ("\u0050\u0061\u0067e\u0073").(*_adfb .PdfObjectReference );
if !_eeeebf {return _cfe .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_cdffc ,_eagfd :=_ecce ._aeea .LookupByReference (*_dgddbc );
if _eagfd !=nil {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _eagfd ;};_eefb ,_eeeebf :=_cdffc .(*_adfb .PdfIndirectObject );if !_eeeebf {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_bef .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_eefb );return _cfe .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ageaf ,_eeeebf :=_eefb .PdfObject .(*_adfb .PdfObjectDictionary );if !_eeeebf {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_eefb );
return _cfe .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_abacb ,_eeeebf :=_adfb .GetInt (_ageaf .Get ("\u0043\u006f\u0075n\u0074"));if !_eeeebf {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _cfe .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_eeeebf =_adfb .GetName (_ageaf .Get ("\u0054\u0079\u0070\u0065"));!_eeeebf {_bef .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_ageaf .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0050\u0061\u0067e\u0073"));};if _egfgf ,_gcfdf :=_adfb .GetInt (_ageaf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_gcfdf {_dgcfb :=int64 (*_egfgf );_ecce .Rotate =&_dgcfb ;};_ecce ._gdgdc =_gaaga ;
_ecce ._egeag =_cefg ;_ecce ._efgdb =_ageaf ;_ecce ._cbba =_eefb ;_ecce ._cgage =int (*_abacb );_ecce ._fccad =[]*_adfb .PdfIndirectObject {};_gfbbd :=map[_adfb .PdfObject ]struct{}{};_eagfd =_ecce .buildPageList (_eefb ,nil ,_gfbbd );if _eagfd !=nil {return _eagfd ;
};_bef .Log .Trace ("\u002d\u002d\u002d");_bef .Log .Trace ("\u0054\u004f\u0043");_bef .Log .Trace ("\u0050\u0061\u0067e\u0073");_bef .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ecce ._fccad ),_ecce ._fccad );_ecce ._fdcgb ,_eagfd =_ecce .loadOutlines ();
if _eagfd !=nil {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_eagfd );
return _eagfd ;};_ecce .AcroForm ,_eagfd =_ecce .loadForms ();if _eagfd !=nil {return _eagfd ;};_ecce .DSS ,_eagfd =_ecce .loadDSS ();if _eagfd !=nil {return _eagfd ;};_ecce ._bfced ,_eagfd =_ecce .loadPerms ();if _eagfd !=nil {return _eagfd ;};return nil ;
};

// ToPdfObject returns the PDF representation of the function.
func (_efdg *PdfFunctionType2 )ToPdfObject ()_adfb .PdfObject {_cbbcc :=_adfb .MakeDict ();_cbbcc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_adfb .MakeInteger (2));_ggggb :=&_adfb .PdfObjectArray {};for _ ,_cgaa :=range _efdg .Domain {_ggggb .Append (_adfb .MakeFloat (_cgaa ));
};_cbbcc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ggggb );if _efdg .Range !=nil {_acdac :=&_adfb .PdfObjectArray {};for _ ,_babfe :=range _efdg .Range {_acdac .Append (_adfb .MakeFloat (_babfe ));};_cbbcc .Set ("\u0052\u0061\u006eg\u0065",_acdac );
};if _efdg .C0 !=nil {_dbdd :=&_adfb .PdfObjectArray {};for _ ,_dfeb :=range _efdg .C0 {_dbdd .Append (_adfb .MakeFloat (_dfeb ));};_cbbcc .Set ("\u0043\u0030",_dbdd );};if _efdg .C1 !=nil {_faggg :=&_adfb .PdfObjectArray {};for _ ,_agebc :=range _efdg .C1 {_faggg .Append (_adfb .MakeFloat (_agebc ));
};_cbbcc .Set ("\u0043\u0031",_faggg );};_cbbcc .Set ("\u004e",_adfb .MakeFloat (_efdg .N ));if _efdg ._cfcdc !=nil {_efdg ._cfcdc .PdfObject =_cbbcc ;return _efdg ._cfcdc ;};return _cbbcc ;};func _bbeb (_bdbga _adfb .PdfObject )(map[_ba .CharCode ]float64 ,error ){if _bdbga ==nil {return nil ,nil ;
};_baae ,_dedf :=_adfb .GetArray (_bdbga );if !_dedf {return nil ,nil ;};_dedfb :=map[_ba .CharCode ]float64 {};_bcbe :=_baae .Len ();for _dddbe :=0;_dddbe < _bcbe -1;_dddbe ++{_beeg :=_adfb .TraceToDirectObject (_baae .Get (_dddbe ));_acceg ,_gfbf :=_adfb .GetIntVal (_beeg );
if !_gfbf {return nil ,_ad .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dddbe ,_beeg );};_dddbe ++;if _dddbe > _bcbe -1{return nil ,_ad .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_baae );
};_facgf :=_adfb .TraceToDirectObject (_baae .Get (_dddbe ));switch _facgf .(type ){case *_adfb .PdfObjectArray :_dfbgc ,_ :=_adfb .GetArray (_facgf );if _cagga ,_aagaa :=_dfbgc .ToFloat64Array ();_aagaa ==nil {for _adgb :=0;_adgb < len (_cagga );_adgb ++{_dedfb [_ba .CharCode (_acceg +_adgb )]=_cagga [_adgb ];
};}else {return nil ,_ad .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dddbe ,_facgf );};case *_adfb .PdfObjectInteger :_bbab ,_gcag :=_adfb .GetIntVal (_facgf );
if !_gcag {return nil ,_ad .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dddbe ,_facgf );};_dddbe ++;if _dddbe > _bcbe -1{return nil ,_ad .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_baae );
};_acad :=_baae .Get (_dddbe );_fcag ,_dcae :=_adfb .GetNumberAsFloat (_acad );if _dcae !=nil {return nil ,_ad .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dddbe ,_acad );
};for _eebaa :=_acceg ;_eebaa <=_bbab ;_eebaa ++{_dedfb [_ba .CharCode (_eebaa )]=_fcag ;};default:return nil ,_ad .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dddbe ,_facgf );
};};return _dedfb ,nil ;};func (_caag *PdfReader )newPdfActionHideFromDict (_cg *_adfb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_cg .Get ("\u0054"),H :_cg .Get ("\u0048")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_ea *PdfActionGoToR )ToPdfObject ()_adfb .PdfObject {_ea .PdfAction .ToPdfObject ();_gaa :=_ea ._ca ;_ccgd :=_gaa .PdfObject .(*_adfb .PdfObjectDictionary );_ccgd .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeGoToR )));if _ea .F !=nil {_ccgd .Set ("\u0046",_ea .F .ToPdfObject ());
};_ccgd .SetIfNotNil ("\u0044",_ea .D );_ccgd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ea .NewWindow );return _gaa ;};func (_cace *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};func (_fggdc *PdfWriter )hasObject (_fegb _adfb .PdfObject )bool {_ ,_geeec :=_fggdc ._bfgf [_fegb ];return _geeec ;};func _cccfb ()string {_gebbe .Lock ();defer _gebbe .Unlock ();return _bafef };

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_eb *PdfAction )GetContext ()PdfModel {if _eb ==nil {return nil ;};return _eb ._beg ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gaafdc *PdfReader )GetPageLabels ()(_adfb .PdfObject ,error ){_bbfb :=_adfb .ResolveReference (_gaafdc ._egeag .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bbfb ==nil {return nil ,nil ;};if !_gaafdc ._ggdgc {_dfbged :=_gaafdc .traverseObjectData (_bbfb );
if _dfbged !=nil {return nil ,_dfbged ;};};return _bbfb ,nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_dacg *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _dacg ._egfg ==nil {_dacg ._egfg =_df .NewPSExecutor (_dacg .Program );};var _bgfge []_df .PSObject ;for _ ,_cfedb :=range xVec {_bgfge =append (_bgfge ,_df .MakeReal (_cfedb ));
};_gbdbd ,_dcdbd :=_dacg ._egfg .Execute (_bgfge );if _dcdbd !=nil {return nil ,_dcdbd ;};_afgg ,_dcdbd :=_df .PSObjectArrayToFloat64Array (_gbdbd );if _dcdbd !=nil {return nil ,_dcdbd ;};return _afgg ,nil ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_bgbdd *PdfWriter )SetOpenAction (dest _adfb .PdfObject )error {if dest ==nil ||_adfb .IsNullObject (dest ){return nil ;};_bgbdd ._bcdaf .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _bgbdd .addObjects (dest );
};

// ToInteger convert to an integer format.
func (_baf *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_bgef :=_dc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bgef *_baf .A ()),uint32 (_bgef *_baf .B ()),uint32 (_bgef *_baf .C ())};};

// ToPdfObject implements interface PdfModel.
func (_gggg *PdfFilespec )ToPdfObject ()_adfb .PdfObject {_feba :=_gggg .getDict ();_feba .Clear ();_feba .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_feba .SetIfNotNil ("\u0046\u0053",_gggg .FS );
_feba .SetIfNotNil ("\u0046",_gggg .F );_feba .SetIfNotNil ("\u0055\u0046",_gggg .UF );_feba .SetIfNotNil ("\u0044\u004f\u0053",_gggg .DOS );_feba .SetIfNotNil ("\u004d\u0061\u0063",_gggg .Mac );_feba .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gggg .Unix );
_feba .SetIfNotNil ("\u0049\u0044",_gggg .ID );_feba .SetIfNotNil ("\u0056",_gggg .V );_feba .SetIfNotNil ("\u0045\u0046",_gggg .EF );_feba .SetIfNotNil ("\u0052\u0046",_gggg .RF );_feba .SetIfNotNil ("\u0044\u0065\u0073\u0063",_gggg .Desc );_feba .SetIfNotNil ("\u0043\u0049",_gggg .CI );
return _gggg ._ggeb ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_ffegf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _ffegf ._fagca !=nil {return _ffegf ._fagca ,nil ;};if _ffegf .Annots ==nil {_ffegf ._fagca =[]*PdfAnnotation {};return nil ,nil ;};if _ffegf ._bdbgg ==nil {_ffegf ._fagca =[]*PdfAnnotation {};
return nil ,nil ;};_ggec ,_gfdg :=_ffegf ._bdbgg .loadAnnotations (_ffegf .Annots );if _gfdg !=nil {return nil ,_gfdg ;};if _ggec ==nil {_ffegf ._fagca =[]*PdfAnnotation {};};_ffegf ._fagca =_ggec ;return _ffegf ._fagca ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ccee *PdfColorspaceLab )ToPdfObject ()_adfb .PdfObject {_fcdc :=_adfb .MakeArray ();_fcdc .Append (_adfb .MakeName ("\u004c\u0061\u0062"));_efea :=_adfb .MakeDict ();if _ccee .WhitePoint !=nil {_dace :=_adfb .MakeArray (_adfb .MakeFloat (_ccee .WhitePoint [0]),_adfb .MakeFloat (_ccee .WhitePoint [1]),_adfb .MakeFloat (_ccee .WhitePoint [2]));
_efea .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dace );}else {_bef .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _ccee .BlackPoint !=nil {_cgba :=_adfb .MakeArray (_adfb .MakeFloat (_ccee .BlackPoint [0]),_adfb .MakeFloat (_ccee .BlackPoint [1]),_adfb .MakeFloat (_ccee .BlackPoint [2]));_efea .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cgba );
};if _ccee .Range !=nil {_gdec :=_adfb .MakeArray (_adfb .MakeFloat (_ccee .Range [0]),_adfb .MakeFloat (_ccee .Range [1]),_adfb .MakeFloat (_ccee .Range [2]),_adfb .MakeFloat (_ccee .Range [3]));_efea .Set ("\u0052\u0061\u006eg\u0065",_gdec );};_fcdc .Append (_efea );
if _ccee ._ebdg !=nil {_ccee ._ebdg .PdfObject =_fcdc ;return _ccee ._ebdg ;};return _fcdc ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_aacfgd *modelManager )GetModelFromPrimitive (primitive _adfb .PdfObject )PdfModel {model ,_aaacc :=_aacfgd ._bccgd [primitive ];if !_aaacc {return nil ;};return model ;};

// ToPdfObject implements interface PdfModel.
func (_bfge *PdfAnnotationPolyLine )ToPdfObject ()_adfb .PdfObject {_bfge .PdfAnnotation .ToPdfObject ();_aegb :=_bfge ._ged ;_fcaf :=_aegb .PdfObject .(*_adfb .PdfObjectDictionary );_bfge .PdfAnnotationMarkup .appendToPdfDictionary (_fcaf );_fcaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_fcaf .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bfge .Vertices );_fcaf .SetIfNotNil ("\u004c\u0045",_bfge .LE );_fcaf .SetIfNotNil ("\u0042\u0053",_bfge .BS );_fcaf .SetIfNotNil ("\u0049\u0043",_bfge .IC );_fcaf .SetIfNotNil ("\u0042\u0045",_bfge .BE );
_fcaf .SetIfNotNil ("\u0049\u0054",_bfge .IT );_fcaf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bfge .Measure );return _aegb ;};func (_babbc *PdfWriter )setDocumentIDs (_daegf ,_aagfb string ){_babbc ._dafea =_adfb .MakeArray (_adfb .MakeHexString (_daegf ),_adfb .MakeHexString (_aagfb ));
};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bga .Permissions ;Algorithm EncryptionAlgorithm ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_ebge *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cefa ,_bbfce :=_adfb .GetNumbersAsFloat (objects );
if _bbfce !=nil {return nil ,_bbfce ;};return _ebge .ColorFromFloats (_cefa );};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_eacba :=PdfColorDeviceGray (grayVal );return &_eacba ;};func (_bfac *PdfAppender )mergeResources (_agb ,_gae _adfb .PdfObject ,_gbgdf map[_adfb .PdfObjectName ]_adfb .PdfObjectName )_adfb .PdfObject {if _gae ==nil &&_agb ==nil {return nil ;
};if _gae ==nil {return _agb ;};_cabef ,_fefc :=_adfb .GetDict (_gae );if !_fefc {return _agb ;};if _agb ==nil {_faaf :=_adfb .MakeDict ();_faaf .Merge (_cabef );return _gae ;};_ccfe ,_fefc :=_adfb .GetDict (_agb );if !_fefc {_bef .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_ccfe =_adfb .MakeDict ();};for _ ,_baeeb :=range _cabef .Keys (){if _gcbac ,_bcga :=_gbgdf [_baeeb ];_bcga {_ccfe .Set (_gcbac ,_cabef .Get (_baeeb ));}else {_ccfe .Set (_baeeb ,_cabef .Get (_baeeb ));};};return _ccfe ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_ecbfe *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_deee :=0.3*_ecbfe .R ()+0.59*_ecbfe .G ()+0.11*_ecbfe .B ();_deee =_dc .Min (_dc .Max (_deee ,0.0),1.0);return NewPdfColorDeviceGray (_deee );};

// ToPdfObject converts the font to a PDF representation.
func (_fgaf *pdfFontType3 )ToPdfObject ()_adfb .PdfObject {if _fgaf ._acadb ==nil {_fgaf ._acadb =&_adfb .PdfIndirectObject {};};_afdf :=_fgaf .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_fgaf ._acadb .PdfObject =_afdf ;if _fgaf .FirstChar !=nil {_afdf .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fgaf .FirstChar );
};if _fgaf .LastChar !=nil {_afdf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fgaf .LastChar );};if _fgaf .Widths !=nil {_afdf .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fgaf .Widths );};if _fgaf .Encoding !=nil {_afdf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fgaf .Encoding );
}else if _fgaf ._bcbgf !=nil {_bcace :=_fgaf ._bcbgf .ToPdfObject ();if _bcace !=nil {_afdf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bcace );};};if _fgaf .FontBBox !=nil {_afdf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fgaf .FontBBox );
};if _fgaf .FontMatrix !=nil {_afdf .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_fgaf .FontMatrix );};if _fgaf .CharProcs !=nil {_afdf .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_fgaf .CharProcs );};if _fgaf .Resources !=nil {_afdf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fgaf .Resources );
};return _fgaf ._acadb ;};func (_cgbe *PdfReader )newPdfAnnotationStrikeOut (_bbeaa *_adfb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_cggf :=PdfAnnotationStrikeOut {};_dbff ,_fgda :=_cgbe .newPdfAnnotationMarkupFromDict (_bbeaa );if _fgda !=nil {return nil ,_fgda ;
};_cggf .PdfAnnotationMarkup =_dbff ;_cggf .QuadPoints =_bbeaa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cggf ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _adfb .PdfObject ;ColorSpace _adfb .PdfObject ;Pattern _adfb .PdfObject ;Shading _adfb .PdfObject ;XObject _adfb .PdfObject ;Font _adfb .PdfObject ;ProcSet _adfb .PdfObject ;Properties _adfb .PdfObject ;_bccfgb *_adfb .PdfObjectDictionary ;
_dcegf *PdfPageResourcesColorspaces ;};func _cagaa (_fbead *_adfb .PdfObjectStream )(*PdfFunctionType4 ,error ){_ffdg :=&PdfFunctionType4 {};_ffdg ._bfaga =_fbead ;_bfafd :=_fbead .PdfObjectDictionary ;_dgdba ,_bacca :=_adfb .TraceToDirectObject (_bfafd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_adfb .PdfObjectArray );
if !_bacca {_bef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _dgdba .Len ()%2!=0{_bef .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bddbd ,_baea :=_dgdba .ToFloat64Array ();
if _baea !=nil {return nil ,_baea ;};_ffdg .Domain =_bddbd ;_dgdba ,_bacca =_adfb .TraceToDirectObject (_bfafd .Get ("\u0052\u0061\u006eg\u0065")).(*_adfb .PdfObjectArray );if _bacca {if _dgdba .Len ()< 0||_dgdba .Len ()%2!=0{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cfdg ,_ffgfc :=_dgdba .ToFloat64Array ();if _ffgfc !=nil {return nil ,_ffgfc ;};_ffdg .Range =_cfdg ;};_acadbf ,_baea :=_adfb .DecodeStream (_fbead );if _baea !=nil {return nil ,_baea ;};_ffdg ._bbcbaa =_acadbf ;_gebge :=_df .NewPSParser (_acadbf );
_fdbd ,_baea :=_gebge .Parse ();if _baea !=nil {return nil ,_baea ;};_ffdg .Program =_fdbd ;return _ffdg ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_ecd :=NewPdfAnnotation ();_ced :=&PdfAnnotationLine {};_ced .PdfAnnotation =_ecd ;_ced .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecd .SetContext (_ced );return _ced ;};func (_afec *PdfReader )newPdfActionLaunchFromDict (_gfb *_adfb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_dcd ,_bfaa :=_fda (_gfb .Get ("\u0046"));
if _bfaa !=nil {return nil ,_bfaa ;};return &PdfActionLaunch {Win :_gfb .Get ("\u0057\u0069\u006e"),Mac :_gfb .Get ("\u004d\u0061\u0063"),Unix :_gfb .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_gfb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dcd },nil ;
};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_adfb .PdfObjectName ;Colorants _adfb .PdfObject ;Process _adfb .PdfObject ;MixingHints _adfb .PdfObject ;_fcdb *_adfb .PdfIndirectObject ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_fdeaa *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_fdeaa .ToPdfOutline ().PdfOutlineTreeNode ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_bdgac *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_afdc :=range pages {_afdc =_afdc .Duplicate ();_dcgca (_afdc );_bdgac ._gde =append (_bdgac ._gde ,_afdc );};};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_adfb .PdfObjectArray ;TI *_adfb .PdfObjectInteger ;I *_adfb .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_bbg *PdfActionRendition )ToPdfObject ()_adfb .PdfObject {_bbg .PdfAction .ToPdfObject ();_bgc :=_bbg ._ca ;_efc :=_bgc .PdfObject .(*_adfb .PdfObjectDictionary );_efc .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeRendition )));_efc .SetIfNotNil ("\u0052",_bbg .R );
_efc .SetIfNotNil ("\u0041\u004e",_bbg .AN );_efc .SetIfNotNil ("\u004f\u0050",_bbg .OP );_efc .SetIfNotNil ("\u004a\u0053",_bbg .JS );return _bgc ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_dfbff *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// Width returns the width of `rect`.
func (_ebeg *PdfRectangle )Width ()float64 {return _dc .Abs (_ebeg .Urx -_ebeg .Llx )};const (_dggc =0x00001;_bfgg =0x00002;_cabab =0x00004;_aaed =0x00008;_fcgaa =0x00020;_fgcgb =0x00040;_gdbf =0x10000;_efcbb =0x20000;_afded =0x40000;);

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _adfb .PdfObject ;Flags _adfb .PdfObject ;};var _edgb =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// ToPdfObject returns the PDF representation of the colorspace.
func (_efec *PdfColorspaceDeviceGray )ToPdfObject ()_adfb .PdfObject {return _adfb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_fcbd *DSS )addCRLs (_egdgf [][]byte )([]*_adfb .PdfObjectStream ,error ){return _fcbd .add (&_fcbd .CRLs ,_fcbd ._dcafc ,_egdgf );
};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_afgaa *Image )ConvertToBinary ()error {if _afgaa .ColorComponents ==1&&_afgaa .BitsPerComponent ==1{return nil ;};_adbad ,_dcga :=_afgaa .ToGoImage ();if _dcga !=nil {return _dcga ;};_begfd ,_dcga :=_afe .MonochromeConverter .Convert (_adbad );if _dcga !=nil {return _dcga ;
};_afgaa .Data =_begfd .Base ().Data ;_afgaa ._befaf ,_dcga =_afe .ScaleAlphaToMonochrome (_afgaa ._befaf ,int (_afgaa .Width ),int (_afgaa .Height ));if _dcga !=nil {return _dcga ;};_afgaa .BitsPerComponent =1;_afgaa .ColorComponents =1;_afgaa ._cdcd =nil ;
return nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_afbb *PdfPage )HasXObjectByName (name _adfb .PdfObjectName )bool {_acbba ,_dbddc :=_afbb .Resources .XObject .(*_adfb .PdfObjectDictionary );if !_dbddc {return false ;};if _adge :=_acbba .Get (name );_adge !=nil {return true ;};return false ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_ddcfe *PdfPage )error ;};func _ddee (_ecdea _adfb .PdfObject )(*PdfFontDescriptor ,error ){_bdfff :=&PdfFontDescriptor {};_ecdea =_adfb .ResolveReference (_ecdea );if _ddeeb ,_bcec :=_ecdea .(*_adfb .PdfIndirectObject );
_bcec {_bdfff ._dbgdb =_ddeeb ;_ecdea =_ddeeb .PdfObject ;};_fbgce ,_cecd :=_adfb .GetDict (_ecdea );if !_cecd {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ecdea );
return nil ,_adfb .ErrTypeError ;};if _dfge :=_fbgce .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_dfge !=nil {_bdfff .FontName =_dfge ;}else {_bef .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_gdfd ,_ :=_adfb .GetName (_bdfff .FontName );if _acce :=_fbgce .Get ("\u0054\u0079\u0070\u0065");_acce !=nil {_acbgf ,_eeece :=_acce .(*_adfb .PdfObjectName );if !_eeece ||string (*_acbgf )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_bef .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_acce ,_gdfd ,_bdfff .FontName );
};}else {_bef .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gdfd ,_bdfff .FontName );
};_bdfff .FontFamily =_fbgce .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_bdfff .FontStretch =_fbgce .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_bdfff .FontWeight =_fbgce .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_bdfff .Flags =_fbgce .Get ("\u0046\u006c\u0061g\u0073");_bdfff .FontBBox =_fbgce .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_bdfff .ItalicAngle =_fbgce .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_bdfff .Ascent =_fbgce .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_bdfff .Descent =_fbgce .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_bdfff .Leading =_fbgce .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_bdfff .CapHeight =_fbgce .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_bdfff .XHeight =_fbgce .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_bdfff .StemV =_fbgce .Get ("\u0053\u0074\u0065m\u0056");_bdfff .StemH =_fbgce .Get ("\u0053\u0074\u0065m\u0048");_bdfff .AvgWidth =_fbgce .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_bdfff .MaxWidth =_fbgce .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_bdfff .MissingWidth =_fbgce .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_bdfff .FontFile =_fbgce .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_bdfff .FontFile2 =_fbgce .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_bdfff .FontFile3 =_fbgce .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_bdfff .CharSet =_fbgce .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_bdfff .Style =_fbgce .Get ("\u0053\u0074\u0079l\u0065");_bdfff .Lang =_fbgce .Get ("\u004c\u0061\u006e\u0067");
_bdfff .FD =_fbgce .Get ("\u0046\u0044");_bdfff .CIDSet =_fbgce .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _bdfff .Flags !=nil {if _adab ,_cdff :=_adfb .GetIntVal (_bdfff .Flags );_cdff {_bdfff ._degb =_adab ;};};if _bdfff .MissingWidth !=nil {if _fdfdea ,_efdb :=_adfb .GetNumberAsFloat (_bdfff .MissingWidth );
_efdb ==nil {_bdfff ._fafc =_fdfdea ;};};if _bdfff .FontFile !=nil {_ccea ,_gbeaf :=_fgfdb (_bdfff .FontFile );if _gbeaf !=nil {return _bdfff ,_gbeaf ;};_bef .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_ccea );_bdfff .fontFile =_ccea ;
};if _bdfff .FontFile2 !=nil {_fcbb ,_bfadb :=_ga .NewFontFile2FromPdfObject (_bdfff .FontFile2 );if _bfadb !=nil {return _bdfff ,_bfadb ;};_bef .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_fcbb .String ());_bdfff ._bagcb =&_fcbb ;
};return _bdfff ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_bcac *PdfAppender )UpdatePage (page *PdfPage ){_bcac .updateObjectsDeep (page .ToPdfObject (),nil )};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_cedb *modelManager )GetPrimitiveFromModel (model PdfModel )_adfb .PdfObject {_cdfa ,_cceecc :=_cedb ._cbeca [model ];if !_cceecc {return nil ;};return _cdfa ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _adfb .PdfObject ;PreserveRB _adfb .PdfObject ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bdeef *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bdeef .baseFields ()._ebcbf !=nil {return _bdeef .baseFields ()._ebcbf ;};if _faga :=_bdeef ._gdcf .getFontDescriptor ();_faga !=nil {return _faga ;};_bef .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bdeef );
return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dcgf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfaf :=vals [0];_ccac :=[]float64 {_bfaf };_cgdc ,_eagdf :=_dcgf .TintTransform .Evaluate (_ccac );
if _eagdf !=nil {_bef .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_eagdf );_bef .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_dcgf .TintTransform );
return nil ,_eagdf ;};_bef .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_cgdc ,_dcgf .AlternateSpace );
_ffca ,_eagdf :=_dcgf .AlternateSpace .ColorFromFloats (_cgdc );if _eagdf !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_eagdf );
return nil ,_eagdf ;};return _ffca ,nil ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gacbd :=&PdfColorspaceCalRGB {};_gacbd .BlackPoint =[]float64 {0.0,0.0,0.0};_gacbd .Gamma =[]float64 {1.0,1.0,1.0};_gacbd .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gacbd ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_egea *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_dfefb *PdfPage )Size ()(float64 ,float64 ,error ){_abea ,_cdbaa :=_dfefb .GetMediaBox ();if _cdbaa !=nil {return 0,0,_cdbaa ;};_abbff ,_aecad :=_abea .Width (),_abea .Height ();_gecf ,_cdbaa :=_dfefb .GetRotate ();if _cdbaa !=nil {_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_cdbaa .Error ());
};if _geeg :=_gecf ;_geeg %360!=0&&_geeg %90==0{if _edaae :=(360+_geeg %360)%360;_edaae ==90||_edaae ==270{_abbff ,_aecad =_aecad ,_abbff ;};};return _abbff ,_aecad ,nil ;};var (_gebbe _g .Mutex ;_cgdef ="";_agfgg _c .Time ;_bcdf ="";_cbag ="";_gdeca _c .Time ;
_ebdag ="";_bafef ="";_gdbde ="";);

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_adfb .PdfObjectArray ;Domain *_adfb .PdfObjectArray ;Function []PdfFunction ;Extend *_adfb .PdfObjectArray ;};

// G returns the value of the green component of the color.
func (_eegf *PdfColorDeviceRGB )G ()float64 {return _eegf [1]};func _dggdf (_dgcfg StdFontName )(pdfFontSimple ,error ){_beba ,_gccb :=_ga .NewStdFontByName (_dgcfg );if !_gccb {return pdfFontSimple {},ErrFontNotSupported ;};_cdggg :=_agbb (_beba );return _cdggg ,nil ;
};

// HasFontByName checks if has font resource by name.
func (_accf *PdfPage )HasFontByName (name _adfb .PdfObjectName )bool {_ffbd ,_bgeeg :=_accf .Resources .Font .(*_adfb .PdfObjectDictionary );if !_bgeeg {return false ;};if _bgegb :=_ffbd .Get (name );_bgegb !=nil {return true ;};return false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_fcgd *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fded :=vals [0];if _fded < 0.0||_fded > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fded );
return nil ,ErrColorOutOfRange ;};_cceb :=vals [1];if _cceb < 0.0||_cceb > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cceb );return nil ,ErrColorOutOfRange ;
};_cceff :=vals [2];if _cceff < 0.0||_cceff > 1.0{_bef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cceff );return nil ,ErrColorOutOfRange ;};_ffba :=NewPdfColorCalRGB (_fded ,_cceb ,_cceff );
return _ffba ,nil ;};func (_efda *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _efda ._ebcbf };

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_decda *Image )ToGoImage ()(_ade .Image ,error ){_bef .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_abefa ,_affeg :=_afe .NewImage (int (_decda .Width ),int (_decda .Height ),int (_decda .BitsPerComponent ),_decda .ColorComponents ,_decda .Data ,_decda ._befaf ,_decda ._cdcd );
if _affeg !=nil {return nil ,_affeg ;};return _abefa ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_gfdff *PdfPage )AppendContentStream (contentStr string )error {_acgeg ,_fgaec :=_gfdff .GetContentStreams ();if _fgaec !=nil {return _fgaec ;};if len (_acgeg )==0{_acgeg =[]string {contentStr };return _gfdff .SetContentStreams (_acgeg ,_adfb .NewFlateEncoder ());
};var _edcbee _ae .Buffer ;_edcbee .WriteString (_acgeg [len (_acgeg )-1]);_edcbee .WriteString ("\u000a");_edcbee .WriteString (contentStr );_acgeg [len (_acgeg )-1]=_edcbee .String ();return _gfdff .SetContentStreams (_acgeg ,_adfb .NewFlateEncoder ());
};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_cbdcf *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cbdcf .AlternateSpace ==nil {return nil ,_cfe .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _cbdcf .AlternateSpace .ColorToRGB (color );};func _aecgc (_babb *PdfField ,_cgacc _adfb .PdfObject )error {switch _babb .GetContext ().(type ){case *PdfFieldText :switch _fgdf :=_cgacc .(type ){case *_adfb .PdfObjectName :_ggeg :=_fgdf ;_bef .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ggeg .String ());
_babb .V =_adfb .MakeEncodedString (_fgdf .String (),true );case *_adfb .PdfObjectString :_babb .V =_adfb .MakeEncodedString (_fgdf .String (),true );default:_bef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_fgdf ,_fgdf );
};case *PdfFieldButton :switch _cgacc .(type ){case *_adfb .PdfObjectName :if len (_cgacc .String ())> 0{_babb .V =_cgacc ;_gdgg (_babb ,_cgacc );};case *_adfb .PdfObjectString :if len (_cgacc .String ())> 0{_babb .V =_adfb .MakeName (_cgacc .String ());
_gdgg (_babb ,_babb .V );};default:_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_babb .PartialName (),_cgacc );_babb .V =_cgacc ;};
case *PdfFieldChoice :switch _cgacc .(type ){case *_adfb .PdfObjectName :if len (_cgacc .String ())> 0{_babb .V =_adfb .MakeString (_cgacc .String ());_gdgg (_babb ,_cgacc );};case *_adfb .PdfObjectString :if len (_cgacc .String ())> 0{_babb .V =_cgacc ;
_gdgg (_babb ,_adfb .MakeName (_cgacc .String ()));};default:_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_babb .PartialName (),_cgacc );
_babb .V =_cgacc ;};case *PdfFieldSignature :_bef .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_babb .PartialName (),_cgacc );
};return nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_ffcf :=NewPdfAnnotation ();_aedd :=&PdfAnnotationFreeText {};_aedd .PdfAnnotation =_ffcf ;_aedd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffcf .SetContext (_aedd );return _aedd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bgb *PdfAction )GetContainingPdfObject ()_adfb .PdfObject {return _bgb ._ca };

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_ccdd *PdfColorspaceDeviceNAttributes )ToPdfObject ()_adfb .PdfObject {_gebfb :=_adfb .MakeDict ();if _ccdd .Subtype !=nil {_gebfb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ccdd .Subtype );};_gebfb .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_ccdd .Colorants );
_gebfb .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_ccdd .Process );_gebfb .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_ccdd .MixingHints );if _ccdd ._fcdb !=nil {_ccdd ._fcdb .PdfObject =_gebfb ;return _ccdd ._fcdb ;
};return _gebfb ;};

// AddOutlineTree adds outlines to a PDF file.
func (_ggagbc *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_ggagbc ._aaabd =outlineTree ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_cfcdce *PdfReader )GetIndirectObjectByNumber (number int )(_adfb .PdfObject ,error ){_bebad ,_dbgef :=_cfcdce ._aeea .LookupByNumber (number );return _bebad ,_dbgef ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_gecd *PdfShading )GetContainingPdfObject ()_adfb .PdfObject {return _gecd ._egbfe };func (_gdcd *PdfReader )newPdfActionGotoFromDict (_fcd *_adfb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fcd .Get ("\u0044")},nil ;
};

// ToInteger convert to an integer format.
func (_ecdeb *PdfColorDeviceGray )ToInteger (bits int )uint32 {_efbf :=_dc .Pow (2,float64 (bits ))-1;return uint32 (_efbf *_ecdeb .Val ());};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_deeb *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_fffg *PdfReader )lookupPageByObject (_ggddg _adfb .PdfObject )(*PdfPage ,error ){return nil ,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func (_cffbf *PdfReader )buildNameNodes (_bdbdae *_adfb .PdfIndirectObject ,_ffadb map[_adfb .PdfObject ]struct{})error {if _bdbdae ==nil {return nil ;};if _ ,_dedgf :=_ffadb [_bdbdae ];_dedgf {_bef .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_bdbdae .ObjectNumber );
return nil ;};_ffadb [_bdbdae ]=struct{}{};_bfbb ,_ddagc :=_bdbdae .PdfObject .(*_adfb .PdfObjectDictionary );if !_ddagc {return _cfe .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _ggbac ,_affdc :=_adfb .GetDict (_bfbb .Get ("\u0044\u0065\u0073t\u0073"));
_affdc {_gfgfa ,_egfab :=_adfb .GetArray (_ggbac .Get ("\u004b\u0069\u0064\u0073"));if !_egfab {return _cfe .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_bef .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gfgfa );
for _ecggg ,_ecaeg :=range _gfgfa .Elements (){_dbaaf ,_cfffb :=_adfb .GetIndirect (_ecaeg );if !_cfffb {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_dbaaf );
return _cfe .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_gfgfa .Set (_ecggg ,_dbaaf );_ggecf :=_cffbf .buildNameNodes (_dbaaf ,_ffadb );if _ggecf !=nil {return _ggecf ;
};};};if _fddb ,_facfg :=_adfb .GetDict (_bfbb );_facfg {if !_adfb .IsNullObject (_fddb .Get ("\u004b\u0069\u0064\u0073")){if _eacbc ,_agba :=_adfb .GetArray (_fddb .Get ("\u004b\u0069\u0064\u0073"));_agba {for _cecda ,_gaecfe :=range _eacbc .Elements (){if _cdab ,_ceafag :=_adfb .GetIndirect (_gaecfe );
_ceafag {_eacbc .Set (_cecda ,_cdab );_gfaab :=_cffbf .buildNameNodes (_cdab ,_ffadb );if _gfaab !=nil {return _gfaab ;};};};};};};return nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_adfb .PdfObjectStream ;OCSP []*_adfb .PdfObjectStream ;CRL []*_adfb .PdfObjectStream ;TU *_adfb .PdfObjectString ;TS *_adfb .PdfObjectString ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _adfb .PdfObject ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToPdfObject implements interface PdfModel.
func (_ecg *PdfActionHide )ToPdfObject ()_adfb .PdfObject {_ecg .PdfAction .ToPdfObject ();_ccc :=_ecg ._ca ;_feg :=_ccc .PdfObject .(*_adfb .PdfObjectDictionary );_feg .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeHide )));_feg .SetIfNotNil ("\u0054",_ecg .T );
_feg .SetIfNotNil ("\u0048",_ecg .H );return _ccc ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_fgae *PdfFieldButton )GetType ()ButtonType {_geag :=ButtonTypeCheckbox ;if _fgae .Ff !=nil {if (uint32 (*_fgae .Ff )&FieldFlagPushbutton .Mask ())> 0{_geag =ButtonTypePush ;}else if (uint32 (*_fgae .Ff )&FieldFlagRadio .Mask ())> 0{_geag =ButtonTypeRadio ;
};};return _geag ;};

// String returns a string that describes `font`.
func (_cdfgf *PdfFont )String ()string {_gcac :="";if _cdfgf ._gdcf .Encoder ()!=nil {_gcac =_cdfgf ._gdcf .Encoder ().String ();};return _ad .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_cdfgf ._gdcf ,_cdfgf .baseFields ().coreString (),_gcac );
};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ccebc *PdfField )IsTerminal ()bool {return len (_ccebc .Kids )==0};

// ValidateSignatures validates digital signatures in the document.
func (_fedag *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _fedag .AcroForm ==nil {return nil ,nil ;};if _fedag .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_adbaa *PdfSignature ;
_bgace *PdfField ;_ffdc SignatureHandler ;};var _egffc []*sigFieldPair ;for _ ,_ebab :=range _fedag .AcroForm .AllFields (){if _ebab .V ==nil {continue ;};if _ebfff ,_efbcc :=_adfb .GetDict (_ebab .V );_efbcc {if _febe ,_dedfbb :=_adfb .GetNameVal (_ebfff .Get ("\u0054\u0079\u0070\u0065"));
_dedfbb &&_febe =="\u0053\u0069\u0067"{_eegaa ,_gfgaa :=_adfb .GetIndirect (_ebab .V );if !_gfgaa {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_cabg ,_badbc :=_fedag .newPdfSignatureFromIndirect (_eegaa );if _badbc !=nil {return nil ,_badbc ;};var _bbbee SignatureHandler ;for _ ,_caaedd :=range handlers {if _caaedd .IsApplicable (_cabg ){_bbbee =_caaedd ;break ;};};
_egffc =append (_egffc ,&sigFieldPair {_adbaa :_cabg ,_bgace :_ebab ,_ffdc :_bbbee });};};};var _edgedc []SignatureValidationResult ;for _ ,_bbgdc :=range _egffc {_fcgbbb :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_bbgdc ._bgace }};
if _bbgdc ._ffdc ==nil {_fcgbbb .Errors =append (_fcgbbb .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_edgedc =append (_edgedc ,_fcgbbb );continue ;};_befafc ,_agebfg :=_bbgdc ._ffdc .NewDigest (_bbgdc ._adbaa );
if _agebfg !=nil {_fcgbbb .Errors =append (_fcgbbb .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_agebfg .Error ());_edgedc =append (_edgedc ,_fcgbbb );continue ;};_aeeed :=_bbgdc ._adbaa .ByteRange ;if _aeeed ==nil {_fcgbbb .Errors =append (_fcgbbb .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_edgedc =append (_edgedc ,_fcgbbb );continue ;};for _cgbea :=0;_cgbea < _aeeed .Len ();_cgbea =_cgbea +2{_dacb ,_ :=_adfb .GetNumberAsInt64 (_aeeed .Get (_cgbea ));_befca ,_ :=_adfb .GetIntVal (_aeeed .Get (_cgbea +1));if _ ,_adgeb :=_fedag ._ddafc .Seek (_dacb ,_gb .SeekStart );
_adgeb !=nil {return nil ,_adgeb ;};_dcbbd :=make ([]byte ,_befca );if _ ,_eebe :=_fedag ._ddafc .Read (_dcbbd );_eebe !=nil {return nil ,_eebe ;};_befafc .Write (_dcbbd );};var _dfccf SignatureValidationResult ;if _ggfga ,_fedf :=_bbgdc ._ffdc .(SignatureHandlerDocMDP );
_fedf {_dfccf ,_agebfg =_ggfga .ValidateWithOpts (_bbgdc ._adbaa ,_befafc ,SignatureHandlerDocMDPParams {Parser :_fedag ._aeea });}else {_dfccf ,_agebfg =_bbgdc ._ffdc .Validate (_bbgdc ._adbaa ,_befafc );};if _agebfg !=nil {_bef .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_agebfg ,_bbgdc ._ffdc );
_dfccf .Errors =append (_dfccf .Errors ,_agebfg .Error ());};_dfccf .Name =_bbgdc ._adbaa .Name .Decoded ();_dfccf .Reason =_bbgdc ._adbaa .Reason .Decoded ();if _bbgdc ._adbaa .M !=nil {_bbgfb ,_cfbaec :=NewPdfDate (_bbgdc ._adbaa .M .String ());if _cfbaec !=nil {_bef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfbaec );
_dfccf .Errors =append (_dfccf .Errors ,_cfbaec .Error ());continue ;};_dfccf .Date =_bbgfb ;};_dfccf .ContactInfo =_bbgdc ._adbaa .ContactInfo .Decoded ();_dfccf .Location =_bbgdc ._adbaa .Location .Decoded ();_dfccf .Fields =_fcgbbb .Fields ;_edgedc =append (_edgedc ,_dfccf );
};return _edgedc ,nil ;};func (_gdbd *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func (_gfafe *PdfPage )setContainer (_gcddf *_adfb .PdfIndirectObject ){_gcddf .PdfObject =_gfafe ._bdabg ;
_gfafe ._gcgac =_gcddf ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func _cggba (_ddabd []*_adfb .PdfObjectStream )*_adfb .PdfObjectArray {if len (_ddabd )==0{return nil ;};_bfeca :=make ([]_adfb .PdfObject ,0,len (_ddabd ));for _ ,_ececfa :=range _ddabd {_bfeca =append (_bfeca ,_ececfa );
};return _adfb .MakeArray (_bfeca ...);};

// ToPdfObject implements interface PdfModel.
func (_daa *PdfActionNamed )ToPdfObject ()_adfb .PdfObject {_daa .PdfAction .ToPdfObject ();_abe :=_daa ._ca ;_cb :=_abe .PdfObject .(*_adfb .PdfObjectDictionary );_cb .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeNamed )));_cb .SetIfNotNil ("\u004e",_daa .N );
return _abe ;};func (_adgec *PdfReader )buildPageList (_egeaa *_adfb .PdfIndirectObject ,_caaed *_adfb .PdfIndirectObject ,_ecdfdf map[_adfb .PdfObject ]struct{})error {if _egeaa ==nil {return nil ;};if _ ,_gabd :=_ecdfdf [_egeaa ];_gabd {_bef .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_egeaa .ObjectNumber );
return nil ;};_ecdfdf [_egeaa ]=struct{}{};_ddeede ,_dgeff :=_egeaa .PdfObject .(*_adfb .PdfObjectDictionary );if !_dgeff {return _cfe .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_ddddd ,_dgeff :=(*_ddeede ).Get ("\u0054\u0079\u0070\u0065").(*_adfb .PdfObjectName );
if !_dgeff {if _ddeede .Get ("\u004b\u0069\u0064\u0073")==nil {return _cfe .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_bef .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_ddddd =_adfb .MakeName ("\u0050\u0061\u0067e\u0073");_ddeede .Set ("\u0054\u0079\u0070\u0065",_ddddd );};_bef .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_ddddd ,_egeaa );
if *_ddddd =="\u0050\u0061\u0067\u0065"{_ffcb ,_egfbg :=_adgec .newPdfPageFromDict (_ddeede );if _egfbg !=nil {return _egfbg ;};_ffcb .setContainer (_egeaa );if _caaed !=nil {_ddeede .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_caaed );};_adgec ._fccad =append (_adgec ._fccad ,_egeaa );
_adgec .PageList =append (_adgec .PageList ,_ffcb );return nil ;};if *_ddddd !="\u0050\u0061\u0067e\u0073"{_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_ddddd );
return _cfe .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _caaed !=nil {_ddeede .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_caaed );};if !_adgec ._ggdgc {_dfce :=_adgec .traverseObjectData (_egeaa );if _dfce !=nil {return _dfce ;};};_bgcc ,_dbdfef :=_adgec ._aeea .Resolve (_ddeede .Get ("\u004b\u0069\u0064\u0073"));
if _dbdfef !=nil {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _dbdfef ;};var _eaec *_adfb .PdfObjectArray ;
_eaec ,_dgeff =_bgcc .(*_adfb .PdfObjectArray );if !_dgeff {_ggge ,_fggd :=_bgcc .(*_adfb .PdfIndirectObject );if !_fggd {return _cfe .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_eaec ,_dgeff =_ggge .PdfObject .(*_adfb .PdfObjectArray );
if !_dgeff {return _cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_bef .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_eaec );
for _daeef ,_cgdag :=range _eaec .Elements (){_accbc ,_gfgea :=_adfb .GetIndirect (_cgdag );if !_gfgea {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_accbc );
return _cfe .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_eaec .Set (_daeef ,_accbc );_dbdfef =_adgec .buildPageList (_accbc ,_egeaa ,_ecdfdf );if _dbdfef !=nil {return _dbdfef ;
};};return nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ImageToRGB convert an indexed image to RGB.
func (_bcde *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_bcde .Base .GetNumComponents ();if N < 1{return Image {},_ad .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_befc :=_afe .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._befaf ,img ._cdcd );_ege :=_fd .NewReader (img .getBase ());_feab :=_fd .NewWriter (_befc );var (_ccbff uint32 ;_cebba int ;_aeff error ;);for {_ccbff ,_aeff =_ege .ReadSample ();
if _aeff ==_gb .EOF {break ;}else if _aeff !=nil {return img ,_aeff ;};_cebba =int (_ccbff );_bef .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_cebba ,N ,len (_bcde ._edbc ));
if (_cebba +1)*N > len (_bcde ._edbc ){_cebba =len (_bcde ._edbc )/N -1;_bef .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_cebba );if _cebba < 0{_bef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _fbdb :=_cebba *N ;_fbdb < (_cebba +1)*N ;_fbdb ++{if _aeff =_feab .WriteSample (uint32 (_bcde ._edbc [_fbdb ]));_aeff !=nil {return img ,_aeff ;};};};return _bcde .Base .ImageToRGB (_ebfdg (&_befc ));};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_fbed *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// GetContainingPdfObject implements interface PdfModel.
func (_fgce *PdfFilespec )GetContainingPdfObject ()_adfb .PdfObject {return _fgce ._ggeb };

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_bdecf *OutlineItem )Insert (index uint ,item *OutlineItem ){_abag :=uint (len (_bdecf .Entries ));if index > _abag {index =_abag ;};_bdecf .Entries =append (_bdecf .Entries [:index ],append ([]*OutlineItem {item },_bdecf .Entries [index :]...)...);
};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_edg *PdfAnnotation )GetContext ()PdfModel {if _edg ==nil {return nil ;};return _edg ._acf ;};func (_fccf *pdfFontType0 )baseFields ()*fontCommon {return &_fccf .fontCommon };

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_eagc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_dgfc fontCommon )asPdfObjectDictionary (_cfec string )*_adfb .PdfObjectDictionary {if _cfec !=""&&_dgfc ._bbbdc !=""&&_cfec !=_dgfc ._bbbdc {_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_cfec ,_dgfc );
}else if _cfec ==""&&_dgfc ._bbbdc ==""{_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dgfc );
}else if _dgfc ._bbbdc ==""{_dgfc ._bbbdc =_cfec ;};_dbdfe :=_adfb .MakeDict ();_dbdfe .Set ("\u0054\u0079\u0070\u0065",_adfb .MakeName ("\u0046\u006f\u006e\u0074"));_dbdfe .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_adfb .MakeName (_dgfc ._gbed ));
_dbdfe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName (_dgfc ._bbbdc ));if _dgfc ._ebcbf !=nil {_dbdfe .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_dgfc ._ebcbf .ToPdfObject ());};if _dgfc ._cfagb !=nil {_dbdfe .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dgfc ._cfagb );
}else if _dgfc ._gdgf !=nil {_cgde ,_aecaf :=_dgfc ._gdgf .Stream ();if _aecaf !=nil {_bef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_aecaf );
}else {_dbdfe .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cgde );};};return _dbdfe ;};var _ pdfFont =(*pdfFontType0 )(nil );func (_eddg *PdfReader )newPdfFieldFromIndirectObject (_cfbdf *_adfb .PdfIndirectObject ,_eaaa *PdfField )(*PdfField ,error ){if _gecc ,_baag :=_eddg ._bcfbd .GetModelFromPrimitive (_cfbdf ).(*PdfField );
_baag {return _gecc ,nil ;};_aeda ,_gcgb :=_adfb .GetDict (_cfbdf );if !_gcgb {return nil ,_ad .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ffea :=NewPdfField ();_ffea ._dfgf =_cfbdf ;_ffea ._dfgf .PdfObject =_aeda ;if _daab ,_cgbf :=_adfb .GetName (_aeda .Get ("\u0046\u0054"));_cgbf {_ffea .FT =_daab ;};if _eaaa !=nil {_ffea .Parent =_eaaa ;};_ffea .T ,_ =_aeda .Get ("\u0054").(*_adfb .PdfObjectString );
_ffea .TU ,_ =_aeda .Get ("\u0054\u0055").(*_adfb .PdfObjectString );_ffea .TM ,_ =_aeda .Get ("\u0054\u004d").(*_adfb .PdfObjectString );_ffea .Ff ,_ =_aeda .Get ("\u0046\u0066").(*_adfb .PdfObjectInteger );_ffea .V =_aeda .Get ("\u0056");_ffea .DV =_aeda .Get ("\u0044\u0056");
_ffea .AA =_aeda .Get ("\u0041\u0041");if DA :=_aeda .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_adfb .GetString (DA );_ffea .VariableText =&VariableText {DA :DA };Q ,_ :=_aeda .Get ("\u0051").(*_adfb .PdfObjectInteger );DS ,_ :=_aeda .Get ("\u0044\u0053").(*_adfb .PdfObjectString );
RV :=_aeda .Get ("\u0052\u0056");_ffea .VariableText .Q =Q ;_ffea .VariableText .DS =DS ;_ffea .VariableText .RV =RV ;};_gbfg :=_ffea .FT ;if _gbfg ==nil &&_eaaa !=nil {_gbfg =_eaaa .FT ;};if _gbfg !=nil {switch *_gbfg {case "\u0054\u0078":_gbgae ,_bbdff :=_bbcd (_aeda );
if _bbdff !=nil {return nil ,_bbdff ;};_gbgae .PdfField =_ffea ;_ffea ._bafd =_gbgae ;case "\u0043\u0068":_dedd ,_acfda :=_effae (_aeda );if _acfda !=nil {return nil ,_acfda ;};_dedd .PdfField =_ffea ;_ffea ._bafd =_dedd ;case "\u0042\u0074\u006e":_cabec ,_dfag :=_dced (_aeda );
if _dfag !=nil {return nil ,_dfag ;};_cabec .PdfField =_ffea ;_ffea ._bafd =_cabec ;case "\u0053\u0069\u0067":_ebdc ,_abacf :=_eddg .newPdfFieldSignatureFromDict (_aeda );if _abacf !=nil {return nil ,_abacf ;};_ebdc .PdfField =_ffea ;_ffea ._bafd =_ebdc ;
default:_bef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_ffea .FT );return nil ,_cfe .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _dbbb ,_egdb :=_adfb .GetName (_aeda .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_egdb {if *_dbbb =="\u0057\u0069\u0064\u0067\u0065\u0074"{_agagb ,_decbf :=_eddg .newPdfAnnotationFromIndirectObject (_cfbdf );if _decbf !=nil {return nil ,_decbf ;
};_eaga ,_edcd :=_agagb .GetContext ().(*PdfAnnotationWidget );if !_edcd {return nil ,_cfe .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_eaga ._bbea =_ffea ;_eaga .Parent =_ffea ._dfgf ;
_ffea .Annotations =append (_ffea .Annotations ,_eaga );return _ffea ,nil ;};};_ddbb :=true ;if _eceb ,_fbga :=_adfb .GetArray (_aeda .Get ("\u004b\u0069\u0064\u0073"));_fbga {_gfee :=make ([]*_adfb .PdfIndirectObject ,0,_eceb .Len ());for _ ,_fecd :=range _eceb .Elements (){_dega ,_gdag :=_adfb .GetIndirect (_fecd );
if !_gdag {_gdga ,_dcccb :=_adfb .GetStream (_fecd );if _dcccb &&_gdga .PdfObjectDictionary !=nil {_ebda ,_ccebf :=_adfb .GetNameVal (_gdga .Get ("\u0054\u0079\u0070\u0065"));if _ccebf &&_ebda =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_bef .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_cfe .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_fefcb ,_ecafe :=_adfb .GetDict (_dega );
if !_ecafe {return nil ,ErrTypeCheck ;};if _ddbb {_ddbb =!_ebaa (_fefcb );};_gfee =append (_gfee ,_dega );};for _ ,_fbba :=range _gfee {if _ddbb {_dcad ,_deaa :=_eddg .newPdfAnnotationFromIndirectObject (_fbba );if _deaa !=nil {_bef .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_deaa );
return nil ,_deaa ;};_eaded ,_cffb :=_dcad ._acf .(*PdfAnnotationWidget );if !_cffb {return nil ,ErrTypeCheck ;};_eaded ._bbea =_ffea ;_ffea .Annotations =append (_ffea .Annotations ,_eaded );}else {_ffgf ,_ecff :=_eddg .newPdfFieldFromIndirectObject (_fbba ,_ffea );
if _ecff !=nil {_bef .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_ecff );return nil ,_ecff ;};_ffea .Kids =append (_ffea .Kids ,_ffgf );
};};};return _ffea ,nil ;};

// K returns the value of the key component of the color.
func (_bggd *PdfColorDeviceCMYK )K ()float64 {return _bggd [3]};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_bcda *PdfColorspaceLab )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddcb ,_aeacb :=_adfb .GetNumbersAsFloat (objects );
if _aeacb !=nil {return nil ,_aeacb ;};return _bcda .ColorFromFloats (_ddcb );};func _dabe (_bedaf _adfb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_badf :=NewPdfColorspaceSpecialIndexed ();if _gbda ,_abba :=_bedaf .(*_adfb .PdfIndirectObject );
_abba {_badf ._cacb =_gbda ;};_bedaf =_adfb .TraceToDirectObject (_bedaf );_fdfd ,_acbg :=_bedaf .(*_adfb .PdfObjectArray );if !_acbg {return nil ,_ad .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdfd .Len ()!=4{return nil ,_ad .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_bedaf =_fdfd .Get (0);_bgba ,_acbg :=_bedaf .(*_adfb .PdfObjectName );if !_acbg {return nil ,_ad .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_bgba !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_ad .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_bedaf =_fdfd .Get (1);_cbbd ,_deaf :=DetermineColorspaceNameFromPdfObject (_bedaf );if _deaf !=nil {return nil ,_deaf ;};if _cbbd =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_cbbd =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bef .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_cbbd );
return nil ,_gdbc ;};_gagf ,_deaf :=NewPdfColorspaceFromPdfObject (_bedaf );if _deaf !=nil {return nil ,_deaf ;};_badf .Base =_gagf ;_bedaf =_fdfd .Get (2);_bacb ,_deaf :=_adfb .GetNumberAsInt64 (_bedaf );if _deaf !=nil {return nil ,_deaf ;};if _bacb > 255{return nil ,_ad .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_badf .HiVal =int (_bacb );_bedaf =_fdfd .Get (3);_badf .Lookup =_bedaf ;_bedaf =_adfb .TraceToDirectObject (_bedaf );var _bged []byte ;if _eade ,_gbdc :=_bedaf .(*_adfb .PdfObjectString );_gbdc {_bged =_eade .Bytes ();_bef .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_bged );
}else if _gfgf ,_efcdc :=_bedaf .(*_adfb .PdfObjectStream );_efcdc {_bef .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_bedaf .String ());_bef .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gfgf .Stream ),_gfgf .Stream );
_dgae ,_gefg :=_adfb .DecodeStream (_gfgf );if _gefg !=nil {return nil ,_gefg ;};_bef .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_dgae ),_dgae );_bged =_dgae ;}else {_bef .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bedaf );
return nil ,_ad .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_bged )< _badf .Base .GetNumComponents ()*(_badf .HiVal +1){_bef .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_bef .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_bged ),_badf .Base .GetNumComponents (),_badf .HiVal );
}else {_bged =_bged [:_badf .Base .GetNumComponents ()*(_badf .HiVal +1)];};_badf ._edbc =_bged ;return _badf ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_fbef *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_fbef .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_fbef ._ecb =acroForm ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_cfcdc *_adfb .PdfIndirectObject ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_aeab *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_adfb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggddf ,_gaff :=_adfb .GetNumbersAsFloat (objects );
if _gaff !=nil {return nil ,_gaff ;};return _aeab .ColorFromFloats (_ggddf );};func (_affddd *PdfWriter )optimizeDocument ()error {if _affddd ._bbef ==nil {return nil ;};_aedcd ,_ddbdg :=_adfb .GetDict (_affddd ._bcfdf );if !_ddbdg {return _cfe .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fgdd :=_da .Document {ID :[2]string {_affddd ._cgccef ,_affddd ._bbaba },Version :_affddd ._dbbecb ,Objects :_affddd ._fcefd ,Info :_aedcd ,Crypt :_affddd ._bfagb ,UseHashBasedID :_affddd ._ddfag };if _bafb :=_affddd ._bbef .ApplyStandard (&_fgdd );
_bafb !=nil {return _bafb ;};_affddd ._cgccef ,_affddd ._bbaba =_fgdd .ID [0],_fgdd .ID [1];_affddd ._dbbecb =_fgdd .Version ;_affddd ._fcefd =_fgdd .Objects ;_affddd ._bcfdf .PdfObject =_fgdd .Info ;_affddd ._ddfag =_fgdd .UseHashBasedID ;_affddd ._bfagb =_fgdd .Crypt ;
_dccfa :=make (map[_adfb .PdfObject ]struct{},len (_affddd ._fcefd ));for _ ,_egbb :=range _affddd ._fcefd {_dccfa [_egbb ]=struct{}{};};_affddd ._bfgf =_dccfa ;return nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_ggadb *PdfFieldButton )IsCheckbox ()bool {return _ggadb .GetType ()==ButtonTypeCheckbox };

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_cfcab *_adfb .PdfIndirectObject ;_gdfab *_adfb .PdfIndirectObject ;_egee map[_adfb .PdfObject ]struct{};_fcefd []_adfb .PdfObject ;_bfgf map[_adfb .PdfObject ]struct{};_fadba []*_adfb .PdfIndirectObject ;_aaabd *PdfOutlineTreeNode ;
_bcdaf *_adfb .PdfObjectDictionary ;_gdad []_adfb .PdfObject ;_bcfdf *_adfb .PdfIndirectObject ;_ebbda *_b .Writer ;_dgbga int64 ;_aabaf error ;_bfagb *_adfb .PdfCrypt ;_cfaffa *_adfb .PdfObjectDictionary ;_bgbdb *_adfb .PdfIndirectObject ;_dafea *_adfb .PdfObjectArray ;
_dbbecb _adfb .Version ;_eebgd *bool ;_caecc map[_adfb .PdfObject ][]*_adfb .PdfObjectDictionary ;_bfeb *PdfAcroForm ;_fbfc Optimizer ;_bbef StandardApplier ;_aaead map[int ]crossReference ;_acabcf int64 ;ObjNumOffset int ;_fbggb bool ;_abedb _adfb .XrefTable ;
_cgcded int64 ;_begea int64 ;_cgbb map[_adfb .PdfObject ]int64 ;_ecdcgg map[_adfb .PdfObject ]struct{};_fbgdg string ;_gaffc []*PdfOutputIntent ;_ddfag bool ;_cgccef ,_bbaba string ;};func _dced (_eaef *_adfb .PdfObjectDictionary )(*PdfFieldButton ,error ){_adgaf :=&PdfFieldButton {};
_adgaf .PdfField =NewPdfField ();_adgaf .PdfField .SetContext (_adgaf );_adgaf .Opt ,_ =_adfb .GetArray (_eaef .Get ("\u004f\u0070\u0074"));_accgf :=NewPdfAnnotationWidget ();_accgf .A ,_ =_adfb .GetDict (_eaef .Get ("\u0041"));_accgf .AP ,_ =_adfb .GetDict (_eaef .Get ("\u0041\u0050"));
_accgf .SetContext (_adgaf );_adgaf .PdfField .Annotations =append (_adgaf .PdfField .Annotations ,_accgf );return _adgaf ,nil ;};

// SetReason sets the `Reason` field of the signature.
func (_gccdf *PdfSignature )SetReason (reason string ){_gccdf .Reason =_adfb .MakeString (reason )};

// L returns the value of the L component of the color.
func (_dfg *PdfColorLab )L ()float64 {return _dfg [0]};func _bgdcd (_egcb *PdfField )[]*PdfField {_dbec :=[]*PdfField {_egcb };for _ ,_fbcb :=range _egcb .Kids {_dbec =append (_dbec ,_bgdcd (_fbcb )...);};return _dbec ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_dab :=&PdfAction {};_dab ._ca =_adfb .MakeIndirectObject (_adfb .MakeDict ());return _dab ;};

// Add appends an outline item as a child of the current outline item.
func (_ddadde *OutlineItem )Add (item *OutlineItem ){_ddadde .Entries =append (_ddadde .Entries ,item )};

// SetBorderWidth sets the style's border width.
func (_fdag *PdfBorderStyle )SetBorderWidth (width float64 ){_fdag .W =&width };

// WriteString outputs the object as it is to be written to file.
func (_gfdac *PdfTransformParamsDocMDP )WriteString ()string {return _gfdac .ToPdfObject ().WriteString ();};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _adfb .PdfObject ;};func (_eggfe *PdfFunctionType0 )processSamples ()error {_efcc :=_fd .ResampleBytes (_eggfe ._ebfab ,_eggfe .BitsPerSample );_eggfe ._ceeg =_efcc ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gfe *PdfActionGoToE )ToPdfObject ()_adfb .PdfObject {_gfe .PdfAction .ToPdfObject ();_ddb :=_gfe ._ca ;_ffa :=_ddb .PdfObject .(*_adfb .PdfObjectDictionary );_ffa .SetIfNotNil ("\u0053",_adfb .MakeName (string (ActionTypeGoToE )));if _gfe .F !=nil {_ffa .Set ("\u0046",_gfe .F .ToPdfObject ());
};_ffa .SetIfNotNil ("\u0044",_gfe .D );_ffa .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gfe .NewWindow );_ffa .SetIfNotNil ("\u0054",_gfe .T );return _ddb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbcff *PdfShadingType1 )ToPdfObject ()_adfb .PdfObject {_fbcff .PdfShading .ToPdfObject ();_ccedd ,_fdgbe :=_fbcff .getShadingDict ();if _fdgbe !=nil {_bef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbcff .Domain !=nil {_ccedd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbcff .Domain );};if _fbcff .Matrix !=nil {_ccedd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fbcff .Matrix );};if _fbcff .Function !=nil {if len (_fbcff .Function )==1{_ccedd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbcff .Function [0].ToPdfObject ());
}else {_agbea :=_adfb .MakeArray ();for _ ,_ggbc :=range _fbcff .Function {_agbea .Append (_ggbc .ToPdfObject ());};_ccedd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agbea );};};return _fbcff ._egbfe ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func _ecggd (_eaddc *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_eaddc }};func _ccdea (_fcdbed *_adfb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_fbagg :=PdfShadingType7 {};
_ggdfc :=_fcdbed .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ggdfc ==nil {_bef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_deaab ,_gbee :=_ggdfc .(*_adfb .PdfObjectInteger );if !_gbee {_bef .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggdfc );
return nil ,_adfb .ErrTypeError ;};_fbagg .BitsPerCoordinate =_deaab ;_ggdfc =_fcdbed .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggdfc ==nil {_bef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_deaab ,_gbee =_ggdfc .(*_adfb .PdfObjectInteger );if !_gbee {_bef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggdfc );
return nil ,_adfb .ErrTypeError ;};_fbagg .BitsPerComponent =_deaab ;_ggdfc =_fcdbed .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ggdfc ==nil {_bef .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_deaab ,_gbee =_ggdfc .(*_adfb .PdfObjectInteger );if !_gbee {_bef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggdfc );
return nil ,_adfb .ErrTypeError ;};_fbagg .BitsPerComponent =_deaab ;_ggdfc =_fcdbed .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggdfc ==nil {_bef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bfece ,_gbee :=_ggdfc .(*_adfb .PdfObjectArray );if !_gbee {_bef .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggdfc );
return nil ,_adfb .ErrTypeError ;};_fbagg .Decode =_bfece ;if _edfa :=_fcdbed .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_edfa !=nil {_fbagg .Function =[]PdfFunction {};if _geebf ,_aede :=_edfa .(*_adfb .PdfObjectArray );_aede {for _ ,_fdfbg :=range _geebf .Elements (){_ffebb ,_gfbac :=_ebba (_fdfbg );
if _gfbac !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfbac );return nil ,_gfbac ;};_fbagg .Function =append (_fbagg .Function ,_ffebb );
};}else {_dfdef ,_cddcf :=_ebba (_edfa );if _cddcf !=nil {_bef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cddcf );return nil ,_cddcf ;
};_fbagg .Function =append (_fbagg .Function ,_dfdef );};};return &_fbagg ,nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_dgb .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _c .Time ;};type pdfCIDFontType2 struct{fontCommon ;_bfgge *_adfb .PdfIndirectObject ;_gcdeg _ba .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_adfb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _adfb .PdfObject ;W _adfb .PdfObject ;DW2 _adfb .PdfObject ;W2 _adfb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _adfb .PdfObject ;_bdfe map[_ba .CharCode ]float64 ;_dcccf float64 ;_gccea map[rune ]int ;};func (_egcc *PdfReader )newPdfAnnotationTextFromDict (_dbf *_adfb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_bcg :=PdfAnnotationText {};_gcaf ,_bbd :=_egcc .newPdfAnnotationMarkupFromDict (_dbf );
if _bbd !=nil {return nil ,_bbd ;};_bcg .PdfAnnotationMarkup =_gcaf ;_bcg .Open =_dbf .Get ("\u004f\u0070\u0065\u006e");_bcg .Name =_dbf .Get ("\u004e\u0061\u006d\u0065");_bcg .State =_dbf .Get ("\u0053\u0074\u0061t\u0065");_bcg .StateModel =_dbf .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_bcg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_baec *PdfAnnotationTrapNet )ToPdfObject ()_adfb .PdfObject {_baec .PdfAnnotation .ToPdfObject ();_age :=_baec ._ged ;_deec :=_age .PdfObject .(*_adfb .PdfObjectDictionary );_deec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_adfb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _age ;};

// CustomKeys returns all custom info keys as list.
func (_ebcb *PdfInfo )CustomKeys ()[]string {if _ebcb ._cgdf ==nil {return nil ;};_gbffb :=make ([]string ,len (_ebcb ._cgdf .Keys ()));for _ ,_gbcc :=range _ebcb ._cgdf .Keys (){_gbffb =append (_gbffb ,_gbcc .String ());};return _gbffb ;};

// GetContentStream returns the pattern cell's content stream
func (_cgad *PdfTilingPattern )GetContentStream ()([]byte ,error ){_ceaec ,_ ,_gabbb :=_cgad .GetContentStreamWithEncoder ();return _ceaec ,_gabbb ;};

// Items returns all children outline items.
func (_bgdee *Outline )Items ()[]*OutlineItem {return _bgdee .Entries };